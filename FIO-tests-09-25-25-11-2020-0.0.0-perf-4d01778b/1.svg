<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="726" onload="init(evt)" viewBox="0 0 1200 726" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="726.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="709" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="709" > </text>
<g id="frames">
<g >
<title>runtime.goexit (35 samples, 0.60%)</title><rect x="1182.9" y="645" width="7.1" height="15.0" fill="rgb(225,32,33)" rx="2" ry="2" />
<text  x="1185.87" y="655.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.12%)</title><rect x="1182.9" y="389" width="1.4" height="15.0" fill="rgb(222,162,46)" rx="2" ry="2" />
<text  x="1185.87" y="399.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="1182.5" y="533" width="0.4" height="15.0" fill="rgb(226,3,16)" rx="2" ry="2" />
<text  x="1185.46" y="543.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="12.6" y="645" width="0.3" height="15.0" fill="rgb(210,183,13)" rx="2" ry="2" />
<text  x="15.65" y="655.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (1 samples, 0.02%)</title><rect x="1185.7" y="533" width="0.2" height="15.0" fill="rgb(207,43,2)" rx="2" ry="2" />
<text  x="1188.72" y="543.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="1182.5" y="389" width="0.4" height="15.0" fill="rgb(245,94,3)" rx="2" ry="2" />
<text  x="1185.46" y="399.5" ></text>
</g>
<g >
<title>syscall.RawSyscall (1 samples, 0.02%)</title><rect x="1188.8" y="437" width="0.2" height="15.0" fill="rgb(218,42,24)" rx="2" ry="2" />
<text  x="1191.78" y="447.5" ></text>
</g>
<g >
<title>[unknown] (123 samples, 2.12%)</title><rect x="12.9" y="645" width="25.0" height="15.0" fill="rgb(254,99,33)" rx="2" ry="2" />
<text  x="15.85" y="655.5" >[..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1189.0" y="149" width="0.2" height="15.0" fill="rgb(240,62,0)" rx="2" ry="2" />
<text  x="1191.98" y="159.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (1 samples, 0.02%)</title><rect x="1188.2" y="453" width="0.2" height="15.0" fill="rgb(213,18,11)" rx="2" ry="2" />
<text  x="1191.17" y="463.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1186.7" y="357" width="0.2" height="15.0" fill="rgb(235,150,27)" rx="2" ry="2" />
<text  x="1189.74" y="367.5" ></text>
</g>
<g >
<title>runtime.adjustframe (1 samples, 0.02%)</title><rect x="1189.6" y="485" width="0.2" height="15.0" fill="rgb(226,70,0)" rx="2" ry="2" />
<text  x="1192.59" y="495.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.6" y="373" width="0.2" height="15.0" fill="rgb(210,154,48)" rx="2" ry="2" />
<text  x="13.61" y="383.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="44.6" y="469" width="0.2" height="15.0" fill="rgb(225,22,12)" rx="2" ry="2" />
<text  x="47.63" y="479.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).literalStore (2 samples, 0.03%)</title><rect x="1184.7" y="453" width="0.4" height="15.0" fill="rgb(227,99,16)" rx="2" ry="2" />
<text  x="1187.70" y="463.5" ></text>
</g>
<g >
<title>github.com/shirou/gopsutil/mem.VirtualMemoryWithContext (8 samples, 0.14%)</title><rect x="1186.3" y="549" width="1.7" height="15.0" fill="rgb(224,22,37)" rx="2" ry="2" />
<text  x="1189.33" y="559.5" ></text>
</g>
<g >
<title>github.com/lf-edge/eve/pkg/pillar/pubsub/socketdriver.(*Subscriber).connectAndRead (1 samples, 0.02%)</title><rect x="1185.7" y="613" width="0.2" height="15.0" fill="rgb(235,103,5)" rx="2" ry="2" />
<text  x="1188.72" y="623.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).rescanLiteral (1 samples, 0.02%)</title><rect x="1184.5" y="469" width="0.2" height="15.0" fill="rgb(253,81,11)" rx="2" ry="2" />
<text  x="1187.50" y="479.5" ></text>
</g>
<g >
<title>syscall.forkAndExecInChild (1 samples, 0.02%)</title><rect x="1188.8" y="453" width="0.2" height="15.0" fill="rgb(222,171,50)" rx="2" ry="2" />
<text  x="1191.78" y="463.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.12%)</title><rect x="1182.9" y="341" width="1.4" height="15.0" fill="rgb(238,168,2)" rx="2" ry="2" />
<text  x="1185.87" y="351.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.6" y="405" width="0.2" height="15.0" fill="rgb(239,140,31)" rx="2" ry="2" />
<text  x="13.61" y="415.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="43.8" y="405" width="0.2" height="15.0" fill="rgb(219,98,40)" rx="2" ry="2" />
<text  x="46.82" y="415.5" ></text>
</g>
<g >
<title>internal/poll.ignoringEINTR (7 samples, 0.12%)</title><rect x="1182.9" y="549" width="1.4" height="15.0" fill="rgb(214,142,6)" rx="2" ry="2" />
<text  x="1185.87" y="559.5" ></text>
</g>
<g >
<title>github.com/lf-edge/eve/pkg/pillar/cmd/domainmgr.publishProcessMetric (1 samples, 0.02%)</title><rect x="1188.4" y="597" width="0.2" height="15.0" fill="rgb(244,135,19)" rx="2" ry="2" />
<text  x="1191.37" y="607.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1189.0" y="245" width="0.2" height="15.0" fill="rgb(246,2,6)" rx="2" ry="2" />
<text  x="1191.98" y="255.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.6" y="597" width="0.2" height="15.0" fill="rgb(239,88,12)" rx="2" ry="2" />
<text  x="13.61" y="607.5" ></text>
</g>
<g >
<title>[jq] (3 samples, 0.05%)</title><rect x="12.0" y="629" width="0.6" height="15.0" fill="rgb(206,111,26)" rx="2" ry="2" />
<text  x="15.04" y="639.5" ></text>
</g>
<g >
<title>runtime.sysmon (4 samples, 0.07%)</title><rect x="1182.1" y="565" width="0.8" height="15.0" fill="rgb(222,22,18)" rx="2" ry="2" />
<text  x="1185.05" y="575.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1184.9" y="277" width="0.2" height="15.0" fill="rgb(211,9,10)" rx="2" ry="2" />
<text  x="1187.91" y="287.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1189.0" y="213" width="0.2" height="15.0" fill="rgb(250,24,0)" rx="2" ry="2" />
<text  x="1191.98" y="223.5" ></text>
</g>
<g >
<title>[unknown] (30 samples, 0.52%)</title><rect x="37.9" y="581" width="6.1" height="15.0" fill="rgb(229,62,40)" rx="2" ry="2" />
<text  x="40.91" y="591.5" ></text>
</g>
<g >
<title>[unknown] (5,581 samples, 96.36%)</title><rect x="45.0" y="645" width="1137.1" height="15.0" fill="rgb(242,99,18)" rx="2" ry="2" />
<text  x="48.04" y="655.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1186.5" y="357" width="0.2" height="15.0" fill="rgb(242,55,49)" rx="2" ry="2" />
<text  x="1189.54" y="367.5" ></text>
</g>
<g >
<title>github.com/shirou/gopsutil/process.(*Process).fillFromTIDStat (1 samples, 0.02%)</title><rect x="1185.9" y="501" width="0.2" height="15.0" fill="rgb(253,218,44)" rx="2" ry="2" />
<text  x="1188.93" y="511.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1181.9" y="357" width="0.2" height="15.0" fill="rgb(223,213,45)" rx="2" ry="2" />
<text  x="1184.85" y="367.5" ></text>
</g>
<g >
<title>net/http.(*persistConn).writeLoop (1 samples, 0.02%)</title><rect x="1189.0" y="629" width="0.2" height="15.0" fill="rgb(215,10,20)" rx="2" ry="2" />
<text  x="1191.98" y="639.5" ></text>
</g>
<g >
<title>[unknown] (30 samples, 0.52%)</title><rect x="37.9" y="613" width="6.1" height="15.0" fill="rgb(253,218,5)" rx="2" ry="2" />
<text  x="40.91" y="623.5" ></text>
</g>
<g >
<title>runtime.clone (4 samples, 0.07%)</title><rect x="1182.1" y="613" width="0.8" height="15.0" fill="rgb(215,204,34)" rx="2" ry="2" />
<text  x="1185.05" y="623.5" ></text>
</g>
<g >
<title>internal/poll.runtime_pollOpen (1 samples, 0.02%)</title><rect x="1186.5" y="437" width="0.2" height="15.0" fill="rgb(224,146,7)" rx="2" ry="2" />
<text  x="1189.54" y="447.5" ></text>
</g>
<g >
<title>runtime.morestack (1 samples, 0.02%)</title><rect x="1184.9" y="405" width="0.2" height="15.0" fill="rgb(214,215,40)" rx="2" ry="2" />
<text  x="1187.91" y="415.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Read.func1 (1 samples, 0.02%)</title><rect x="1186.3" y="405" width="0.2" height="15.0" fill="rgb(239,208,8)" rx="2" ry="2" />
<text  x="1189.33" y="415.5" ></text>
</g>
<g >
<title>bytes.makeSlice (1 samples, 0.02%)</title><rect x="1188.0" y="453" width="0.2" height="15.0" fill="rgb(237,30,54)" rx="2" ry="2" />
<text  x="1190.96" y="463.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="12.6" y="517" width="0.3" height="15.0" fill="rgb(225,8,41)" rx="2" ry="2" />
<text  x="15.65" y="527.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.6" y="309" width="0.2" height="15.0" fill="rgb(223,59,47)" rx="2" ry="2" />
<text  x="13.61" y="319.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1181.9" y="325" width="0.2" height="15.0" fill="rgb(224,111,40)" rx="2" ry="2" />
<text  x="1184.85" y="335.5" ></text>
</g>
<g >
<title>github.com/lf-edge/eve/pkg/pillar/cmd/ledmanager.uncachedDiskRead (7 samples, 0.12%)</title><rect x="1182.9" y="597" width="1.4" height="15.0" fill="rgb(247,170,30)" rx="2" ry="2" />
<text  x="1185.87" y="607.5" ></text>
</g>
<g >
<title>runtime.handoffp (1 samples, 0.02%)</title><rect x="1189.2" y="565" width="0.2" height="15.0" fill="rgb(234,115,51)" rx="2" ry="2" />
<text  x="1192.19" y="575.5" ></text>
</g>
<g >
<title>runtime.markrootBlock (1 samples, 0.02%)</title><rect x="1189.8" y="565" width="0.2" height="15.0" fill="rgb(254,2,24)" rx="2" ry="2" />
<text  x="1192.80" y="575.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1181.9" y="293" width="0.2" height="15.0" fill="rgb(235,152,29)" rx="2" ry="2" />
<text  x="1184.85" y="303.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.07%)</title><rect x="1182.1" y="629" width="0.8" height="15.0" fill="rgb(237,103,3)" rx="2" ry="2" />
<text  x="1185.05" y="639.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="44.4" y="565" width="0.2" height="15.0" fill="rgb(240,181,12)" rx="2" ry="2" />
<text  x="47.43" y="575.5" ></text>
</g>
<g >
<title>runtime.findrunnable (1 samples, 0.02%)</title><rect x="1184.3" y="549" width="0.2" height="15.0" fill="rgb(232,35,39)" rx="2" ry="2" />
<text  x="1187.30" y="559.5" ></text>
</g>
<g >
<title>runtime.gcWriteBarrier (1 samples, 0.02%)</title><rect x="1184.5" y="437" width="0.2" height="15.0" fill="rgb(232,160,29)" rx="2" ry="2" />
<text  x="1187.50" y="447.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.10%)</title><rect x="1183.1" y="261" width="1.2" height="15.0" fill="rgb(229,183,8)" rx="2" ry="2" />
<text  x="1186.07" y="271.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="44.6" y="565" width="0.2" height="15.0" fill="rgb(242,209,0)" rx="2" ry="2" />
<text  x="47.63" y="575.5" ></text>
</g>
<g >
<title>syscall.Syscall (1 samples, 0.02%)</title><rect x="1189.0" y="453" width="0.2" height="15.0" fill="rgb(248,21,9)" rx="2" ry="2" />
<text  x="1191.98" y="463.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.6" y="533" width="0.2" height="15.0" fill="rgb(221,14,52)" rx="2" ry="2" />
<text  x="13.61" y="543.5" ></text>
</g>
<g >
<title>syscall.forkExec (1 samples, 0.02%)</title><rect x="1188.8" y="469" width="0.2" height="15.0" fill="rgb(230,117,29)" rx="2" ry="2" />
<text  x="1191.78" y="479.5" ></text>
</g>
<g >
<title>github.com/google/go-cmp/cmp.(*state).compareAny (1 samples, 0.02%)</title><rect x="1188.6" y="485" width="0.2" height="15.0" fill="rgb(243,103,45)" rx="2" ry="2" />
<text  x="1191.57" y="495.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1182.7" y="373" width="0.2" height="15.0" fill="rgb(242,88,43)" rx="2" ry="2" />
<text  x="1185.67" y="383.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1189.2" y="437" width="0.2" height="15.0" fill="rgb(214,94,24)" rx="2" ry="2" />
<text  x="1192.19" y="447.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.02%)</title><rect x="1189.2" y="517" width="0.2" height="15.0" fill="rgb(246,184,1)" rx="2" ry="2" />
<text  x="1192.19" y="527.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="1182.5" y="405" width="0.4" height="15.0" fill="rgb(226,110,43)" rx="2" ry="2" />
<text  x="1185.46" y="415.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="1181.6" y="437" width="0.5" height="15.0" fill="rgb(211,52,33)" rx="2" ry="2" />
<text  x="1184.65" y="447.5" ></text>
</g>
<g >
<title>github.com/shirou/gopsutil/process.(*Process).MemoryInfoWithContext (1 samples, 0.02%)</title><rect x="1188.0" y="549" width="0.2" height="15.0" fill="rgb(245,127,38)" rx="2" ry="2" />
<text  x="1190.96" y="559.5" ></text>
</g>
<g >
<title>runtime.epollctl (1 samples, 0.02%)</title><rect x="1186.5" y="421" width="0.2" height="15.0" fill="rgb(207,3,53)" rx="2" ry="2" />
<text  x="1189.54" y="431.5" ></text>
</g>
<g >
<title>runtime.makeslice (2 samples, 0.03%)</title><rect x="1187.4" y="517" width="0.4" height="15.0" fill="rgb(225,167,3)" rx="2" ry="2" />
<text  x="1190.35" y="527.5" ></text>
</g>
<g >
<title>swapper (5,581 samples, 96.36%)</title><rect x="45.0" y="661" width="1137.1" height="15.0" fill="rgb(236,177,25)" rx="2" ry="2" />
<text  x="48.04" y="671.5" >swapper</text>
</g>
<g >
<title>os.(*file).close (1 samples, 0.02%)</title><rect x="1188.2" y="533" width="0.2" height="15.0" fill="rgb(229,3,54)" rx="2" ry="2" />
<text  x="1191.17" y="543.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1189.0" y="101" width="0.2" height="15.0" fill="rgb(250,91,12)" rx="2" ry="2" />
<text  x="1191.98" y="111.5" ></text>
</g>
<g >
<title>internal/poll.ignoringEINTR (1 samples, 0.02%)</title><rect x="1189.0" y="485" width="0.2" height="15.0" fill="rgb(206,217,16)" rx="2" ry="2" />
<text  x="1191.98" y="495.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.6" y="341" width="0.2" height="15.0" fill="rgb(216,162,52)" rx="2" ry="2" />
<text  x="13.61" y="351.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.12%)</title><rect x="1182.9" y="405" width="1.4" height="15.0" fill="rgb(219,218,36)" rx="2" ry="2" />
<text  x="1185.87" y="415.5" ></text>
</g>
<g >
<title>github.com/google/go-cmp/cmp.(*state).compareStruct (1 samples, 0.02%)</title><rect x="1188.6" y="533" width="0.2" height="15.0" fill="rgb(219,132,0)" rx="2" ry="2" />
<text  x="1191.57" y="543.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.12%)</title><rect x="1182.9" y="373" width="1.4" height="15.0" fill="rgb(254,53,1)" rx="2" ry="2" />
<text  x="1185.87" y="383.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="44.4" y="629" width="0.2" height="15.0" fill="rgb(211,76,2)" rx="2" ry="2" />
<text  x="47.43" y="639.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="44.6" y="597" width="0.2" height="15.0" fill="rgb(246,25,6)" rx="2" ry="2" />
<text  x="47.63" y="607.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1189.0" y="229" width="0.2" height="15.0" fill="rgb(223,129,3)" rx="2" ry="2" />
<text  x="1191.98" y="239.5" ></text>
</g>
<g >
<title>os.(*file).close (1 samples, 0.02%)</title><rect x="1185.9" y="437" width="0.2" height="15.0" fill="rgb(245,136,35)" rx="2" ry="2" />
<text  x="1188.93" y="447.5" ></text>
</g>
<g >
<title>runtime.findfunc (1 samples, 0.02%)</title><rect x="1189.4" y="517" width="0.2" height="15.0" fill="rgb(239,149,20)" rx="2" ry="2" />
<text  x="1192.39" y="527.5" ></text>
</g>
<g >
<title>github.com/lf-edge/eve/pkg/pillar/pubsub/socketdriver.(*Subscriber).watchSock (1 samples, 0.02%)</title><rect x="1185.7" y="629" width="0.2" height="15.0" fill="rgb(217,9,21)" rx="2" ry="2" />
<text  x="1188.72" y="639.5" ></text>
</g>
<g >
<title>runtime.systemstack (3 samples, 0.05%)</title><rect x="1189.4" y="629" width="0.6" height="15.0" fill="rgb(206,67,13)" rx="2" ry="2" />
<text  x="1192.39" y="639.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Write.func1 (1 samples, 0.02%)</title><rect x="1189.0" y="469" width="0.2" height="15.0" fill="rgb(241,12,22)" rx="2" ry="2" />
<text  x="1191.98" y="479.5" ></text>
</g>
<g >
<title>os.newFile (1 samples, 0.02%)</title><rect x="1186.5" y="485" width="0.2" height="15.0" fill="rgb(231,210,4)" rx="2" ry="2" />
<text  x="1189.54" y="495.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="44.4" y="597" width="0.2" height="15.0" fill="rgb(254,125,13)" rx="2" ry="2" />
<text  x="47.43" y="607.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.6" y="389" width="0.2" height="15.0" fill="rgb(232,134,43)" rx="2" ry="2" />
<text  x="13.61" y="399.5" ></text>
</g>
<g >
<title>github.com/google/go-cmp/cmp.(*state).compareAny (1 samples, 0.02%)</title><rect x="1188.6" y="421" width="0.2" height="15.0" fill="rgb(233,40,6)" rx="2" ry="2" />
<text  x="1191.57" y="431.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1188.8" y="421" width="0.2" height="15.0" fill="rgb(250,213,23)" rx="2" ry="2" />
<text  x="1191.78" y="431.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1182.1" y="485" width="0.2" height="15.0" fill="rgb(235,128,10)" rx="2" ry="2" />
<text  x="1185.05" y="495.5" ></text>
</g>
<g >
<title>syscall.Syscall (7 samples, 0.12%)</title><rect x="1182.9" y="517" width="1.4" height="15.0" fill="rgb(210,178,33)" rx="2" ry="2" />
<text  x="1185.87" y="527.5" ></text>
</g>
<g >
<title>[ld-musl-x86_64.so.1] (2 samples, 0.03%)</title><rect x="44.0" y="645" width="0.4" height="15.0" fill="rgb(205,9,23)" rx="2" ry="2" />
<text  x="47.02" y="655.5" ></text>
</g>
<g >
<title>[unknown] (11 samples, 0.19%)</title><rect x="35.7" y="453" width="2.2" height="15.0" fill="rgb(238,160,37)" rx="2" ry="2" />
<text  x="38.67" y="463.5" ></text>
</g>
<g >
<title>lsblk (2 samples, 0.03%)</title><rect x="44.0" y="661" width="0.4" height="15.0" fill="rgb(250,211,36)" rx="2" ry="2" />
<text  x="47.02" y="671.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1189.0" y="421" width="0.2" height="15.0" fill="rgb(253,173,8)" rx="2" ry="2" />
<text  x="1191.98" y="431.5" ></text>
</g>
<g >
<title>[unknown] (110 samples, 1.90%)</title><rect x="15.5" y="485" width="22.4" height="15.0" fill="rgb(231,173,47)" rx="2" ry="2" />
<text  x="18.50" y="495.5" >[..</text>
</g>
<g >
<title>[unknown] (30 samples, 0.52%)</title><rect x="37.9" y="549" width="6.1" height="15.0" fill="rgb(243,98,37)" rx="2" ry="2" />
<text  x="40.91" y="559.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1189.0" y="181" width="0.2" height="15.0" fill="rgb(236,61,46)" rx="2" ry="2" />
<text  x="1191.98" y="191.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1186.7" y="437" width="0.2" height="15.0" fill="rgb(222,192,34)" rx="2" ry="2" />
<text  x="1189.74" y="447.5" ></text>
</g>
<g >
<title>github.com/lf-edge/eve/pkg/pillar/pubsub.deepCopy (1 samples, 0.02%)</title><rect x="1188.4" y="565" width="0.2" height="15.0" fill="rgb(237,156,2)" rx="2" ry="2" />
<text  x="1191.37" y="575.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.6" y="261" width="0.2" height="15.0" fill="rgb(220,64,29)" rx="2" ry="2" />
<text  x="13.61" y="271.5" ></text>
</g>
<g >
<title>io/ioutil.ReadFile (1 samples, 0.02%)</title><rect x="1188.0" y="517" width="0.2" height="15.0" fill="rgb(246,157,31)" rx="2" ry="2" />
<text  x="1190.96" y="527.5" ></text>
</g>
<g >
<title>runtime.stopm (1 samples, 0.02%)</title><rect x="1184.3" y="533" width="0.2" height="15.0" fill="rgb(218,104,16)" rx="2" ry="2" />
<text  x="1187.30" y="543.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.6" y="565" width="0.2" height="15.0" fill="rgb(212,192,38)" rx="2" ry="2" />
<text  x="13.61" y="575.5" ></text>
</g>
<g >
<title>github.com/google/go-cmp/cmp.(*state).compareSlice (1 samples, 0.02%)</title><rect x="1188.6" y="405" width="0.2" height="15.0" fill="rgb(242,95,25)" rx="2" ry="2" />
<text  x="1191.57" y="415.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.10%)</title><rect x="1183.1" y="309" width="1.2" height="15.0" fill="rgb(227,213,26)" rx="2" ry="2" />
<text  x="1186.07" y="319.5" ></text>
</g>
<g >
<title>github.com/shirou/gopsutil/process.(*Process).fillFromStatWithContext (1 samples, 0.02%)</title><rect x="1186.1" y="517" width="0.2" height="15.0" fill="rgb(230,54,29)" rx="2" ry="2" />
<text  x="1189.13" y="527.5" ></text>
</g>
<g >
<title>os.startProcess (1 samples, 0.02%)</title><rect x="1188.8" y="485" width="0.2" height="15.0" fill="rgb(227,21,6)" rx="2" ry="2" />
<text  x="1191.78" y="495.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="44.6" y="533" width="0.2" height="15.0" fill="rgb(241,131,13)" rx="2" ry="2" />
<text  x="47.63" y="543.5" ></text>
</g>
<g >
<title>[unknown] (121 samples, 2.09%)</title><rect x="13.3" y="517" width="24.6" height="15.0" fill="rgb(229,224,28)" rx="2" ry="2" />
<text  x="16.26" y="527.5" >[..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="44.6" y="501" width="0.2" height="15.0" fill="rgb(228,79,40)" rx="2" ry="2" />
<text  x="47.63" y="511.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="44.4" y="533" width="0.2" height="15.0" fill="rgb(209,9,12)" rx="2" ry="2" />
<text  x="47.43" y="543.5" ></text>
</g>
<g >
<title>[ld-musl-x86_64.so.1] (2 samples, 0.03%)</title><rect x="10.0" y="645" width="0.4" height="15.0" fill="rgb(206,1,10)" rx="2" ry="2" />
<text  x="13.00" y="655.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.02%)</title><rect x="1187.1" y="517" width="0.3" height="15.0" fill="rgb(248,4,16)" rx="2" ry="2" />
<text  x="1190.15" y="527.5" ></text>
</g>
<g >
<title>github.com/lf-edge/eve/pkg/pillar/pubsub.(*PublicationImpl).Publish (1 samples, 0.02%)</title><rect x="1188.6" y="581" width="0.2" height="15.0" fill="rgb(250,100,13)" rx="2" ry="2" />
<text  x="1191.57" y="591.5" ></text>
</g>
<g >
<title>syscall.Syscall6 (1 samples, 0.02%)</title><rect x="1186.7" y="485" width="0.2" height="15.0" fill="rgb(250,2,27)" rx="2" ry="2" />
<text  x="1189.74" y="495.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="44.2" y="517" width="0.2" height="15.0" fill="rgb(214,197,40)" rx="2" ry="2" />
<text  x="47.23" y="527.5" ></text>
</g>
<g >
<title>os.(*File).Close (1 samples, 0.02%)</title><rect x="1185.9" y="453" width="0.2" height="15.0" fill="rgb(214,184,29)" rx="2" ry="2" />
<text  x="1188.93" y="463.5" ></text>
</g>
<g >
<title>github.com/shirou/gopsutil/internal/common.ReadLinesOffsetN (5 samples, 0.09%)</title><rect x="1186.3" y="533" width="1.1" height="15.0" fill="rgb(250,177,13)" rx="2" ry="2" />
<text  x="1189.33" y="543.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (1 samples, 0.02%)</title><rect x="1182.1" y="533" width="0.2" height="15.0" fill="rgb(244,43,2)" rx="2" ry="2" />
<text  x="1185.05" y="543.5" ></text>
</g>
<g >
<title>[unknown] (30 samples, 0.52%)</title><rect x="37.9" y="629" width="6.1" height="15.0" fill="rgb(253,74,17)" rx="2" ry="2" />
<text  x="40.91" y="639.5" ></text>
</g>
<g >
<title>github.com/shirou/gopsutil/process.(*Process).fillFromTIDStatWithContext (1 samples, 0.02%)</title><rect x="1185.9" y="485" width="0.2" height="15.0" fill="rgb(239,72,8)" rx="2" ry="2" />
<text  x="1188.93" y="495.5" ></text>
</g>
<g >
<title>runtime.markroot (3 samples, 0.05%)</title><rect x="1189.4" y="581" width="0.6" height="15.0" fill="rgb(254,151,14)" rx="2" ry="2" />
<text  x="1192.39" y="591.5" ></text>
</g>
<g >
<title>runtime.mstart1 (4 samples, 0.07%)</title><rect x="1182.1" y="581" width="0.8" height="15.0" fill="rgb(224,27,31)" rx="2" ry="2" />
<text  x="1185.05" y="591.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.10%)</title><rect x="1183.1" y="197" width="1.2" height="15.0" fill="rgb(247,125,53)" rx="2" ry="2" />
<text  x="1186.07" y="207.5" ></text>
</g>
<g >
<title>runtime.findObject (1 samples, 0.02%)</title><rect x="1189.8" y="533" width="0.2" height="15.0" fill="rgb(227,139,24)" rx="2" ry="2" />
<text  x="1192.80" y="543.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1189.2" y="501" width="0.2" height="15.0" fill="rgb(220,3,16)" rx="2" ry="2" />
<text  x="1192.19" y="511.5" ></text>
</g>
<g >
<title>runtime.usleep (2 samples, 0.03%)</title><rect x="1182.5" y="549" width="0.4" height="15.0" fill="rgb(218,167,42)" rx="2" ry="2" />
<text  x="1185.46" y="559.5" ></text>
</g>
<g >
<title>github.com/lf-edge/eve/pkg/pillar/cmd/ledmanager.TriggerBlinkOnDevice (8 samples, 0.14%)</title><rect x="1182.9" y="629" width="1.6" height="15.0" fill="rgb(212,139,15)" rx="2" ry="2" />
<text  x="1185.87" y="639.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.07%)</title><rect x="1181.2" y="501" width="0.9" height="15.0" fill="rgb(237,25,34)" rx="2" ry="2" />
<text  x="1184.24" y="511.5" ></text>
</g>
<g >
<title>os.(*File).Read (1 samples, 0.02%)</title><rect x="1186.3" y="453" width="0.2" height="15.0" fill="rgb(243,88,53)" rx="2" ry="2" />
<text  x="1189.33" y="463.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1189.0" y="437" width="0.2" height="15.0" fill="rgb(239,98,5)" rx="2" ry="2" />
<text  x="1191.98" y="447.5" ></text>
</g>
<g >
<title>io/ioutil.ReadFile (1 samples, 0.02%)</title><rect x="1186.1" y="469" width="0.2" height="15.0" fill="rgb(245,215,42)" rx="2" ry="2" />
<text  x="1189.13" y="479.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.6" y="277" width="0.2" height="15.0" fill="rgb(240,45,27)" rx="2" ry="2" />
<text  x="13.61" y="287.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1186.7" y="421" width="0.2" height="15.0" fill="rgb(219,107,46)" rx="2" ry="2" />
<text  x="1189.74" y="431.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="37.7" y="373" width="0.2" height="15.0" fill="rgb(245,207,43)" rx="2" ry="2" />
<text  x="40.71" y="383.5" ></text>
</g>
<g >
<title>net.(*netFD).Write (1 samples, 0.02%)</title><rect x="1189.0" y="517" width="0.2" height="15.0" fill="rgb(231,8,15)" rx="2" ry="2" />
<text  x="1191.98" y="527.5" ></text>
</g>
<g >
<title>runtime.osyield (1 samples, 0.02%)</title><rect x="1184.9" y="341" width="0.2" height="15.0" fill="rgb(212,133,17)" rx="2" ry="2" />
<text  x="1187.91" y="351.5" ></text>
</g>
<g >
<title>main.startAgentAndDone (15 samples, 0.26%)</title><rect x="1185.9" y="629" width="3.1" height="15.0" fill="rgb(254,217,35)" rx="2" ry="2" />
<text  x="1188.93" y="639.5" ></text>
</g>
<g >
<title>[unknown] (30 samples, 0.52%)</title><rect x="37.9" y="597" width="6.1" height="15.0" fill="rgb(217,189,47)" rx="2" ry="2" />
<text  x="40.91" y="607.5" ></text>
</g>
<g >
<title>cat (2 samples, 0.03%)</title><rect x="10.0" y="661" width="0.4" height="15.0" fill="rgb(250,65,44)" rx="2" ry="2" />
<text  x="13.00" y="671.5" ></text>
</g>
<g >
<title>os/exec.(*Cmd).Start (1 samples, 0.02%)</title><rect x="1188.8" y="517" width="0.2" height="15.0" fill="rgb(225,193,48)" rx="2" ry="2" />
<text  x="1191.78" y="527.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.6" y="581" width="0.2" height="15.0" fill="rgb(250,108,36)" rx="2" ry="2" />
<text  x="13.61" y="591.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.02%)</title><rect x="1187.8" y="501" width="0.2" height="15.0" fill="rgb(250,1,44)" rx="2" ry="2" />
<text  x="1190.76" y="511.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.10%)</title><rect x="1183.1" y="165" width="1.2" height="15.0" fill="rgb(216,86,30)" rx="2" ry="2" />
<text  x="1186.07" y="175.5" ></text>
</g>
<g >
<title>io/ioutil.ReadFile (1 samples, 0.02%)</title><rect x="1185.9" y="469" width="0.2" height="15.0" fill="rgb(205,166,44)" rx="2" ry="2" />
<text  x="1188.93" y="479.5" ></text>
</g>
<g >
<title>github.com/lf-edge/eve/pkg/pillar/cmd/zedrouter.Run (1 samples, 0.02%)</title><rect x="1188.8" y="613" width="0.2" height="15.0" fill="rgb(216,185,37)" rx="2" ry="2" />
<text  x="1191.78" y="623.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.10%)</title><rect x="36.7" y="405" width="1.2" height="15.0" fill="rgb(233,27,20)" rx="2" ry="2" />
<text  x="39.69" y="415.5" ></text>
</g>
<g >
<title>net/http.persistConnWriter.Write (1 samples, 0.02%)</title><rect x="1189.0" y="597" width="0.2" height="15.0" fill="rgb(251,192,19)" rx="2" ry="2" />
<text  x="1191.98" y="607.5" ></text>
</g>
<g >
<title>[jq] (6 samples, 0.10%)</title><rect x="10.8" y="645" width="1.2" height="15.0" fill="rgb(252,176,0)" rx="2" ry="2" />
<text  x="13.81" y="655.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1184.3" y="485" width="0.2" height="15.0" fill="rgb(218,88,25)" rx="2" ry="2" />
<text  x="1187.30" y="495.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="44.6" y="549" width="0.2" height="15.0" fill="rgb(206,131,0)" rx="2" ry="2" />
<text  x="47.63" y="559.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="44.6" y="437" width="0.2" height="15.0" fill="rgb(243,116,11)" rx="2" ry="2" />
<text  x="47.63" y="447.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (1 samples, 0.02%)</title><rect x="1188.4" y="501" width="0.2" height="15.0" fill="rgb(238,146,48)" rx="2" ry="2" />
<text  x="1191.37" y="511.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.6" y="613" width="0.2" height="15.0" fill="rgb(244,211,27)" rx="2" ry="2" />
<text  x="13.61" y="623.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (1 samples, 0.02%)</title><rect x="1187.8" y="485" width="0.2" height="15.0" fill="rgb(250,81,40)" rx="2" ry="2" />
<text  x="1190.76" y="495.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1184.9" y="309" width="0.2" height="15.0" fill="rgb(233,29,23)" rx="2" ry="2" />
<text  x="1187.91" y="319.5" ></text>
</g>
<g >
<title>time.(*Time).UnmarshalJSON (1 samples, 0.02%)</title><rect x="1184.9" y="437" width="0.2" height="15.0" fill="rgb(254,123,54)" rx="2" ry="2" />
<text  x="1187.91" y="447.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="1182.5" y="517" width="0.4" height="15.0" fill="rgb(236,7,6)" rx="2" ry="2" />
<text  x="1185.46" y="527.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="44.4" y="549" width="0.2" height="15.0" fill="rgb(212,27,21)" rx="2" ry="2" />
<text  x="47.43" y="559.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1189.2" y="421" width="0.2" height="15.0" fill="rgb(250,62,38)" rx="2" ry="2" />
<text  x="1192.19" y="431.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.12%)</title><rect x="1182.9" y="453" width="1.4" height="15.0" fill="rgb(242,46,14)" rx="2" ry="2" />
<text  x="1185.87" y="463.5" ></text>
</g>
<g >
<title>github.com/lf-edge/eve/pkg/pillar/base.(*Command).Output (1 samples, 0.02%)</title><rect x="1188.8" y="549" width="0.2" height="15.0" fill="rgb(230,149,49)" rx="2" ry="2" />
<text  x="1191.78" y="559.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.12%)</title><rect x="1182.9" y="485" width="1.4" height="15.0" fill="rgb(232,60,23)" rx="2" ry="2" />
<text  x="1185.87" y="495.5" ></text>
</g>
<g >
<title>reflect.Value.SetInt (1 samples, 0.02%)</title><rect x="1184.7" y="437" width="0.2" height="15.0" fill="rgb(237,18,33)" rx="2" ry="2" />
<text  x="1187.70" y="447.5" ></text>
</g>
<g >
<title>[ld-musl-x86_64.so.1] (1 samples, 0.02%)</title><rect x="44.6" y="629" width="0.2" height="15.0" fill="rgb(218,138,15)" rx="2" ry="2" />
<text  x="47.63" y="639.5" ></text>
</g>
<g >
<title>runtime.newstack (1 samples, 0.02%)</title><rect x="1184.9" y="389" width="0.2" height="15.0" fill="rgb(222,204,4)" rx="2" ry="2" />
<text  x="1187.91" y="399.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="1181.6" y="421" width="0.5" height="15.0" fill="rgb(227,153,19)" rx="2" ry="2" />
<text  x="1184.65" y="431.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Write (1 samples, 0.02%)</title><rect x="1189.0" y="501" width="0.2" height="15.0" fill="rgb(241,106,51)" rx="2" ry="2" />
<text  x="1191.98" y="511.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1189.0" y="117" width="0.2" height="15.0" fill="rgb(233,221,29)" rx="2" ry="2" />
<text  x="1191.98" y="127.5" ></text>
</g>
<g >
<title>zedbox (39 samples, 0.67%)</title><rect x="1182.1" y="661" width="7.9" height="15.0" fill="rgb(235,166,44)" rx="2" ry="2" />
<text  x="1185.05" y="671.5" ></text>
</g>
<g >
<title>encoding/json.Unmarshal (6 samples, 0.10%)</title><rect x="1184.5" y="533" width="1.2" height="15.0" fill="rgb(230,42,50)" rx="2" ry="2" />
<text  x="1187.50" y="543.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="1182.5" y="485" width="0.4" height="15.0" fill="rgb(205,118,48)" rx="2" ry="2" />
<text  x="1185.46" y="495.5" ></text>
</g>
<g >
<title>[unknown] (30 samples, 0.52%)</title><rect x="37.9" y="533" width="6.1" height="15.0" fill="rgb(223,20,0)" rx="2" ry="2" />
<text  x="40.91" y="543.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="1182.5" y="453" width="0.4" height="15.0" fill="rgb(252,35,9)" rx="2" ry="2" />
<text  x="1185.46" y="463.5" ></text>
</g>
<g >
<title>runtime.shrinkstack (1 samples, 0.02%)</title><rect x="1189.6" y="533" width="0.2" height="15.0" fill="rgb(221,176,21)" rx="2" ry="2" />
<text  x="1192.59" y="543.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1186.1" y="325" width="0.2" height="15.0" fill="rgb(215,216,25)" rx="2" ry="2" />
<text  x="1189.13" y="335.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.02%)</title><rect x="1185.7" y="549" width="0.2" height="15.0" fill="rgb(226,198,54)" rx="2" ry="2" />
<text  x="1188.72" y="559.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1186.1" y="293" width="0.2" height="15.0" fill="rgb(238,223,33)" rx="2" ry="2" />
<text  x="1189.13" y="303.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.10%)</title><rect x="1183.1" y="277" width="1.2" height="15.0" fill="rgb(214,153,10)" rx="2" ry="2" />
<text  x="1186.07" y="287.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.02%)</title><rect x="1182.1" y="517" width="0.2" height="15.0" fill="rgb(205,190,48)" rx="2" ry="2" />
<text  x="1185.05" y="527.5" ></text>
</g>
<g >
<title>runtime.notetsleep (1 samples, 0.02%)</title><rect x="1182.1" y="549" width="0.2" height="15.0" fill="rgb(214,15,28)" rx="2" ry="2" />
<text  x="1185.05" y="559.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).decref (1 samples, 0.02%)</title><rect x="1188.2" y="501" width="0.2" height="15.0" fill="rgb(234,10,13)" rx="2" ry="2" />
<text  x="1191.17" y="511.5" ></text>
</g>
<g >
<title>github.com/lf-edge/eve/pkg/pillar/iptables.Ip6tableCmdOut (1 samples, 0.02%)</title><rect x="1188.8" y="565" width="0.2" height="15.0" fill="rgb(231,105,49)" rx="2" ry="2" />
<text  x="1191.78" y="575.5" ></text>
</g>
<g >
<title>bufio.(*Reader).ReadSlice (1 samples, 0.02%)</title><rect x="1186.3" y="485" width="0.2" height="15.0" fill="rgb(251,209,29)" rx="2" ry="2" />
<text  x="1189.33" y="495.5" ></text>
</g>
<g >
<title>crypto/tls.(*Conn).write (1 samples, 0.02%)</title><rect x="1189.0" y="549" width="0.2" height="15.0" fill="rgb(231,111,18)" rx="2" ry="2" />
<text  x="1191.98" y="559.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="645" width="0.2" height="15.0" fill="rgb(254,174,33)" rx="2" ry="2" />
<text  x="13.41" y="655.5" ></text>
</g>
<g >
<title>killall (1 samples, 0.02%)</title><rect x="12.6" y="661" width="0.3" height="15.0" fill="rgb(237,105,1)" rx="2" ry="2" />
<text  x="15.65" y="671.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1186.1" y="357" width="0.2" height="15.0" fill="rgb(245,51,44)" rx="2" ry="2" />
<text  x="1189.13" y="367.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="12.0" y="645" width="0.6" height="15.0" fill="rgb(221,183,8)" rx="2" ry="2" />
<text  x="15.04" y="655.5" ></text>
</g>
<g >
<title>encoding/json.stateEndValue (1 samples, 0.02%)</title><rect x="1184.5" y="453" width="0.2" height="15.0" fill="rgb(225,194,49)" rx="2" ry="2" />
<text  x="1187.50" y="463.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="44.6" y="581" width="0.2" height="15.0" fill="rgb(250,226,3)" rx="2" ry="2" />
<text  x="47.63" y="591.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="37.7" y="389" width="0.2" height="15.0" fill="rgb(232,59,46)" rx="2" ry="2" />
<text  x="40.71" y="399.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Read.func1 (7 samples, 0.12%)</title><rect x="1182.9" y="533" width="1.4" height="15.0" fill="rgb(248,203,50)" rx="2" ry="2" />
<text  x="1185.87" y="543.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="44.4" y="581" width="0.2" height="15.0" fill="rgb(234,126,36)" rx="2" ry="2" />
<text  x="47.43" y="591.5" ></text>
</g>
<g >
<title>github.com/lf-edge/eve/pkg/pillar/pubsub.deepCopy (6 samples, 0.10%)</title><rect x="1184.5" y="549" width="1.2" height="15.0" fill="rgb(214,108,45)" rx="2" ry="2" />
<text  x="1187.50" y="559.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1186.7" y="469" width="0.2" height="15.0" fill="rgb(235,170,34)" rx="2" ry="2" />
<text  x="1189.74" y="479.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Read (1 samples, 0.02%)</title><rect x="1186.3" y="437" width="0.2" height="15.0" fill="rgb(239,12,34)" rx="2" ry="2" />
<text  x="1189.33" y="447.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="44.4" y="613" width="0.2" height="15.0" fill="rgb(249,116,15)" rx="2" ry="2" />
<text  x="47.43" y="623.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1189.0" y="325" width="0.2" height="15.0" fill="rgb(249,155,23)" rx="2" ry="2" />
<text  x="1191.98" y="335.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1189.0" y="293" width="0.2" height="15.0" fill="rgb(222,143,18)" rx="2" ry="2" />
<text  x="1191.98" y="303.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1188.8" y="325" width="0.2" height="15.0" fill="rgb(212,112,14)" rx="2" ry="2" />
<text  x="1191.78" y="335.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1188.8" y="293" width="0.2" height="15.0" fill="rgb(221,63,11)" rx="2" ry="2" />
<text  x="1191.78" y="303.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="10.0" y="517" width="0.4" height="15.0" fill="rgb(248,150,6)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>github.com/lf-edge/eve/pkg/pillar/iptables.FetchIprulesCounters (1 samples, 0.02%)</title><rect x="1188.8" y="581" width="0.2" height="15.0" fill="rgb(208,163,39)" rx="2" ry="2" />
<text  x="1191.78" y="591.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.6" y="549" width="0.2" height="15.0" fill="rgb(219,64,42)" rx="2" ry="2" />
<text  x="13.61" y="559.5" ></text>
</g>
<g >
<title>time.parse (1 samples, 0.02%)</title><rect x="1184.9" y="421" width="0.2" height="15.0" fill="rgb(211,10,18)" rx="2" ry="2" />
<text  x="1187.91" y="431.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="44.6" y="613" width="0.2" height="15.0" fill="rgb(216,192,38)" rx="2" ry="2" />
<text  x="47.63" y="623.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.6" y="453" width="0.2" height="15.0" fill="rgb(215,66,44)" rx="2" ry="2" />
<text  x="13.61" y="463.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="43.8" y="453" width="0.2" height="15.0" fill="rgb(229,86,27)" rx="2" ry="2" />
<text  x="46.82" y="463.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1184.9" y="261" width="0.2" height="15.0" fill="rgb(226,8,25)" rx="2" ry="2" />
<text  x="1187.91" y="271.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.6" y="485" width="0.2" height="15.0" fill="rgb(205,111,30)" rx="2" ry="2" />
<text  x="13.61" y="495.5" ></text>
</g>
<g >
<title>github.com/shirou/gopsutil/process.ProcessesWithContext (1 samples, 0.02%)</title><rect x="1188.2" y="581" width="0.2" height="15.0" fill="rgb(228,154,29)" rx="2" ry="2" />
<text  x="1191.17" y="591.5" ></text>
</g>
<g >
<title>[unknown] (30 samples, 0.52%)</title><rect x="37.9" y="485" width="6.1" height="15.0" fill="rgb(240,104,41)" rx="2" ry="2" />
<text  x="40.91" y="495.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="1181.6" y="469" width="0.5" height="15.0" fill="rgb(248,73,24)" rx="2" ry="2" />
<text  x="1184.65" y="479.5" ></text>
</g>
<g >
<title>runtime.mcall (1 samples, 0.02%)</title><rect x="1184.3" y="597" width="0.2" height="15.0" fill="rgb(214,211,14)" rx="2" ry="2" />
<text  x="1187.30" y="607.5" ></text>
</g>
<g >
<title>runtime.markroot.func1 (2 samples, 0.03%)</title><rect x="1189.4" y="565" width="0.4" height="15.0" fill="rgb(206,140,36)" rx="2" ry="2" />
<text  x="1192.39" y="575.5" ></text>
</g>
<g >
<title>[unknown] (30 samples, 0.52%)</title><rect x="37.9" y="565" width="6.1" height="15.0" fill="rgb(213,45,34)" rx="2" ry="2" />
<text  x="40.91" y="575.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1189.0" y="357" width="0.2" height="15.0" fill="rgb(208,222,27)" rx="2" ry="2" />
<text  x="1191.98" y="367.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="44.8" y="629" width="0.2" height="15.0" fill="rgb(235,34,34)" rx="2" ry="2" />
<text  x="47.84" y="639.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).unmarshal (1 samples, 0.02%)</title><rect x="1188.4" y="533" width="0.2" height="15.0" fill="rgb(243,8,15)" rx="2" ry="2" />
<text  x="1191.37" y="543.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1189.2" y="469" width="0.2" height="15.0" fill="rgb(250,123,4)" rx="2" ry="2" />
<text  x="1192.19" y="479.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1188.8" y="357" width="0.2" height="15.0" fill="rgb(234,119,18)" rx="2" ry="2" />
<text  x="1191.78" y="367.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="44.4" y="501" width="0.2" height="15.0" fill="rgb(223,146,30)" rx="2" ry="2" />
<text  x="47.43" y="511.5" ></text>
</g>
<g >
<title>runtime.timeSleepUntil (1 samples, 0.02%)</title><rect x="1182.3" y="549" width="0.2" height="15.0" fill="rgb(222,171,11)" rx="2" ry="2" />
<text  x="1185.26" y="559.5" ></text>
</g>
<g >
<title>[unknown] (30 samples, 0.52%)</title><rect x="37.9" y="517" width="6.1" height="15.0" fill="rgb(209,14,6)" rx="2" ry="2" />
<text  x="40.91" y="527.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.6" y="517" width="0.2" height="15.0" fill="rgb(251,38,44)" rx="2" ry="2" />
<text  x="13.61" y="527.5" ></text>
</g>
<g >
<title>runtime.gopreempt_m (1 samples, 0.02%)</title><rect x="1184.9" y="373" width="0.2" height="15.0" fill="rgb(212,57,40)" rx="2" ry="2" />
<text  x="1187.91" y="383.5" ></text>
</g>
<g >
<title>strings.Replace (2 samples, 0.03%)</title><rect x="1187.4" y="533" width="0.4" height="15.0" fill="rgb(232,173,54)" rx="2" ry="2" />
<text  x="1190.35" y="543.5" ></text>
</g>
<g >
<title>bufio.(*Writer).Flush (1 samples, 0.02%)</title><rect x="1189.0" y="613" width="0.2" height="15.0" fill="rgb(210,8,36)" rx="2" ry="2" />
<text  x="1191.98" y="623.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.12%)</title><rect x="1182.9" y="357" width="1.4" height="15.0" fill="rgb(239,55,27)" rx="2" ry="2" />
<text  x="1185.87" y="367.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="44.2" y="549" width="0.2" height="15.0" fill="rgb(217,30,38)" rx="2" ry="2" />
<text  x="47.23" y="559.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1182.1" y="469" width="0.2" height="15.0" fill="rgb(222,154,26)" rx="2" ry="2" />
<text  x="1185.05" y="479.5" ></text>
</g>
<g >
<title>[unknown] (5,581 samples, 96.36%)</title><rect x="45.0" y="581" width="1137.1" height="15.0" fill="rgb(238,63,50)" rx="2" ry="2" />
<text  x="48.04" y="591.5" >[unknown]</text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.02%)</title><rect x="1187.6" y="501" width="0.2" height="15.0" fill="rgb(205,41,6)" rx="2" ry="2" />
<text  x="1190.56" y="511.5" ></text>
</g>
<g >
<title>[unknown] (30 samples, 0.52%)</title><rect x="37.9" y="645" width="6.1" height="15.0" fill="rgb(216,10,22)" rx="2" ry="2" />
<text  x="40.91" y="655.5" ></text>
</g>
<g >
<title>[unknown] (107 samples, 1.85%)</title><rect x="16.1" y="469" width="21.8" height="15.0" fill="rgb(254,35,38)" rx="2" ry="2" />
<text  x="19.11" y="479.5" >[..</text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.02%)</title><rect x="1189.2" y="613" width="0.2" height="15.0" fill="rgb(236,126,37)" rx="2" ry="2" />
<text  x="1192.19" y="623.5" ></text>
</g>
<g >
<title>sem_open (1 samples, 0.02%)</title><rect x="44.4" y="645" width="0.2" height="15.0" fill="rgb(244,186,46)" rx="2" ry="2" />
<text  x="47.43" y="655.5" ></text>
</g>
<g >
<title>github.com/shirou/gopsutil/process.NewProcess (1 samples, 0.02%)</title><rect x="1188.2" y="565" width="0.2" height="15.0" fill="rgb(241,122,21)" rx="2" ry="2" />
<text  x="1191.17" y="575.5" ></text>
</g>
<g >
<title>github.com/google/go-cmp/cmp.(*state).compareStruct (1 samples, 0.02%)</title><rect x="1188.6" y="469" width="0.2" height="15.0" fill="rgb(225,75,33)" rx="2" ry="2" />
<text  x="1191.57" y="479.5" ></text>
</g>
<g >
<title>bufio.(*Reader).fill (1 samples, 0.02%)</title><rect x="1186.3" y="469" width="0.2" height="15.0" fill="rgb(237,74,24)" rx="2" ry="2" />
<text  x="1189.33" y="479.5" ></text>
</g>
<g >
<title>runtime.scanblock (1 samples, 0.02%)</title><rect x="1189.8" y="549" width="0.2" height="15.0" fill="rgb(216,150,47)" rx="2" ry="2" />
<text  x="1192.80" y="559.5" ></text>
</g>
<g >
<title>os.(*File).Read (7 samples, 0.12%)</title><rect x="1182.9" y="581" width="1.4" height="15.0" fill="rgb(230,219,50)" rx="2" ry="2" />
<text  x="1185.87" y="591.5" ></text>
</g>
<g >
<title>github.com/google/go-cmp/cmp.(*state).compareSlice (1 samples, 0.02%)</title><rect x="1188.6" y="501" width="0.2" height="15.0" fill="rgb(218,206,46)" rx="2" ry="2" />
<text  x="1191.57" y="511.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.02%)</title><rect x="1187.8" y="517" width="0.2" height="15.0" fill="rgb(250,71,33)" rx="2" ry="2" />
<text  x="1190.76" y="527.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1182.7" y="357" width="0.2" height="15.0" fill="rgb(209,85,49)" rx="2" ry="2" />
<text  x="1185.67" y="367.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1186.7" y="389" width="0.2" height="15.0" fill="rgb(253,146,36)" rx="2" ry="2" />
<text  x="1189.74" y="399.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="10.0" y="613" width="0.4" height="15.0" fill="rgb(213,139,19)" rx="2" ry="2" />
<text  x="13.00" y="623.5" ></text>
</g>
<g >
<title>runtime.growslice (1 samples, 0.02%)</title><rect x="1186.9" y="517" width="0.2" height="15.0" fill="rgb(225,83,24)" rx="2" ry="2" />
<text  x="1189.94" y="527.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.12%)</title><rect x="1182.9" y="325" width="1.4" height="15.0" fill="rgb(233,132,5)" rx="2" ry="2" />
<text  x="1185.87" y="335.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.10%)</title><rect x="1183.1" y="293" width="1.2" height="15.0" fill="rgb(223,67,45)" rx="2" ry="2" />
<text  x="1186.07" y="303.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1186.1" y="277" width="0.2" height="15.0" fill="rgb(247,127,5)" rx="2" ry="2" />
<text  x="1189.13" y="287.5" ></text>
</g>
<g >
<title>github.com/lf-edge/eve/pkg/pillar/pubsub/socketdriver.(*Subscriber).read (1 samples, 0.02%)</title><rect x="1185.7" y="597" width="0.2" height="15.0" fill="rgb(234,125,53)" rx="2" ry="2" />
<text  x="1188.72" y="607.5" ></text>
</g>
<g >
<title>[unknown] (123 samples, 2.12%)</title><rect x="12.9" y="581" width="25.0" height="15.0" fill="rgb(221,58,30)" rx="2" ry="2" />
<text  x="15.85" y="591.5" >[..</text>
</g>
<g >
<title>github.com/lf-edge/eve/pkg/pillar/cmd/ledmanager.ExecuteDDCmd (7 samples, 0.12%)</title><rect x="1182.9" y="613" width="1.4" height="15.0" fill="rgb(233,159,24)" rx="2" ry="2" />
<text  x="1185.87" y="623.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1181.9" y="261" width="0.2" height="15.0" fill="rgb(213,98,15)" rx="2" ry="2" />
<text  x="1184.85" y="271.5" ></text>
</g>
<g >
<title>github.com/shirou/gopsutil/process.(*Process).TimesWithContext (1 samples, 0.02%)</title><rect x="1186.1" y="549" width="0.2" height="15.0" fill="rgb(226,110,42)" rx="2" ry="2" />
<text  x="1189.13" y="559.5" ></text>
</g>
<g >
<title>strings.genSplit (1 samples, 0.02%)</title><rect x="1187.8" y="533" width="0.2" height="15.0" fill="rgb(207,210,50)" rx="2" ry="2" />
<text  x="1190.76" y="543.5" ></text>
</g>
<g >
<title>github.com/lf-edge/eve/pkg/pillar/pubsub.(*PublicationImpl).DetermineDiffs (6 samples, 0.10%)</title><rect x="1184.5" y="613" width="1.2" height="15.0" fill="rgb(240,164,17)" rx="2" ry="2" />
<text  x="1187.50" y="623.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Init (1 samples, 0.02%)</title><rect x="1186.5" y="469" width="0.2" height="15.0" fill="rgb(217,155,22)" rx="2" ry="2" />
<text  x="1189.54" y="479.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.02%)</title><rect x="1187.1" y="485" width="0.3" height="15.0" fill="rgb(210,3,38)" rx="2" ry="2" />
<text  x="1190.15" y="495.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1186.7" y="341" width="0.2" height="15.0" fill="rgb(248,13,22)" rx="2" ry="2" />
<text  x="1189.74" y="351.5" ></text>
</g>
<g >
<title>fopencookie (1 samples, 0.02%)</title><rect x="10.4" y="613" width="0.2" height="15.0" fill="rgb(231,119,11)" rx="2" ry="2" />
<text  x="13.41" y="623.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="12.6" y="581" width="0.3" height="15.0" fill="rgb(206,157,33)" rx="2" ry="2" />
<text  x="15.65" y="591.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1186.5" y="389" width="0.2" height="15.0" fill="rgb(209,88,2)" rx="2" ry="2" />
<text  x="1189.54" y="399.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1181.9" y="389" width="0.2" height="15.0" fill="rgb(208,87,2)" rx="2" ry="2" />
<text  x="1184.85" y="399.5" ></text>
</g>
<g >
<title>github.com/google/go-cmp/cmp.(*state).compareStruct (1 samples, 0.02%)</title><rect x="1188.6" y="437" width="0.2" height="15.0" fill="rgb(214,15,20)" rx="2" ry="2" />
<text  x="1191.57" y="447.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="565" width="0.2" height="15.0" fill="rgb(245,132,46)" rx="2" ry="2" />
<text  x="13.41" y="575.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1189.2" y="389" width="0.2" height="15.0" fill="rgb(228,63,1)" rx="2" ry="2" />
<text  x="1192.19" y="399.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="10.0" y="581" width="0.4" height="15.0" fill="rgb(251,37,10)" rx="2" ry="2" />
<text  x="13.00" y="591.5" ></text>
</g>
<g >
<title>os.openFileNolog (2 samples, 0.03%)</title><rect x="1186.5" y="501" width="0.4" height="15.0" fill="rgb(237,91,16)" rx="2" ry="2" />
<text  x="1189.54" y="511.5" ></text>
</g>
<g >
<title>[unknown] (123 samples, 2.12%)</title><rect x="12.9" y="613" width="25.0" height="15.0" fill="rgb(217,25,26)" rx="2" ry="2" />
<text  x="15.85" y="623.5" >[..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1188.8" y="277" width="0.2" height="15.0" fill="rgb(225,113,4)" rx="2" ry="2" />
<text  x="1191.78" y="287.5" ></text>
</g>
<g >
<title>github.com/lf-edge/eve/pkg/pillar/pubsub.(*PublicationImpl).GetAll.func1 (6 samples, 0.10%)</title><rect x="1184.5" y="565" width="1.2" height="15.0" fill="rgb(240,152,6)" rx="2" ry="2" />
<text  x="1187.50" y="575.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.02%)</title><rect x="1188.0" y="437" width="0.2" height="15.0" fill="rgb(218,204,39)" rx="2" ry="2" />
<text  x="1190.96" y="447.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).destroy (1 samples, 0.02%)</title><rect x="1188.2" y="485" width="0.2" height="15.0" fill="rgb(210,31,26)" rx="2" ry="2" />
<text  x="1191.17" y="495.5" ></text>
</g>
<g >
<title>bufio.(*Reader).ReadString (1 samples, 0.02%)</title><rect x="1186.3" y="517" width="0.2" height="15.0" fill="rgb(207,77,31)" rx="2" ry="2" />
<text  x="1189.33" y="527.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1189.0" y="277" width="0.2" height="15.0" fill="rgb(252,110,5)" rx="2" ry="2" />
<text  x="1191.98" y="287.5" ></text>
</g>
<g >
<title>runtime.park_m (1 samples, 0.02%)</title><rect x="1184.3" y="581" width="0.2" height="15.0" fill="rgb(246,87,51)" rx="2" ry="2" />
<text  x="1187.30" y="591.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.02%)</title><rect x="1184.5" y="421" width="0.2" height="15.0" fill="rgb(229,80,19)" rx="2" ry="2" />
<text  x="1187.50" y="431.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1181.9" y="341" width="0.2" height="15.0" fill="rgb(228,66,24)" rx="2" ry="2" />
<text  x="1184.85" y="351.5" ></text>
</g>
<g >
<title>github.com/shirou/gopsutil/process.(*Process).fillFromStatmWithContext (1 samples, 0.02%)</title><rect x="1188.0" y="533" width="0.2" height="15.0" fill="rgb(230,122,3)" rx="2" ry="2" />
<text  x="1190.96" y="543.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="12.6" y="501" width="0.3" height="15.0" fill="rgb(253,180,9)" rx="2" ry="2" />
<text  x="15.65" y="511.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="43.8" y="437" width="0.2" height="15.0" fill="rgb(252,190,24)" rx="2" ry="2" />
<text  x="46.82" y="447.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Read (7 samples, 0.12%)</title><rect x="1182.9" y="565" width="1.4" height="15.0" fill="rgb(244,211,15)" rx="2" ry="2" />
<text  x="1185.87" y="575.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.6" y="437" width="0.2" height="15.0" fill="rgb(224,153,10)" rx="2" ry="2" />
<text  x="13.61" y="447.5" ></text>
</g>
<g >
<title>runtime.findObject (1 samples, 0.02%)</title><rect x="1184.5" y="389" width="0.2" height="15.0" fill="rgb(226,179,4)" rx="2" ry="2" />
<text  x="1187.50" y="399.5" ></text>
</g>
<g >
<title>[unknown] (5,581 samples, 96.36%)</title><rect x="45.0" y="613" width="1137.1" height="15.0" fill="rgb(231,86,51)" rx="2" ry="2" />
<text  x="48.04" y="623.5" >[unknown]</text>
</g>
<g >
<title>encoding/json.(*decodeState).object (5 samples, 0.09%)</title><rect x="1184.5" y="485" width="1.0" height="15.0" fill="rgb(246,128,24)" rx="2" ry="2" />
<text  x="1187.50" y="495.5" ></text>
</g>
<g >
<title>sshd (2 samples, 0.03%)</title><rect x="44.6" y="661" width="0.4" height="15.0" fill="rgb(215,10,35)" rx="2" ry="2" />
<text  x="47.63" y="671.5" ></text>
</g>
<g >
<title>github.com/google/go-cmp/cmp.Equal (1 samples, 0.02%)</title><rect x="1188.6" y="565" width="0.2" height="15.0" fill="rgb(219,110,51)" rx="2" ry="2" />
<text  x="1191.57" y="575.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.12%)</title><rect x="36.5" y="421" width="1.4" height="15.0" fill="rgb(241,14,8)" rx="2" ry="2" />
<text  x="39.48" y="431.5" ></text>
</g>
<g >
<title>in:imemlogd (1 samples, 0.02%)</title><rect x="10.6" y="661" width="0.2" height="15.0" fill="rgb(231,3,45)" rx="2" ry="2" />
<text  x="13.61" y="671.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1186.7" y="373" width="0.2" height="15.0" fill="rgb(238,91,46)" rx="2" ry="2" />
<text  x="1189.74" y="383.5" ></text>
</g>
<g >
<title>runtime.gcDrain (3 samples, 0.05%)</title><rect x="1189.4" y="597" width="0.6" height="15.0" fill="rgb(209,175,27)" rx="2" ry="2" />
<text  x="1192.39" y="607.5" ></text>
</g>
<g >
<title>kworker/0:1H-kb (123 samples, 2.12%)</title><rect x="12.9" y="661" width="25.0" height="15.0" fill="rgb(205,94,2)" rx="2" ry="2" />
<text  x="15.85" y="671.5" >k..</text>
</g>
<g >
<title>bytes.(*Buffer).ReadFrom (1 samples, 0.02%)</title><rect x="1188.0" y="485" width="0.2" height="15.0" fill="rgb(224,93,28)" rx="2" ry="2" />
<text  x="1190.96" y="495.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1186.7" y="405" width="0.2" height="15.0" fill="rgb(211,92,0)" rx="2" ry="2" />
<text  x="1189.74" y="415.5" ></text>
</g>
<g >
<title>runtime.startm (1 samples, 0.02%)</title><rect x="1189.2" y="549" width="0.2" height="15.0" fill="rgb(217,85,16)" rx="2" ry="2" />
<text  x="1192.19" y="559.5" ></text>
</g>
<g >
<title>runtime.schedule (1 samples, 0.02%)</title><rect x="1184.3" y="565" width="0.2" height="15.0" fill="rgb(216,121,45)" rx="2" ry="2" />
<text  x="1187.30" y="575.5" ></text>
</g>
<g >
<title>internal/poll.ignoringEINTR (1 samples, 0.02%)</title><rect x="1186.3" y="421" width="0.2" height="15.0" fill="rgb(237,128,29)" rx="2" ry="2" />
<text  x="1189.33" y="431.5" ></text>
</g>
<g >
<title>github.com/lf-edge/eve/pkg/pillar/cmd/domainmgr.getProcessMetric (11 samples, 0.19%)</title><rect x="1185.9" y="581" width="2.3" height="15.0" fill="rgb(251,184,19)" rx="2" ry="2" />
<text  x="1188.93" y="591.5" ></text>
</g>
<g >
<title>os.openFileNolog (1 samples, 0.02%)</title><rect x="1186.1" y="437" width="0.2" height="15.0" fill="rgb(230,9,7)" rx="2" ry="2" />
<text  x="1189.13" y="447.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).init (1 samples, 0.02%)</title><rect x="1186.5" y="453" width="0.2" height="15.0" fill="rgb(242,17,45)" rx="2" ry="2" />
<text  x="1189.54" y="463.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.6" y="325" width="0.2" height="15.0" fill="rgb(221,58,1)" rx="2" ry="2" />
<text  x="13.61" y="335.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="44.0" y="613" width="0.4" height="15.0" fill="rgb(208,201,39)" rx="2" ry="2" />
<text  x="47.02" y="623.5" ></text>
</g>
<g >
<title>github.com/lf-edge/eve/pkg/pillar/pubsub.(*PublicationImpl).Publish (1 samples, 0.02%)</title><rect x="1188.4" y="581" width="0.2" height="15.0" fill="rgb(239,162,25)" rx="2" ry="2" />
<text  x="1191.37" y="591.5" ></text>
</g>
<g >
<title>kworker/1:1H-kb (30 samples, 0.52%)</title><rect x="37.9" y="661" width="6.1" height="15.0" fill="rgb(238,148,53)" rx="2" ry="2" />
<text  x="40.91" y="671.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.6" y="293" width="0.2" height="15.0" fill="rgb(228,204,49)" rx="2" ry="2" />
<text  x="13.61" y="303.5" ></text>
</g>
<g >
<title>encoding/json.Unmarshal (1 samples, 0.02%)</title><rect x="1188.4" y="549" width="0.2" height="15.0" fill="rgb(247,187,35)" rx="2" ry="2" />
<text  x="1191.37" y="559.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="597" width="0.2" height="15.0" fill="rgb(219,165,39)" rx="2" ry="2" />
<text  x="13.41" y="607.5" ></text>
</g>
<g >
<title>github.com/google/go-cmp/cmp.(*state).compareAny (1 samples, 0.02%)</title><rect x="1188.6" y="517" width="0.2" height="15.0" fill="rgb(209,16,26)" rx="2" ry="2" />
<text  x="1191.57" y="527.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1181.9" y="309" width="0.2" height="15.0" fill="rgb(214,139,47)" rx="2" ry="2" />
<text  x="1184.85" y="319.5" ></text>
</g>
<g >
<title>all (5,792 samples, 100%)</title><rect x="10.0" y="677" width="1180.0" height="15.0" fill="rgb(247,196,31)" rx="2" ry="2" />
<text  x="13.00" y="687.5" ></text>
</g>
<g >
<title>[ld-musl-x86_64.so.1] (1 samples, 0.02%)</title><rect x="12.6" y="613" width="0.3" height="15.0" fill="rgb(227,136,1)" rx="2" ry="2" />
<text  x="15.65" y="623.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="629" width="0.2" height="15.0" fill="rgb(213,175,43)" rx="2" ry="2" />
<text  x="13.41" y="639.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.6" y="357" width="0.2" height="15.0" fill="rgb(226,51,52)" rx="2" ry="2" />
<text  x="13.61" y="367.5" ></text>
</g>
<g >
<title>runtime.gentraceback (1 samples, 0.02%)</title><rect x="1189.6" y="501" width="0.2" height="15.0" fill="rgb(231,185,37)" rx="2" ry="2" />
<text  x="1192.59" y="511.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="10.0" y="549" width="0.4" height="15.0" fill="rgb(238,83,2)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>[unknown] (117 samples, 2.02%)</title><rect x="14.1" y="501" width="23.8" height="15.0" fill="rgb(231,8,11)" rx="2" ry="2" />
<text  x="17.07" y="511.5" >[..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="44.6" y="517" width="0.2" height="15.0" fill="rgb(206,37,21)" rx="2" ry="2" />
<text  x="47.63" y="527.5" ></text>
</g>
<g >
<title>[unknown] (122 samples, 2.11%)</title><rect x="13.1" y="549" width="24.8" height="15.0" fill="rgb(208,16,33)" rx="2" ry="2" />
<text  x="16.06" y="559.5" >[..</text>
</g>
<g >
<title>runtime.convTslice (1 samples, 0.02%)</title><rect x="1185.7" y="565" width="0.2" height="15.0" fill="rgb(224,79,28)" rx="2" ry="2" />
<text  x="1188.72" y="575.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1182.1" y="501" width="0.2" height="15.0" fill="rgb(234,145,9)" rx="2" ry="2" />
<text  x="1185.05" y="511.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.12%)</title><rect x="1182.9" y="437" width="1.4" height="15.0" fill="rgb(249,141,49)" rx="2" ry="2" />
<text  x="1185.87" y="447.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker (1 samples, 0.02%)</title><rect x="1189.2" y="629" width="0.2" height="15.0" fill="rgb(254,165,42)" rx="2" ry="2" />
<text  x="1192.19" y="639.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="1182.5" y="437" width="0.4" height="15.0" fill="rgb(249,91,54)" rx="2" ry="2" />
<text  x="1185.46" y="447.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="12.6" y="549" width="0.3" height="15.0" fill="rgb(230,130,28)" rx="2" ry="2" />
<text  x="15.65" y="559.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1186.5" y="405" width="0.2" height="15.0" fill="rgb(212,214,2)" rx="2" ry="2" />
<text  x="1189.54" y="415.5" ></text>
</g>
<g >
<title>[ld-musl-x86_64.so.1] (1 samples, 0.02%)</title><rect x="10.6" y="629" width="0.2" height="15.0" fill="rgb(229,193,30)" rx="2" ry="2" />
<text  x="13.61" y="639.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.02%)</title><rect x="1187.1" y="469" width="0.3" height="15.0" fill="rgb(235,122,45)" rx="2" ry="2" />
<text  x="1190.15" y="479.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="533" width="0.2" height="15.0" fill="rgb(208,215,25)" rx="2" ry="2" />
<text  x="13.41" y="543.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1181.9" y="405" width="0.2" height="15.0" fill="rgb(222,1,40)" rx="2" ry="2" />
<text  x="1184.85" y="415.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1189.2" y="373" width="0.2" height="15.0" fill="rgb(239,188,34)" rx="2" ry="2" />
<text  x="1192.19" y="383.5" ></text>
</g>
<g >
<title>github.com/lf-edge/eve/pkg/pillar/base.(*LockedStringMap).Range (6 samples, 0.10%)</title><rect x="1184.5" y="581" width="1.2" height="15.0" fill="rgb(214,198,21)" rx="2" ry="2" />
<text  x="1187.50" y="591.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1186.5" y="373" width="0.2" height="15.0" fill="rgb(220,45,9)" rx="2" ry="2" />
<text  x="1189.54" y="383.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1189.0" y="165" width="0.2" height="15.0" fill="rgb(232,38,22)" rx="2" ry="2" />
<text  x="1191.98" y="175.5" ></text>
</g>
<g >
<title>github.com/shirou/gopsutil/process.(*Process).fillFromTIDStat (1 samples, 0.02%)</title><rect x="1186.1" y="501" width="0.2" height="15.0" fill="rgb(249,107,24)" rx="2" ry="2" />
<text  x="1189.13" y="511.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1181.9" y="373" width="0.2" height="15.0" fill="rgb(206,105,48)" rx="2" ry="2" />
<text  x="1184.85" y="383.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1189.0" y="133" width="0.2" height="15.0" fill="rgb(229,97,23)" rx="2" ry="2" />
<text  x="1191.98" y="143.5" ></text>
</g>
<g >
<title>github.com/lf-edge/eve/pkg/pillar/pubsub/socketdriver.(*Publisher).serveConnection (6 samples, 0.10%)</title><rect x="1184.5" y="629" width="1.2" height="15.0" fill="rgb(213,119,47)" rx="2" ry="2" />
<text  x="1187.50" y="639.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1189.2" y="405" width="0.2" height="15.0" fill="rgb(226,14,19)" rx="2" ry="2" />
<text  x="1192.19" y="415.5" ></text>
</g>
<g >
<title>github.com/shirou/gopsutil/process.(*Process).fillFromTIDStatWithContext (1 samples, 0.02%)</title><rect x="1186.1" y="485" width="0.2" height="15.0" fill="rgb(234,122,54)" rx="2" ry="2" />
<text  x="1189.13" y="495.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="44.6" y="485" width="0.2" height="15.0" fill="rgb(251,86,50)" rx="2" ry="2" />
<text  x="47.63" y="495.5" ></text>
</g>
<g >
<title>runtime.goschedImpl (1 samples, 0.02%)</title><rect x="1184.9" y="357" width="0.2" height="15.0" fill="rgb(244,102,5)" rx="2" ry="2" />
<text  x="1187.91" y="367.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="1181.0" y="549" width="1.1" height="15.0" fill="rgb(213,185,15)" rx="2" ry="2" />
<text  x="1184.04" y="559.5" ></text>
</g>
<g >
<title>time.Sleep (1 samples, 0.02%)</title><rect x="1184.3" y="613" width="0.2" height="15.0" fill="rgb(242,131,24)" rx="2" ry="2" />
<text  x="1187.30" y="623.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="44.6" y="453" width="0.2" height="15.0" fill="rgb(246,200,13)" rx="2" ry="2" />
<text  x="47.63" y="463.5" ></text>
</g>
<g >
<title>runtime.memhashFallback (1 samples, 0.02%)</title><rect x="1185.3" y="453" width="0.2" height="15.0" fill="rgb(218,173,16)" rx="2" ry="2" />
<text  x="1188.31" y="463.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="44.2" y="581" width="0.2" height="15.0" fill="rgb(241,71,23)" rx="2" ry="2" />
<text  x="47.23" y="591.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).grow (1 samples, 0.02%)</title><rect x="1188.0" y="469" width="0.2" height="15.0" fill="rgb(228,58,54)" rx="2" ry="2" />
<text  x="1190.96" y="479.5" ></text>
</g>
<g >
<title>runtime.findObject (1 samples, 0.02%)</title><rect x="1185.9" y="405" width="0.2" height="15.0" fill="rgb(207,206,11)" rx="2" ry="2" />
<text  x="1188.93" y="415.5" ></text>
</g>
<g >
<title>github.com/shirou/gopsutil/process.(*Process).CreateTimeWithContext (1 samples, 0.02%)</title><rect x="1185.9" y="549" width="0.2" height="15.0" fill="rgb(237,201,41)" rx="2" ry="2" />
<text  x="1188.93" y="559.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.02%)</title><rect x="1187.1" y="453" width="0.3" height="15.0" fill="rgb(210,116,27)" rx="2" ry="2" />
<text  x="1190.15" y="463.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (1 samples, 0.02%)</title><rect x="1184.5" y="405" width="0.2" height="15.0" fill="rgb(241,122,24)" rx="2" ry="2" />
<text  x="1187.50" y="415.5" ></text>
</g>
<g >
<title>github.com/lf-edge/eve/pkg/pillar/pubsub/socketdriver.GetBuffer.func1 (1 samples, 0.02%)</title><rect x="1185.7" y="581" width="0.2" height="15.0" fill="rgb(245,160,15)" rx="2" ry="2" />
<text  x="1188.72" y="591.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1189.0" y="197" width="0.2" height="15.0" fill="rgb(213,204,23)" rx="2" ry="2" />
<text  x="1191.98" y="207.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.02%)</title><rect x="1188.0" y="421" width="0.2" height="15.0" fill="rgb(226,136,42)" rx="2" ry="2" />
<text  x="1190.96" y="431.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (1 samples, 0.02%)</title><rect x="1188.4" y="517" width="0.2" height="15.0" fill="rgb(233,64,53)" rx="2" ry="2" />
<text  x="1191.37" y="527.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="44.6" y="645" width="0.4" height="15.0" fill="rgb(215,27,9)" rx="2" ry="2" />
<text  x="47.63" y="655.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="1181.0" y="517" width="1.1" height="15.0" fill="rgb(218,82,8)" rx="2" ry="2" />
<text  x="1184.04" y="527.5" ></text>
</g>
<g >
<title>[unknown] (5,581 samples, 96.36%)</title><rect x="45.0" y="597" width="1137.1" height="15.0" fill="rgb(233,133,45)" rx="2" ry="2" />
<text  x="48.04" y="607.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (123 samples, 2.12%)</title><rect x="12.9" y="629" width="25.0" height="15.0" fill="rgb(252,110,5)" rx="2" ry="2" />
<text  x="15.85" y="639.5" >[..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1189.0" y="309" width="0.2" height="15.0" fill="rgb(208,97,43)" rx="2" ry="2" />
<text  x="1191.98" y="319.5" ></text>
</g>
<g >
<title>github.com/lf-edge/eve/pkg/pillar/cmd/nim.Run (1 samples, 0.02%)</title><rect x="1188.6" y="613" width="0.2" height="15.0" fill="rgb(205,71,28)" rx="2" ry="2" />
<text  x="1191.57" y="623.5" ></text>
</g>
<g >
<title>github.com/lf-edge/eve/pkg/pillar/pubsub.(*PublicationImpl).GetAll (6 samples, 0.10%)</title><rect x="1184.5" y="597" width="1.2" height="15.0" fill="rgb(230,7,5)" rx="2" ry="2" />
<text  x="1187.50" y="607.5" ></text>
</g>
<g >
<title>runtime.notesleep (1 samples, 0.02%)</title><rect x="1184.3" y="517" width="0.2" height="15.0" fill="rgb(219,40,18)" rx="2" ry="2" />
<text  x="1187.30" y="527.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1188.8" y="309" width="0.2" height="15.0" fill="rgb(240,123,12)" rx="2" ry="2" />
<text  x="1191.78" y="319.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.6" y="645" width="0.2" height="15.0" fill="rgb(218,184,35)" rx="2" ry="2" />
<text  x="13.61" y="655.5" ></text>
</g>
<g >
<title>crypto/tls.(*Conn).writeRecordLocked (1 samples, 0.02%)</title><rect x="1189.0" y="565" width="0.2" height="15.0" fill="rgb(229,118,21)" rx="2" ry="2" />
<text  x="1191.98" y="575.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="12.6" y="629" width="0.3" height="15.0" fill="rgb(227,43,50)" rx="2" ry="2" />
<text  x="15.65" y="639.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="10.0" y="533" width="0.4" height="15.0" fill="rgb(207,99,54)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>github.com/shirou/gopsutil/process.(*Process).fillFromStatWithContext (1 samples, 0.02%)</title><rect x="1185.9" y="517" width="0.2" height="15.0" fill="rgb(228,36,38)" rx="2" ry="2" />
<text  x="1188.93" y="527.5" ></text>
</g>
<g >
<title>runtime.forEachP (1 samples, 0.02%)</title><rect x="1189.2" y="581" width="0.2" height="15.0" fill="rgb(229,81,9)" rx="2" ry="2" />
<text  x="1192.19" y="591.5" ></text>
</g>
<g >
<title>[unknown] (30 samples, 0.52%)</title><rect x="37.9" y="469" width="6.1" height="15.0" fill="rgb(214,177,52)" rx="2" ry="2" />
<text  x="40.91" y="479.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.6" y="469" width="0.2" height="15.0" fill="rgb(210,155,0)" rx="2" ry="2" />
<text  x="13.61" y="479.5" ></text>
</g>
<g >
<title>github.com/google/go-cmp/cmp.(*state).compareAny (1 samples, 0.02%)</title><rect x="1188.6" y="549" width="0.2" height="15.0" fill="rgb(223,177,29)" rx="2" ry="2" />
<text  x="1191.57" y="559.5" ></text>
</g>
<g >
<title>[unknown] (123 samples, 2.12%)</title><rect x="12.9" y="597" width="25.0" height="15.0" fill="rgb(228,129,31)" rx="2" ry="2" />
<text  x="15.85" y="607.5" >[..</text>
</g>
<g >
<title>io/ioutil.readAll (1 samples, 0.02%)</title><rect x="1188.0" y="501" width="0.2" height="15.0" fill="rgb(216,94,20)" rx="2" ry="2" />
<text  x="1190.96" y="511.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="1181.6" y="453" width="0.5" height="15.0" fill="rgb(207,113,24)" rx="2" ry="2" />
<text  x="1184.65" y="463.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1189.0" y="53" width="0.2" height="15.0" fill="rgb(207,76,41)" rx="2" ry="2" />
<text  x="1191.98" y="63.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="1181.6" y="485" width="0.5" height="15.0" fill="rgb(213,67,23)" rx="2" ry="2" />
<text  x="1184.65" y="495.5" ></text>
</g>
<g >
<title>[unknown] (5,581 samples, 96.36%)</title><rect x="45.0" y="629" width="1137.1" height="15.0" fill="rgb(210,52,14)" rx="2" ry="2" />
<text  x="48.04" y="639.5" >[unknown]</text>
</g>
<g >
<title>runtime.mstart (4 samples, 0.07%)</title><rect x="1182.1" y="597" width="0.8" height="15.0" fill="rgb(245,71,13)" rx="2" ry="2" />
<text  x="1185.05" y="607.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.02%)</title><rect x="1187.1" y="421" width="0.3" height="15.0" fill="rgb(253,66,28)" rx="2" ry="2" />
<text  x="1190.15" y="431.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (1 samples, 0.02%)</title><rect x="1187.1" y="405" width="0.3" height="15.0" fill="rgb(213,130,1)" rx="2" ry="2" />
<text  x="1190.15" y="415.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1189.2" y="453" width="0.2" height="15.0" fill="rgb(244,3,21)" rx="2" ry="2" />
<text  x="1192.19" y="463.5" ></text>
</g>
<g >
<title>github.com/lf-edge/eve/pkg/pillar/cmd/nim.tryDeviceConnectivityToCloud (1 samples, 0.02%)</title><rect x="1188.6" y="597" width="0.2" height="15.0" fill="rgb(239,122,41)" rx="2" ry="2" />
<text  x="1191.57" y="607.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.12%)</title><rect x="1182.9" y="421" width="1.4" height="15.0" fill="rgb(207,170,54)" rx="2" ry="2" />
<text  x="1185.87" y="431.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="44.2" y="501" width="0.2" height="15.0" fill="rgb(224,190,50)" rx="2" ry="2" />
<text  x="47.23" y="511.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1189.0" y="85" width="0.2" height="15.0" fill="rgb(217,65,41)" rx="2" ry="2" />
<text  x="1191.98" y="95.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1189.2" y="485" width="0.2" height="15.0" fill="rgb(223,38,2)" rx="2" ry="2" />
<text  x="1192.19" y="495.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="44.2" y="565" width="0.2" height="15.0" fill="rgb(220,132,16)" rx="2" ry="2" />
<text  x="47.23" y="575.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1186.1" y="405" width="0.2" height="15.0" fill="rgb(217,70,25)" rx="2" ry="2" />
<text  x="1189.13" y="415.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="1182.5" y="421" width="0.4" height="15.0" fill="rgb(240,212,33)" rx="2" ry="2" />
<text  x="1185.46" y="431.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.10%)</title><rect x="1183.1" y="181" width="1.2" height="15.0" fill="rgb(238,188,37)" rx="2" ry="2" />
<text  x="1186.07" y="191.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="12.6" y="597" width="0.3" height="15.0" fill="rgb(234,31,32)" rx="2" ry="2" />
<text  x="15.65" y="607.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1186.1" y="373" width="0.2" height="15.0" fill="rgb(223,181,7)" rx="2" ry="2" />
<text  x="1189.13" y="383.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.10%)</title><rect x="1183.1" y="229" width="1.2" height="15.0" fill="rgb(215,53,31)" rx="2" ry="2" />
<text  x="1186.07" y="239.5" ></text>
</g>
<g >
<title>os.StartProcess (1 samples, 0.02%)</title><rect x="1188.8" y="501" width="0.2" height="15.0" fill="rgb(235,164,15)" rx="2" ry="2" />
<text  x="1191.78" y="511.5" ></text>
</g>
<g >
<title>syscall.Syscall (1 samples, 0.02%)</title><rect x="1186.3" y="389" width="0.2" height="15.0" fill="rgb(250,73,42)" rx="2" ry="2" />
<text  x="1189.33" y="399.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1186.1" y="309" width="0.2" height="15.0" fill="rgb(217,37,37)" rx="2" ry="2" />
<text  x="1189.13" y="319.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="1181.0" y="533" width="1.1" height="15.0" fill="rgb(212,26,36)" rx="2" ry="2" />
<text  x="1184.04" y="543.5" ></text>
</g>
<g >
<title>jq (9 samples, 0.16%)</title><rect x="10.8" y="661" width="1.8" height="15.0" fill="rgb(242,89,20)" rx="2" ry="2" />
<text  x="13.81" y="671.5" ></text>
</g>
<g >
<title>github.com/lf-edge/eve/pkg/pillar/base.(*Command).execCommand (1 samples, 0.02%)</title><rect x="1188.8" y="533" width="0.2" height="15.0" fill="rgb(252,118,38)" rx="2" ry="2" />
<text  x="1191.78" y="543.5" ></text>
</g>
<g >
<title>dmidecode (1 samples, 0.02%)</title><rect x="10.4" y="661" width="0.2" height="15.0" fill="rgb(237,9,46)" rx="2" ry="2" />
<text  x="13.41" y="671.5" ></text>
</g>
<g >
<title>os.OpenFile (2 samples, 0.03%)</title><rect x="1186.5" y="517" width="0.4" height="15.0" fill="rgb(210,227,40)" rx="2" ry="2" />
<text  x="1189.54" y="527.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="10.0" y="597" width="0.4" height="15.0" fill="rgb(214,187,2)" rx="2" ry="2" />
<text  x="13.00" y="607.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_faststr (1 samples, 0.02%)</title><rect x="1185.3" y="469" width="0.2" height="15.0" fill="rgb(253,70,19)" rx="2" ry="2" />
<text  x="1188.31" y="479.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.12%)</title><rect x="36.5" y="437" width="1.4" height="15.0" fill="rgb(213,207,45)" rx="2" ry="2" />
<text  x="39.48" y="447.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.12%)</title><rect x="1182.9" y="501" width="1.4" height="15.0" fill="rgb(235,82,1)" rx="2" ry="2" />
<text  x="1185.87" y="511.5" ></text>
</g>
<g >
<title>[unknown] (122 samples, 2.11%)</title><rect x="13.1" y="533" width="24.8" height="15.0" fill="rgb(223,225,20)" rx="2" ry="2" />
<text  x="16.06" y="543.5" >[..</text>
</g>
<g >
<title>net.(*conn).Write (1 samples, 0.02%)</title><rect x="1189.0" y="533" width="0.2" height="15.0" fill="rgb(251,31,18)" rx="2" ry="2" />
<text  x="1191.98" y="543.5" ></text>
</g>
<g >
<title>[libcrypto.so.1.1] (1 samples, 0.02%)</title><rect x="44.8" y="613" width="0.2" height="15.0" fill="rgb(211,93,35)" rx="2" ry="2" />
<text  x="47.84" y="623.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (6 samples, 0.10%)</title><rect x="1184.5" y="501" width="1.2" height="15.0" fill="rgb(231,67,35)" rx="2" ry="2" />
<text  x="1187.50" y="511.5" ></text>
</g>
<g >
<title>github.com/lf-edge/eve/pkg/pillar/cmd/domainmgr.Run (13 samples, 0.22%)</title><rect x="1185.9" y="613" width="2.7" height="15.0" fill="rgb(240,227,4)" rx="2" ry="2" />
<text  x="1188.93" y="623.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.02%)</title><rect x="1184.3" y="501" width="0.2" height="15.0" fill="rgb(215,164,36)" rx="2" ry="2" />
<text  x="1187.30" y="511.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.07%)</title><rect x="1182.1" y="645" width="0.8" height="15.0" fill="rgb(254,43,10)" rx="2" ry="2" />
<text  x="1185.05" y="655.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1189.0" y="405" width="0.2" height="15.0" fill="rgb(241,104,27)" rx="2" ry="2" />
<text  x="1191.98" y="415.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="1182.5" y="501" width="0.4" height="15.0" fill="rgb(207,5,41)" rx="2" ry="2" />
<text  x="1185.46" y="511.5" ></text>
</g>
<g >
<title>bufio.(*Reader).collectFragments (1 samples, 0.02%)</title><rect x="1186.3" y="501" width="0.2" height="15.0" fill="rgb(238,46,22)" rx="2" ry="2" />
<text  x="1189.33" y="511.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1188.8" y="373" width="0.2" height="15.0" fill="rgb(234,51,19)" rx="2" ry="2" />
<text  x="1191.78" y="383.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="549" width="0.2" height="15.0" fill="rgb(217,127,21)" rx="2" ry="2" />
<text  x="13.41" y="559.5" ></text>
</g>
<g >
<title>github.com/google/go-cmp/cmp.(*state).compareAny (1 samples, 0.02%)</title><rect x="1188.6" y="453" width="0.2" height="15.0" fill="rgb(238,183,12)" rx="2" ry="2" />
<text  x="1191.57" y="463.5" ></text>
</g>
<g >
<title>github.com/lf-edge/eve/pkg/pillar/cmd/domainmgr.gatherProcessMetricList (12 samples, 0.21%)</title><rect x="1185.9" y="597" width="2.5" height="15.0" fill="rgb(253,5,31)" rx="2" ry="2" />
<text  x="1188.93" y="607.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1186.7" y="453" width="0.2" height="15.0" fill="rgb(213,165,28)" rx="2" ry="2" />
<text  x="1189.74" y="463.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="10.0" y="629" width="0.4" height="15.0" fill="rgb(220,41,27)" rx="2" ry="2" />
<text  x="13.00" y="639.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1189.0" y="373" width="0.2" height="15.0" fill="rgb(250,93,47)" rx="2" ry="2" />
<text  x="1191.98" y="383.5" ></text>
</g>
<g >
<title>runtime.gentraceback (1 samples, 0.02%)</title><rect x="1189.4" y="533" width="0.2" height="15.0" fill="rgb(207,181,8)" rx="2" ry="2" />
<text  x="1192.39" y="543.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1188.8" y="405" width="0.2" height="15.0" fill="rgb(207,149,33)" rx="2" ry="2" />
<text  x="1191.78" y="415.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="12.6" y="533" width="0.3" height="15.0" fill="rgb(243,141,29)" rx="2" ry="2" />
<text  x="15.65" y="543.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).rescanLiteral (1 samples, 0.02%)</title><rect x="1185.1" y="453" width="0.2" height="15.0" fill="rgb(210,180,6)" rx="2" ry="2" />
<text  x="1188.11" y="463.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (1 samples, 0.02%)</title><rect x="1187.1" y="437" width="0.3" height="15.0" fill="rgb(209,63,51)" rx="2" ry="2" />
<text  x="1190.15" y="447.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1184.3" y="469" width="0.2" height="15.0" fill="rgb(230,208,11)" rx="2" ry="2" />
<text  x="1187.30" y="479.5" ></text>
</g>
<g >
<title>syscall.Syscall (1 samples, 0.02%)</title><rect x="1188.2" y="469" width="0.2" height="15.0" fill="rgb(242,33,16)" rx="2" ry="2" />
<text  x="1191.17" y="479.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="10.0" y="565" width="0.4" height="15.0" fill="rgb(206,162,4)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).rescanLiteral (1 samples, 0.02%)</title><rect x="1185.5" y="485" width="0.2" height="15.0" fill="rgb(235,27,54)" rx="2" ry="2" />
<text  x="1188.52" y="495.5" ></text>
</g>
<g >
<title>github.com/shirou/gopsutil/process.(*Process).CPUPercentWithContext (2 samples, 0.03%)</title><rect x="1185.9" y="565" width="0.4" height="15.0" fill="rgb(208,167,10)" rx="2" ry="2" />
<text  x="1188.93" y="575.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1186.1" y="341" width="0.2" height="15.0" fill="rgb(230,39,29)" rx="2" ry="2" />
<text  x="1189.13" y="351.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1189.0" y="261" width="0.2" height="15.0" fill="rgb(245,136,49)" rx="2" ry="2" />
<text  x="1191.98" y="271.5" ></text>
</g>
<g >
<title>pgrep (1 samples, 0.02%)</title><rect x="44.4" y="661" width="0.2" height="15.0" fill="rgb(228,128,27)" rx="2" ry="2" />
<text  x="47.43" y="671.5" ></text>
</g>
<g >
<title>os.(*File).Close (1 samples, 0.02%)</title><rect x="1188.2" y="549" width="0.2" height="15.0" fill="rgb(214,85,52)" rx="2" ry="2" />
<text  x="1191.17" y="559.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="43.8" y="421" width="0.2" height="15.0" fill="rgb(221,20,47)" rx="2" ry="2" />
<text  x="46.82" y="431.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1184.9" y="325" width="0.2" height="15.0" fill="rgb(214,90,49)" rx="2" ry="2" />
<text  x="1187.91" y="335.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.6" y="421" width="0.2" height="15.0" fill="rgb(241,25,53)" rx="2" ry="2" />
<text  x="13.61" y="431.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="581" width="0.2" height="15.0" fill="rgb(241,136,45)" rx="2" ry="2" />
<text  x="13.41" y="591.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1184.9" y="293" width="0.2" height="15.0" fill="rgb(246,32,54)" rx="2" ry="2" />
<text  x="1187.91" y="303.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1189.0" y="37" width="0.2" height="15.0" fill="rgb(206,145,33)" rx="2" ry="2" />
<text  x="1191.98" y="47.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.12%)</title><rect x="1182.9" y="469" width="1.4" height="15.0" fill="rgb(216,221,5)" rx="2" ry="2" />
<text  x="1185.87" y="479.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1186.1" y="389" width="0.2" height="15.0" fill="rgb(248,215,16)" rx="2" ry="2" />
<text  x="1189.13" y="399.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="44.2" y="533" width="0.2" height="15.0" fill="rgb(245,39,34)" rx="2" ry="2" />
<text  x="47.23" y="543.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (3 samples, 0.05%)</title><rect x="1184.7" y="469" width="0.6" height="15.0" fill="rgb(240,46,9)" rx="2" ry="2" />
<text  x="1187.70" y="479.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).unmarshal (6 samples, 0.10%)</title><rect x="1184.5" y="517" width="1.2" height="15.0" fill="rgb(244,26,22)" rx="2" ry="2" />
<text  x="1187.50" y="527.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="37.7" y="357" width="0.2" height="15.0" fill="rgb(231,78,2)" rx="2" ry="2" />
<text  x="40.71" y="367.5" ></text>
</g>
<g >
<title>github.com/shirou/gopsutil/process.(*Process).MemoryPercentWithContext (9 samples, 0.16%)</title><rect x="1186.3" y="565" width="1.9" height="15.0" fill="rgb(229,170,28)" rx="2" ry="2" />
<text  x="1189.33" y="575.5" ></text>
</g>
<g >
<title>runtime.copystack (1 samples, 0.02%)</title><rect x="1189.6" y="517" width="0.2" height="15.0" fill="rgb(209,123,27)" rx="2" ry="2" />
<text  x="1192.59" y="527.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1189.0" y="69" width="0.2" height="15.0" fill="rgb(215,137,28)" rx="2" ry="2" />
<text  x="1191.98" y="79.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="1182.5" y="469" width="0.4" height="15.0" fill="rgb(243,11,10)" rx="2" ry="2" />
<text  x="1185.46" y="479.5" ></text>
</g>
<g >
<title>os.OpenFile (1 samples, 0.02%)</title><rect x="1186.1" y="453" width="0.2" height="15.0" fill="rgb(249,4,22)" rx="2" ry="2" />
<text  x="1189.13" y="463.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="44.0" y="629" width="0.4" height="15.0" fill="rgb(239,90,30)" rx="2" ry="2" />
<text  x="47.02" y="639.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1188.8" y="341" width="0.2" height="15.0" fill="rgb(224,48,27)" rx="2" ry="2" />
<text  x="1191.78" y="351.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1181.9" y="277" width="0.2" height="15.0" fill="rgb(236,135,10)" rx="2" ry="2" />
<text  x="1184.85" y="287.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1189.0" y="341" width="0.2" height="15.0" fill="rgb(241,128,26)" rx="2" ry="2" />
<text  x="1191.98" y="351.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1186.1" y="261" width="0.2" height="15.0" fill="rgb(252,7,10)" rx="2" ry="2" />
<text  x="1189.13" y="271.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Close (1 samples, 0.02%)</title><rect x="1188.2" y="517" width="0.2" height="15.0" fill="rgb(216,39,5)" rx="2" ry="2" />
<text  x="1191.17" y="527.5" ></text>
</g>
<g >
<title>github.com/shirou/gopsutil/process.(*Process).fillFromStat (1 samples, 0.02%)</title><rect x="1185.9" y="533" width="0.2" height="15.0" fill="rgb(232,114,46)" rx="2" ry="2" />
<text  x="1188.93" y="543.5" ></text>
</g>
<g >
<title>syscall.Syscall6 (1 samples, 0.02%)</title><rect x="1186.1" y="421" width="0.2" height="15.0" fill="rgb(235,55,48)" rx="2" ry="2" />
<text  x="1189.13" y="431.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.02%)</title><rect x="1189.2" y="533" width="0.2" height="15.0" fill="rgb(220,224,41)" rx="2" ry="2" />
<text  x="1192.19" y="543.5" ></text>
</g>
<g >
<title>[unknown] (30 samples, 0.52%)</title><rect x="37.9" y="501" width="6.1" height="15.0" fill="rgb(216,128,23)" rx="2" ry="2" />
<text  x="40.91" y="511.5" ></text>
</g>
<g >
<title>[unknown] (5,581 samples, 96.36%)</title><rect x="45.0" y="565" width="1137.1" height="15.0" fill="rgb(207,42,19)" rx="2" ry="2" />
<text  x="48.04" y="575.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.6" y="501" width="0.2" height="15.0" fill="rgb(212,63,34)" rx="2" ry="2" />
<text  x="13.61" y="511.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.10%)</title><rect x="1183.1" y="245" width="1.2" height="15.0" fill="rgb(227,108,25)" rx="2" ry="2" />
<text  x="1186.07" y="255.5" ></text>
</g>
<g >
<title>github.com/shirou/gopsutil/process.(*Process).fillFromStat (1 samples, 0.02%)</title><rect x="1186.1" y="533" width="0.2" height="15.0" fill="rgb(239,116,37)" rx="2" ry="2" />
<text  x="1189.13" y="543.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone.func1 (1 samples, 0.02%)</title><rect x="1189.2" y="597" width="0.2" height="15.0" fill="rgb(225,112,8)" rx="2" ry="2" />
<text  x="1192.19" y="607.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="44.4" y="517" width="0.2" height="15.0" fill="rgb(232,79,30)" rx="2" ry="2" />
<text  x="47.43" y="527.5" ></text>
</g>
<g >
<title>github.com/lf-edge/eve/pkg/pillar/cmd/zedrouter.getNetworkMetrics (1 samples, 0.02%)</title><rect x="1188.8" y="597" width="0.2" height="15.0" fill="rgb(213,25,5)" rx="2" ry="2" />
<text  x="1191.78" y="607.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.10%)</title><rect x="1183.1" y="213" width="1.2" height="15.0" fill="rgb(240,90,26)" rx="2" ry="2" />
<text  x="1186.07" y="223.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="44.0" y="597" width="0.4" height="15.0" fill="rgb(232,10,7)" rx="2" ry="2" />
<text  x="47.02" y="607.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.02%)</title><rect x="1187.1" y="501" width="0.3" height="15.0" fill="rgb(237,39,2)" rx="2" ry="2" />
<text  x="1190.15" y="511.5" ></text>
</g>
<g >
<title>runtime.SetFinalizer (1 samples, 0.02%)</title><rect x="1185.9" y="421" width="0.2" height="15.0" fill="rgb(248,58,24)" rx="2" ry="2" />
<text  x="1188.93" y="431.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1189.0" y="389" width="0.2" height="15.0" fill="rgb(250,130,43)" rx="2" ry="2" />
<text  x="1191.98" y="399.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="12.6" y="565" width="0.3" height="15.0" fill="rgb(216,72,19)" rx="2" ry="2" />
<text  x="15.65" y="575.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1188.8" y="389" width="0.2" height="15.0" fill="rgb(246,173,50)" rx="2" ry="2" />
<text  x="1191.78" y="399.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.02%)</title><rect x="1188.6" y="389" width="0.2" height="15.0" fill="rgb(219,21,19)" rx="2" ry="2" />
<text  x="1191.57" y="399.5" ></text>
</g>
<g >
<title>[unknown] (123 samples, 2.12%)</title><rect x="12.9" y="565" width="25.0" height="15.0" fill="rgb(222,181,13)" rx="2" ry="2" />
<text  x="15.85" y="575.5" >[..</text>
</g>
<g >
<title>crypto/tls.(*Conn).Write (1 samples, 0.02%)</title><rect x="1189.0" y="581" width="0.2" height="15.0" fill="rgb(228,197,17)" rx="2" ry="2" />
<text  x="1191.98" y="591.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="10.0" y="501" width="0.4" height="15.0" fill="rgb(241,179,49)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.10%)</title><rect x="1183.1" y="149" width="1.2" height="15.0" fill="rgb(241,178,40)" rx="2" ry="2" />
<text  x="1186.07" y="159.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker.func2 (3 samples, 0.05%)</title><rect x="1189.4" y="613" width="0.6" height="15.0" fill="rgb(233,209,29)" rx="2" ry="2" />
<text  x="1192.39" y="623.5" ></text>
</g>
<g >
<title>runtime.scanstack (2 samples, 0.03%)</title><rect x="1189.4" y="549" width="0.4" height="15.0" fill="rgb(228,70,36)" rx="2" ry="2" />
<text  x="1192.39" y="559.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="44.4" y="485" width="0.2" height="15.0" fill="rgb(208,210,5)" rx="2" ry="2" />
<text  x="47.43" y="495.5" ></text>
</g>
</g>
</svg>
