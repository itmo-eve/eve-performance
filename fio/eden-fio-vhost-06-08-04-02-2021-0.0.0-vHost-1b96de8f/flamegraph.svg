<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="566" onload="init(evt)" viewBox="0 0 1200 566" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="566.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="549" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="549" > </text>
<g id="frames">
<g >
<title>net_rx_action (12 samples, 0.01%)</title><rect x="1178.5" y="325" width="0.2" height="15.0" fill="rgb(246,214,15)" rx="2" ry="2" />
<text  x="1181.55" y="335.5" ></text>
</g>
<g >
<title>[newlogd] (35 samples, 0.03%)</title><rect x="21.7" y="437" width="0.4" height="15.0" fill="rgb(236,210,30)" rx="2" ry="2" />
<text  x="24.74" y="447.5" ></text>
</g>
<g >
<title>do_sys_open (50 samples, 0.04%)</title><rect x="29.2" y="421" width="0.5" height="15.0" fill="rgb(211,145,45)" rx="2" ry="2" />
<text  x="32.22" y="431.5" ></text>
</g>
<g >
<title>[zedbox] (58 samples, 0.04%)</title><rect x="1187.1" y="165" width="0.5" height="15.0" fill="rgb(245,29,54)" rx="2" ry="2" />
<text  x="1190.07" y="175.5" ></text>
</g>
<g >
<title>do_idle (31,852 samples, 24.02%)</title><rect x="40.5" y="437" width="283.5" height="15.0" fill="rgb(209,128,25)" rx="2" ry="2" />
<text  x="43.47" y="447.5" >do_idle</text>
</g>
<g >
<title>[memlogd] (12 samples, 0.01%)</title><rect x="21.4" y="421" width="0.1" height="15.0" fill="rgb(217,213,54)" rx="2" ry="2" />
<text  x="24.44" y="431.5" ></text>
</g>
<g >
<title>[ld-musl-x86_64.so.1] (98 samples, 0.07%)</title><rect x="16.9" y="485" width="0.9" height="15.0" fill="rgb(227,63,27)" rx="2" ry="2" />
<text  x="19.89" y="495.5" ></text>
</g>
<g >
<title>vcpu_put (13 samples, 0.01%)</title><rect x="39.5" y="341" width="0.1" height="15.0" fill="rgb(237,43,23)" rx="2" ry="2" />
<text  x="42.53" y="351.5" ></text>
</g>
<g >
<title>[zedbox] (40 samples, 0.03%)</title><rect x="1180.3" y="453" width="0.3" height="15.0" fill="rgb(234,156,54)" rx="2" ry="2" />
<text  x="1183.29" y="463.5" ></text>
</g>
<g >
<title>ktime_get (108 samples, 0.08%)</title><rect x="34.8" y="325" width="0.9" height="15.0" fill="rgb(237,83,37)" rx="2" ry="2" />
<text  x="37.76" y="335.5" ></text>
</g>
<g >
<title>[zedbox] (141 samples, 0.11%)</title><rect x="1186.5" y="213" width="1.3" height="15.0" fill="rgb(208,32,10)" rx="2" ry="2" />
<text  x="1189.55" y="223.5" ></text>
</g>
<g >
<title>try_to_wake_up (40 samples, 0.03%)</title><rect x="32.4" y="357" width="0.4" height="15.0" fill="rgb(249,15,4)" rx="2" ry="2" />
<text  x="35.41" y="367.5" ></text>
</g>
<g >
<title>kvm_irq_delivery_to_apic (27 samples, 0.02%)</title><rect x="39.8" y="325" width="0.2" height="15.0" fill="rgb(237,17,3)" rx="2" ry="2" />
<text  x="42.80" y="335.5" ></text>
</g>
<g >
<title>__generic_file_write_iter (25 samples, 0.02%)</title><rect x="14.9" y="85" width="0.2" height="15.0" fill="rgb(215,77,42)" rx="2" ry="2" />
<text  x="17.89" y="95.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (25 samples, 0.02%)</title><rect x="14.9" y="101" width="0.2" height="15.0" fill="rgb(247,172,21)" rx="2" ry="2" />
<text  x="17.89" y="111.5" ></text>
</g>
<g >
<title>vfs_ioctl (800 samples, 0.60%)</title><rect x="32.9" y="389" width="7.2" height="15.0" fill="rgb(253,206,8)" rx="2" ry="2" />
<text  x="35.94" y="399.5" ></text>
</g>
<g >
<title>[memlogd] (13 samples, 0.01%)</title><rect x="21.4" y="469" width="0.1" height="15.0" fill="rgb(234,207,40)" rx="2" ry="2" />
<text  x="24.43" y="479.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (34 samples, 0.03%)</title><rect x="1177.5" y="373" width="0.3" height="15.0" fill="rgb(207,134,27)" rx="2" ry="2" />
<text  x="1180.53" y="383.5" ></text>
</g>
<g >
<title>ioctl (820 samples, 0.62%)</title><rect x="32.8" y="485" width="7.3" height="15.0" fill="rgb(244,79,5)" rx="2" ry="2" />
<text  x="35.82" y="495.5" ></text>
</g>
<g >
<title>finish_task_switch (22 samples, 0.02%)</title><rect x="39.2" y="293" width="0.2" height="15.0" fill="rgb(210,219,52)" rx="2" ry="2" />
<text  x="42.17" y="303.5" ></text>
</g>
<g >
<title>kvm_irq_delivery_to_apic_fast (27 samples, 0.02%)</title><rect x="39.8" y="309" width="0.2" height="15.0" fill="rgb(228,216,28)" rx="2" ry="2" />
<text  x="42.80" y="319.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (17 samples, 0.01%)</title><rect x="39.8" y="229" width="0.2" height="15.0" fill="rgb(251,86,39)" rx="2" ry="2" />
<text  x="42.83" y="239.5" ></text>
</g>
<g >
<title>vmx_interrupt_allowed (115 samples, 0.09%)</title><rect x="38.0" y="293" width="1.0" height="15.0" fill="rgb(251,123,28)" rx="2" ry="2" />
<text  x="40.96" y="303.5" ></text>
</g>
<g >
<title>[zedbox] (253 samples, 0.19%)</title><rect x="1185.9" y="245" width="2.3" height="15.0" fill="rgb(211,59,3)" rx="2" ry="2" />
<text  x="1188.91" y="255.5" ></text>
</g>
<g >
<title>do_syscall_64 (15 samples, 0.01%)</title><rect x="1188.0" y="213" width="0.1" height="15.0" fill="rgb(247,83,40)" rx="2" ry="2" />
<text  x="1191.02" y="223.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).huffmanBlock (119 samples, 0.09%)</title><rect x="13.0" y="101" width="1.0" height="15.0" fill="rgb(219,168,26)" rx="2" ry="2" />
<text  x="15.97" y="111.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.01%)</title><rect x="1188.0" y="229" width="0.2" height="15.0" fill="rgb(252,136,25)" rx="2" ry="2" />
<text  x="1191.02" y="239.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/api/services/diff/v1._Diff_Apply_Handler.func1 (442 samples, 0.33%)</title><rect x="12.8" y="389" width="3.9" height="15.0" fill="rgb(229,176,42)" rx="2" ry="2" />
<text  x="15.77" y="399.5" ></text>
</g>
<g >
<title>vmx_get_cpl (16 samples, 0.01%)</title><rect x="34.5" y="245" width="0.2" height="15.0" fill="rgb(234,67,52)" rx="2" ry="2" />
<text  x="37.54" y="255.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (16 samples, 0.01%)</title><rect x="33.9" y="165" width="0.1" height="15.0" fill="rgb(205,102,8)" rx="2" ry="2" />
<text  x="36.91" y="175.5" ></text>
</g>
<g >
<title>[zedbox] (82 samples, 0.06%)</title><rect x="1186.9" y="181" width="0.7" height="15.0" fill="rgb(214,120,52)" rx="2" ry="2" />
<text  x="1189.89" y="191.5" ></text>
</g>
<g >
<title>run_timer_softirq (21 samples, 0.02%)</title><rect x="323.2" y="325" width="0.2" height="15.0" fill="rgb(238,170,6)" rx="2" ry="2" />
<text  x="326.19" y="335.5" ></text>
</g>
<g >
<title>__do_sys_futex (41 samples, 0.03%)</title><rect x="32.4" y="421" width="0.4" height="15.0" fill="rgb(246,178,31)" rx="2" ry="2" />
<text  x="35.40" y="431.5" ></text>
</g>
<g >
<title>generic_perform_write (20 samples, 0.02%)</title><rect x="22.7" y="293" width="0.2" height="15.0" fill="rgb(224,54,34)" rx="2" ry="2" />
<text  x="25.73" y="303.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (40 samples, 0.03%)</title><rect x="32.4" y="341" width="0.4" height="15.0" fill="rgb(225,192,7)" rx="2" ry="2" />
<text  x="35.41" y="351.5" ></text>
</g>
<g >
<title>kvm_vcpu_wake_up (19 samples, 0.01%)</title><rect x="39.8" y="261" width="0.2" height="15.0" fill="rgb(247,52,28)" rx="2" ry="2" />
<text  x="42.81" y="271.5" ></text>
</g>
<g >
<title>archive/tar.(*regFileReader).Read (220 samples, 0.17%)</title><rect x="12.9" y="213" width="2.0" height="15.0" fill="rgb(232,108,21)" rx="2" ry="2" />
<text  x="15.91" y="223.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (35 samples, 0.03%)</title><rect x="323.7" y="357" width="0.3" height="15.0" fill="rgb(239,181,4)" rx="2" ry="2" />
<text  x="326.66" y="367.5" ></text>
</g>
<g >
<title>kvm_vcpu_kick (16 samples, 0.01%)</title><rect x="33.9" y="213" width="0.1" height="15.0" fill="rgb(254,219,24)" rx="2" ry="2" />
<text  x="36.91" y="223.5" ></text>
</g>
<g >
<title>__raw_spin_unlock_irq (35 samples, 0.03%)</title><rect x="323.7" y="373" width="0.3" height="15.0" fill="rgb(240,137,7)" rx="2" ry="2" />
<text  x="326.66" y="383.5" ></text>
</g>
<g >
<title>do_iter_write (22 samples, 0.02%)</title><rect x="22.7" y="357" width="0.2" height="15.0" fill="rgb(235,71,42)" rx="2" ry="2" />
<text  x="25.71" y="367.5" ></text>
</g>
<g >
<title>futex_wake (41 samples, 0.03%)</title><rect x="32.4" y="389" width="0.4" height="15.0" fill="rgb(244,51,34)" rx="2" ry="2" />
<text  x="35.40" y="399.5" ></text>
</g>
<g >
<title>__do_sys_futex (13 samples, 0.01%)</title><rect x="1180.4" y="309" width="0.1" height="15.0" fill="rgb(237,95,21)" rx="2" ry="2" />
<text  x="1183.43" y="319.5" ></text>
</g>
<g >
<title>bufio.(*Reader).ReadByte (15 samples, 0.01%)</title><rect x="13.8" y="69" width="0.2" height="15.0" fill="rgb(223,159,0)" rx="2" ry="2" />
<text  x="16.82" y="79.5" ></text>
</g>
<g >
<title>do_iter_write (22 samples, 0.02%)</title><rect x="22.7" y="405" width="0.2" height="15.0" fill="rgb(240,37,2)" rx="2" ry="2" />
<text  x="25.71" y="415.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (51 samples, 0.04%)</title><rect x="26.9" y="373" width="0.5" height="15.0" fill="rgb(251,16,1)" rx="2" ry="2" />
<text  x="29.91" y="383.5" ></text>
</g>
<g >
<title>[qemu-system-x86_64] (84 samples, 0.06%)</title><rect x="30.8" y="469" width="0.8" height="15.0" fill="rgb(221,194,39)" rx="2" ry="2" />
<text  x="33.84" y="479.5" ></text>
</g>
<g >
<title>do_syscall_64 (49 samples, 0.04%)</title><rect x="22.5" y="453" width="0.4" height="15.0" fill="rgb(214,133,22)" rx="2" ry="2" />
<text  x="25.47" y="463.5" ></text>
</g>
<g >
<title>virtqueue_notify (14 samples, 0.01%)</title><rect x="21.0" y="261" width="0.2" height="15.0" fill="rgb(233,192,41)" rx="2" ry="2" />
<text  x="24.03" y="271.5" ></text>
</g>
<g >
<title>bufio.(*Reader).ReadByte (16 samples, 0.01%)</title><rect x="14.6" y="53" width="0.1" height="15.0" fill="rgb(222,117,49)" rx="2" ry="2" />
<text  x="17.56" y="63.5" ></text>
</g>
<g >
<title>runtime.goexit (523 samples, 0.39%)</title><rect x="12.2" y="485" width="4.7" height="15.0" fill="rgb(242,143,54)" rx="2" ry="2" />
<text  x="15.21" y="495.5" ></text>
</g>
<g >
<title>cpu_startup_entry (96,185 samples, 72.55%)</title><rect x="324.0" y="453" width="856.0" height="15.0" fill="rgb(245,28,2)" rx="2" ry="2" />
<text  x="326.97" y="463.5" >cpu_startup_entry</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (19 samples, 0.01%)</title><rect x="1189.2" y="325" width="0.2" height="15.0" fill="rgb(223,185,41)" rx="2" ry="2" />
<text  x="1192.23" y="335.5" ></text>
</g>
<g >
<title>[unknown] (123 samples, 0.09%)</title><rect x="1180.3" y="485" width="1.1" height="15.0" fill="rgb(210,132,14)" rx="2" ry="2" />
<text  x="1183.28" y="495.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).huffSym (13 samples, 0.01%)</title><rect x="16.2" y="37" width="0.1" height="15.0" fill="rgb(207,19,7)" rx="2" ry="2" />
<text  x="19.16" y="47.5" ></text>
</g>
<g >
<title>finish_task_switch (36 samples, 0.03%)</title><rect x="323.6" y="389" width="0.4" height="15.0" fill="rgb(214,116,43)" rx="2" ry="2" />
<text  x="326.65" y="399.5" ></text>
</g>
<g >
<title>timekeeping_get_ns (96 samples, 0.07%)</title><rect x="34.9" y="309" width="0.8" height="15.0" fill="rgb(211,100,3)" rx="2" ry="2" />
<text  x="37.87" y="319.5" ></text>
</g>
<g >
<title>[zedbox] (39 samples, 0.03%)</title><rect x="1187.2" y="149" width="0.3" height="15.0" fill="rgb(245,184,48)" rx="2" ry="2" />
<text  x="1190.16" y="159.5" ></text>
</g>
<g >
<title>schedule (23 samples, 0.02%)</title><rect x="39.2" y="325" width="0.2" height="15.0" fill="rgb(247,52,13)" rx="2" ry="2" />
<text  x="42.16" y="335.5" ></text>
</g>
<g >
<title>ret_from_fork (19 samples, 0.01%)</title><rect x="21.2" y="485" width="0.2" height="15.0" fill="rgb(207,136,49)" rx="2" ry="2" />
<text  x="24.22" y="495.5" ></text>
</g>
<g >
<title>[memlogd] (13 samples, 0.01%)</title><rect x="21.4" y="485" width="0.1" height="15.0" fill="rgb(245,197,27)" rx="2" ry="2" />
<text  x="24.43" y="495.5" ></text>
</g>
<g >
<title>memmove (14 samples, 0.01%)</title><rect x="40.2" y="485" width="0.1" height="15.0" fill="rgb(222,127,45)" rx="2" ry="2" />
<text  x="43.15" y="495.5" ></text>
</g>
<g >
<title>kvm_mmu_page_fault (16 samples, 0.01%)</title><rect x="34.2" y="341" width="0.2" height="15.0" fill="rgb(230,190,20)" rx="2" ry="2" />
<text  x="37.24" y="351.5" ></text>
</g>
<g >
<title>[zedbox] (30 samples, 0.02%)</title><rect x="1187.2" y="133" width="0.3" height="15.0" fill="rgb(249,161,24)" rx="2" ry="2" />
<text  x="1190.22" y="143.5" ></text>
</g>
<g >
<title>poll_schedule_timeout.constprop.9 (28 samples, 0.02%)</title><rect x="28.4" y="389" width="0.2" height="15.0" fill="rgb(226,166,46)" rx="2" ry="2" />
<text  x="31.39" y="399.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (48 samples, 0.04%)</title><rect x="27.7" y="357" width="0.4" height="15.0" fill="rgb(207,2,31)" rx="2" ry="2" />
<text  x="30.71" y="367.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/metadata.(*DB).GarbageCollect.func2 (12 samples, 0.01%)</title><rect x="12.4" y="469" width="0.1" height="15.0" fill="rgb(251,135,47)" rx="2" ry="2" />
<text  x="15.38" y="479.5" ></text>
</g>
<g >
<title>ovl_write_iter (22 samples, 0.02%)</title><rect x="22.7" y="373" width="0.2" height="15.0" fill="rgb(207,224,29)" rx="2" ry="2" />
<text  x="25.71" y="383.5" ></text>
</g>
<g >
<title>__apic_update_ppr (17 samples, 0.01%)</title><rect x="37.3" y="261" width="0.1" height="15.0" fill="rgb(226,179,28)" rx="2" ry="2" />
<text  x="40.27" y="271.5" ></text>
</g>
<g >
<title>apic_has_pending_timer (19 samples, 0.01%)</title><rect x="36.3" y="309" width="0.2" height="15.0" fill="rgb(247,47,20)" rx="2" ry="2" />
<text  x="39.35" y="319.5" ></text>
</g>
<g >
<title>ret_from_fork (63 samples, 0.05%)</title><rect x="18.3" y="485" width="0.5" height="15.0" fill="rgb(246,204,53)" rx="2" ry="2" />
<text  x="21.28" y="495.5" ></text>
</g>
<g >
<title>__kvm_set_msr (27 samples, 0.02%)</title><rect x="33.9" y="325" width="0.2" height="15.0" fill="rgb(212,180,2)" rx="2" ry="2" />
<text  x="36.85" y="335.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (13 samples, 0.01%)</title><rect x="22.7" y="277" width="0.2" height="15.0" fill="rgb(232,74,27)" rx="2" ry="2" />
<text  x="25.74" y="287.5" ></text>
</g>
<g >
<title>ext4_writepages (17 samples, 0.01%)</title><rect x="21.2" y="325" width="0.2" height="15.0" fill="rgb(223,37,23)" rx="2" ry="2" />
<text  x="24.23" y="335.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (22 samples, 0.02%)</title><rect x="22.7" y="389" width="0.2" height="15.0" fill="rgb(221,197,37)" rx="2" ry="2" />
<text  x="25.71" y="399.5" ></text>
</g>
<g >
<title>kvm_io_bus_write (61 samples, 0.05%)</title><rect x="33.2" y="325" width="0.5" height="15.0" fill="rgb(240,111,23)" rx="2" ry="2" />
<text  x="36.16" y="335.5" ></text>
</g>
<g >
<title>kvm_apic_accept_pic_intr (15 samples, 0.01%)</title><rect x="37.6" y="261" width="0.2" height="15.0" fill="rgb(226,128,32)" rx="2" ry="2" />
<text  x="40.64" y="271.5" ></text>
</g>
<g >
<title>[zedbox] (957 samples, 0.72%)</title><rect x="1181.4" y="437" width="8.6" height="15.0" fill="rgb(250,140,34)" rx="2" ry="2" />
<text  x="1184.45" y="447.5" ></text>
</g>
<g >
<title>kvm_arch_vcpu_runnable (278 samples, 0.21%)</title><rect x="36.5" y="309" width="2.5" height="15.0" fill="rgb(211,179,37)" rx="2" ry="2" />
<text  x="39.51" y="319.5" ></text>
</g>
<g >
<title>[qemu-system-x86_64] (46 samples, 0.03%)</title><rect x="23.0" y="485" width="0.4" height="15.0" fill="rgb(253,28,12)" rx="2" ry="2" />
<text  x="25.99" y="495.5" ></text>
</g>
<g >
<title>kvm_set_msr_common (24 samples, 0.02%)</title><rect x="33.9" y="293" width="0.2" height="15.0" fill="rgb(222,68,30)" rx="2" ry="2" />
<text  x="36.88" y="303.5" ></text>
</g>
<g >
<title>[newlogd] (14 samples, 0.01%)</title><rect x="21.9" y="341" width="0.1" height="15.0" fill="rgb(221,181,25)" rx="2" ry="2" />
<text  x="24.86" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (24 samples, 0.02%)</title><rect x="1187.8" y="213" width="0.2" height="15.0" fill="rgb(211,1,41)" rx="2" ry="2" />
<text  x="1190.80" y="223.5" ></text>
</g>
<g >
<title>vmx_read_guest_seg_ar (15 samples, 0.01%)</title><rect x="34.5" y="229" width="0.2" height="15.0" fill="rgb(209,131,49)" rx="2" ry="2" />
<text  x="37.55" y="239.5" ></text>
</g>
<g >
<title>irq_exit (12 samples, 0.01%)</title><rect x="1181.3" y="421" width="0.1" height="15.0" fill="rgb(242,103,34)" rx="2" ry="2" />
<text  x="1184.27" y="431.5" ></text>
</g>
<g >
<title>rcu_core (12 samples, 0.01%)</title><rect x="1177.6" y="325" width="0.1" height="15.0" fill="rgb(228,190,14)" rx="2" ry="2" />
<text  x="1180.57" y="335.5" ></text>
</g>
<g >
<title>syscall.Syscall (26 samples, 0.02%)</title><rect x="14.9" y="197" width="0.2" height="15.0" fill="rgb(214,228,35)" rx="2" ry="2" />
<text  x="17.88" y="207.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (16 samples, 0.01%)</title><rect x="33.9" y="181" width="0.1" height="15.0" fill="rgb(250,95,11)" rx="2" ry="2" />
<text  x="36.91" y="191.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/diff/apply.apply.func1 (135 samples, 0.10%)</title><rect x="15.5" y="277" width="1.2" height="15.0" fill="rgb(214,146,35)" rx="2" ry="2" />
<text  x="18.50" y="287.5" ></text>
</g>
<g >
<title>__generic_file_write_iter (20 samples, 0.02%)</title><rect x="22.7" y="309" width="0.2" height="15.0" fill="rgb(240,114,51)" rx="2" ry="2" />
<text  x="25.73" y="319.5" ></text>
</g>
<g >
<title>do_vfs_ioctl (800 samples, 0.60%)</title><rect x="32.9" y="405" width="7.2" height="15.0" fill="rgb(217,84,48)" rx="2" ry="2" />
<text  x="35.94" y="415.5" ></text>
</g>
<g >
<title>do_syscall_64 (16 samples, 0.01%)</title><rect x="1180.4" y="325" width="0.2" height="15.0" fill="rgb(226,92,17)" rx="2" ry="2" />
<text  x="1183.43" y="335.5" ></text>
</g>
<g >
<title>kvm_irq_delivery_to_apic (21 samples, 0.02%)</title><rect x="33.9" y="261" width="0.2" height="15.0" fill="rgb(220,197,5)" rx="2" ry="2" />
<text  x="36.89" y="271.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (20 samples, 0.02%)</title><rect x="1189.0" y="309" width="0.2" height="15.0" fill="rgb(249,136,31)" rx="2" ry="2" />
<text  x="1192.04" y="319.5" ></text>
</g>
<g >
<title>io.(*teeReader).Read (84 samples, 0.06%)</title><rect x="15.6" y="149" width="0.7" height="15.0" fill="rgb(247,211,15)" rx="2" ry="2" />
<text  x="18.56" y="159.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/diff.(*compressedProcessor).Read (84 samples, 0.06%)</title><rect x="15.6" y="133" width="0.7" height="15.0" fill="rgb(241,67,52)" rx="2" ry="2" />
<text  x="18.56" y="143.5" ></text>
</g>
<g >
<title>do_syscall_64 (20 samples, 0.02%)</title><rect x="1187.8" y="197" width="0.2" height="15.0" fill="rgb(220,145,40)" rx="2" ry="2" />
<text  x="1190.80" y="207.5" ></text>
</g>
<g >
<title>kvm_vcpu_block (531 samples, 0.40%)</title><rect x="34.7" y="341" width="4.7" height="15.0" fill="rgb(215,6,26)" rx="2" ry="2" />
<text  x="37.71" y="351.5" ></text>
</g>
<g >
<title>[unknown] (98 samples, 0.07%)</title><rect x="10.2" y="469" width="0.9" height="15.0" fill="rgb(218,105,17)" rx="2" ry="2" />
<text  x="13.25" y="479.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive.copyBuffered (91 samples, 0.07%)</title><rect x="15.6" y="213" width="0.8" height="15.0" fill="rgb(209,173,39)" rx="2" ry="2" />
<text  x="18.56" y="223.5" ></text>
</g>
<g >
<title>do_futex (41 samples, 0.03%)</title><rect x="32.4" y="405" width="0.4" height="15.0" fill="rgb(227,144,4)" rx="2" ry="2" />
<text  x="35.40" y="415.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive.openFile (19 samples, 0.01%)</title><rect x="16.4" y="213" width="0.2" height="15.0" fill="rgb(252,18,9)" rx="2" ry="2" />
<text  x="19.39" y="223.5" ></text>
</g>
<g >
<title>[ld-musl-x86_64.so.1] (68 samples, 0.05%)</title><rect x="22.3" y="485" width="0.7" height="15.0" fill="rgb(222,199,51)" rx="2" ry="2" />
<text  x="25.34" y="495.5" ></text>
</g>
<g >
<title>[zedbox] (331 samples, 0.25%)</title><rect x="1185.5" y="261" width="3.0" height="15.0" fill="rgb(234,195,28)" rx="2" ry="2" />
<text  x="1188.52" y="271.5" ></text>
</g>
<g >
<title>kvm_cpu_has_interrupt (98 samples, 0.07%)</title><rect x="36.9" y="293" width="0.9" height="15.0" fill="rgb(224,206,13)" rx="2" ry="2" />
<text  x="39.92" y="303.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (53 samples, 0.04%)</title><rect x="22.5" y="469" width="0.4" height="15.0" fill="rgb(243,6,47)" rx="2" ry="2" />
<text  x="25.47" y="479.5" ></text>
</g>
<g >
<title>new_sync_write (25 samples, 0.02%)</title><rect x="14.9" y="117" width="0.2" height="15.0" fill="rgb(216,168,3)" rx="2" ry="2" />
<text  x="17.89" y="127.5" ></text>
</g>
<g >
<title>jbd2_journal_commit_transaction (56 samples, 0.04%)</title><rect x="18.3" y="437" width="0.5" height="15.0" fill="rgb(222,86,26)" rx="2" ry="2" />
<text  x="21.29" y="447.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/api/services/content/v1._Content_Write_Handler (21 samples, 0.02%)</title><rect x="12.6" y="405" width="0.2" height="15.0" fill="rgb(253,177,7)" rx="2" ry="2" />
<text  x="15.58" y="415.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (85 samples, 0.06%)</title><rect x="1177.9" y="341" width="0.8" height="15.0" fill="rgb(244,119,21)" rx="2" ry="2" />
<text  x="1180.90" y="351.5" ></text>
</g>
<g >
<title>[zedbox] (836 samples, 0.63%)</title><rect x="1182.5" y="389" width="7.4" height="15.0" fill="rgb(227,68,21)" rx="2" ry="2" />
<text  x="1185.47" y="399.5" ></text>
</g>
<g >
<title>blk_mq_sched_insert_requests (12 samples, 0.01%)</title><rect x="18.4" y="373" width="0.1" height="15.0" fill="rgb(244,0,34)" rx="2" ry="2" />
<text  x="21.43" y="383.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (19 samples, 0.01%)</title><rect x="323.0" y="293" width="0.2" height="15.0" fill="rgb(211,198,35)" rx="2" ry="2" />
<text  x="326.02" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (26 samples, 0.02%)</title><rect x="1189.4" y="325" width="0.2" height="15.0" fill="rgb(218,148,20)" rx="2" ry="2" />
<text  x="1192.40" y="335.5" ></text>
</g>
<g >
<title>irq_exit (85 samples, 0.06%)</title><rect x="1177.9" y="357" width="0.8" height="15.0" fill="rgb(223,228,1)" rx="2" ry="2" />
<text  x="1180.90" y="367.5" ></text>
</g>
<g >
<title>do_syscall_64 (21 samples, 0.02%)</title><rect x="1188.8" y="277" width="0.2" height="15.0" fill="rgb(212,73,48)" rx="2" ry="2" />
<text  x="1191.84" y="287.5" ></text>
</g>
<g >
<title>kvm_arch_vcpu_put (12 samples, 0.01%)</title><rect x="39.5" y="325" width="0.1" height="15.0" fill="rgb(253,78,54)" rx="2" ry="2" />
<text  x="42.54" y="335.5" ></text>
</g>
<g >
<title>dnsmasq (106 samples, 0.08%)</title><rect x="16.9" y="501" width="0.9" height="15.0" fill="rgb(223,188,32)" rx="2" ry="2" />
<text  x="19.89" y="511.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/diff.(*compressedProcessor).Read (220 samples, 0.17%)</title><rect x="12.9" y="165" width="2.0" height="15.0" fill="rgb(248,66,33)" rx="2" ry="2" />
<text  x="15.91" y="175.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive.copyBuffered (247 samples, 0.19%)</title><rect x="12.9" y="245" width="2.2" height="15.0" fill="rgb(239,54,23)" rx="2" ry="2" />
<text  x="15.91" y="255.5" ></text>
</g>
<g >
<title>os.OpenFile (14 samples, 0.01%)</title><rect x="15.2" y="229" width="0.1" height="15.0" fill="rgb(219,206,2)" rx="2" ry="2" />
<text  x="18.15" y="239.5" ></text>
</g>
<g >
<title>[zedbox] (16 samples, 0.01%)</title><rect x="1187.3" y="117" width="0.1" height="15.0" fill="rgb(207,35,50)" rx="2" ry="2" />
<text  x="1190.29" y="127.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (40 samples, 0.03%)</title><rect x="32.4" y="325" width="0.4" height="15.0" fill="rgb(215,2,8)" rx="2" ry="2" />
<text  x="35.41" y="335.5" ></text>
</g>
<g >
<title>[unknown] (41 samples, 0.03%)</title><rect x="1180.3" y="469" width="0.3" height="15.0" fill="rgb(238,160,34)" rx="2" ry="2" />
<text  x="1183.28" y="479.5" ></text>
</g>
<g >
<title>__fcheck_files (28 samples, 0.02%)</title><rect x="25.7" y="357" width="0.2" height="15.0" fill="rgb(209,88,52)" rx="2" ry="2" />
<text  x="28.66" y="367.5" ></text>
</g>
<g >
<title>jbd2/sda9-8 (66 samples, 0.05%)</title><rect x="18.3" y="501" width="0.5" height="15.0" fill="rgb(247,175,32)" rx="2" ry="2" />
<text  x="21.25" y="511.5" ></text>
</g>
<g >
<title>crypto/sha256.block (121 samples, 0.09%)</title><rect x="11.1" y="469" width="1.1" height="15.0" fill="rgb(245,12,39)" rx="2" ry="2" />
<text  x="14.12" y="479.5" ></text>
</g>
<g >
<title>io.(*teeReader).Read (220 samples, 0.17%)</title><rect x="12.9" y="181" width="2.0" height="15.0" fill="rgb(250,34,19)" rx="2" ry="2" />
<text  x="15.91" y="191.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (24 samples, 0.02%)</title><rect x="28.4" y="373" width="0.2" height="15.0" fill="rgb(206,193,31)" rx="2" ry="2" />
<text  x="31.42" y="383.5" ></text>
</g>
<g >
<title>do_futex (23 samples, 0.02%)</title><rect x="22.5" y="421" width="0.2" height="15.0" fill="rgb(250,179,11)" rx="2" ry="2" />
<text  x="25.48" y="431.5" ></text>
</g>
<g >
<title>[zedbox] (109 samples, 0.08%)</title><rect x="1186.7" y="197" width="1.0" height="15.0" fill="rgb(227,192,38)" rx="2" ry="2" />
<text  x="1189.72" y="207.5" ></text>
</g>
<g >
<title>handle_ept_misconfig (63 samples, 0.05%)</title><rect x="33.1" y="341" width="0.6" height="15.0" fill="rgb(253,50,11)" rx="2" ry="2" />
<text  x="36.14" y="351.5" ></text>
</g>
<g >
<title>__do_sys_futex (24 samples, 0.02%)</title><rect x="22.5" y="437" width="0.2" height="15.0" fill="rgb(218,10,19)" rx="2" ry="2" />
<text  x="25.47" y="447.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (18 samples, 0.01%)</title><rect x="1178.2" y="277" width="0.1" height="15.0" fill="rgb(205,197,11)" rx="2" ry="2" />
<text  x="1181.15" y="287.5" ></text>
</g>
<g >
<title>containerd (744 samples, 0.56%)</title><rect x="10.2" y="501" width="6.7" height="15.0" fill="rgb(254,222,31)" rx="2" ry="2" />
<text  x="13.25" y="511.5" ></text>
</g>
<g >
<title>x86_emulate_instruction (34 samples, 0.03%)</title><rect x="34.4" y="309" width="0.3" height="15.0" fill="rgb(232,89,14)" rx="2" ry="2" />
<text  x="37.40" y="319.5" ></text>
</g>
<g >
<title>native_safe_halt (96,019 samples, 72.42%)</title><rect x="324.0" y="405" width="854.7" height="15.0" fill="rgb(230,82,0)" rx="2" ry="2" />
<text  x="327.05" y="415.5" >native_safe_halt</text>
</g>
<g >
<title>compress/gzip.(*Reader).Read (84 samples, 0.06%)</title><rect x="15.6" y="101" width="0.7" height="15.0" fill="rgb(244,79,24)" rx="2" ry="2" />
<text  x="18.56" y="111.5" ></text>
</g>
<g >
<title>[zedbox] (580 samples, 0.44%)</title><rect x="1184.1" y="325" width="5.1" height="15.0" fill="rgb(240,22,9)" rx="2" ry="2" />
<text  x="1187.07" y="335.5" ></text>
</g>
<g >
<title>__sched_text_start (36 samples, 0.03%)</title><rect x="323.6" y="405" width="0.4" height="15.0" fill="rgb(212,171,22)" rx="2" ry="2" />
<text  x="326.65" y="415.5" ></text>
</g>
<g >
<title>napi_gro_receive (12 samples, 0.01%)</title><rect x="1178.5" y="277" width="0.2" height="15.0" fill="rgb(251,135,42)" rx="2" ry="2" />
<text  x="1181.55" y="287.5" ></text>
</g>
<g >
<title>finish_task_switch (12 samples, 0.01%)</title><rect x="22.5" y="341" width="0.1" height="15.0" fill="rgb(238,151,7)" rx="2" ry="2" />
<text  x="25.50" y="351.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/services/content/contentserver.(*service).Write (21 samples, 0.02%)</title><rect x="12.6" y="389" width="0.2" height="15.0" fill="rgb(245,93,52)" rx="2" ry="2" />
<text  x="15.58" y="399.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive/compression.(*readCloserWrapper).Read (220 samples, 0.17%)</title><rect x="12.9" y="149" width="2.0" height="15.0" fill="rgb(230,35,1)" rx="2" ry="2" />
<text  x="15.91" y="159.5" ></text>
</g>
<g >
<title>ksys_ioctl (801 samples, 0.60%)</title><rect x="32.9" y="421" width="7.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="35.94" y="431.5" ></text>
</g>
<g >
<title>[newlogd] (38 samples, 0.03%)</title><rect x="21.7" y="485" width="0.4" height="15.0" fill="rgb(243,90,52)" rx="2" ry="2" />
<text  x="24.71" y="495.5" ></text>
</g>
<g >
<title>ret_from_intr (12 samples, 0.01%)</title><rect x="1181.3" y="453" width="0.1" height="15.0" fill="rgb(241,116,51)" rx="2" ry="2" />
<text  x="1184.27" y="463.5" ></text>
</g>
<g >
<title>__srcu_read_unlock (22 samples, 0.02%)</title><rect x="36.1" y="309" width="0.2" height="15.0" fill="rgb(236,136,54)" rx="2" ry="2" />
<text  x="39.15" y="319.5" ></text>
</g>
<g >
<title>__sched_text_start (12 samples, 0.01%)</title><rect x="22.5" y="357" width="0.1" height="15.0" fill="rgb(233,124,36)" rx="2" ry="2" />
<text  x="25.50" y="367.5" ></text>
</g>
<g >
<title>kworker/3:1H-kb (30 samples, 0.02%)</title><rect x="20.9" y="501" width="0.3" height="15.0" fill="rgb(240,224,25)" rx="2" ry="2" />
<text  x="23.94" y="511.5" ></text>
</g>
<g >
<title>virtnet_poll (12 samples, 0.01%)</title><rect x="1181.3" y="373" width="0.1" height="15.0" fill="rgb(207,71,50)" rx="2" ry="2" />
<text  x="1184.27" y="383.5" ></text>
</g>
<g >
<title>blk_mq_sched_dispatch_requests (25 samples, 0.02%)</title><rect x="20.9" y="341" width="0.3" height="15.0" fill="rgb(221,93,12)" rx="2" ry="2" />
<text  x="23.95" y="351.5" ></text>
</g>
<g >
<title>kvm_lapic_reg_write (22 samples, 0.02%)</title><rect x="33.9" y="277" width="0.2" height="15.0" fill="rgb(215,137,38)" rx="2" ry="2" />
<text  x="36.88" y="287.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/google.golang.org/grpc.(*Server).serveStreams.func1.1 (474 samples, 0.36%)</title><rect x="12.6" y="469" width="4.2" height="15.0" fill="rgb(212,19,14)" rx="2" ry="2" />
<text  x="15.58" y="479.5" ></text>
</g>
<g >
<title>os.openFileNolog (14 samples, 0.01%)</title><rect x="16.4" y="181" width="0.1" height="15.0" fill="rgb(210,92,38)" rx="2" ry="2" />
<text  x="19.39" y="191.5" ></text>
</g>
<g >
<title>kvm_fetch_guest_virt (25 samples, 0.02%)</title><rect x="34.5" y="261" width="0.2" height="15.0" fill="rgb(250,192,40)" rx="2" ry="2" />
<text  x="37.46" y="271.5" ></text>
</g>
<g >
<title>wb_workfn (19 samples, 0.01%)</title><rect x="21.2" y="421" width="0.2" height="15.0" fill="rgb(235,112,53)" rx="2" ry="2" />
<text  x="24.22" y="431.5" ></text>
</g>
<g >
<title>schedule (12 samples, 0.01%)</title><rect x="22.5" y="373" width="0.1" height="15.0" fill="rgb(227,73,41)" rx="2" ry="2" />
<text  x="25.50" y="383.5" ></text>
</g>
<g >
<title>update_blocked_averages (20 samples, 0.02%)</title><rect x="323.0" y="309" width="0.2" height="15.0" fill="rgb(253,3,17)" rx="2" ry="2" />
<text  x="326.01" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.01%)</title><rect x="1180.4" y="341" width="0.2" height="15.0" fill="rgb(208,10,25)" rx="2" ry="2" />
<text  x="1183.43" y="351.5" ></text>
</g>
<g >
<title>[libglib-2.0.so.0.6400.6] (59 samples, 0.04%)</title><rect x="30.3" y="469" width="0.5" height="15.0" fill="rgb(252,2,40)" rx="2" ry="2" />
<text  x="33.32" y="479.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/github.com/grpc-ecosystem/go-grpc-prometheus.(*ServerMetrics).StreamServerInterceptor.func1 (21 samples, 0.02%)</title><rect x="12.6" y="421" width="0.2" height="15.0" fill="rgb(235,111,18)" rx="2" ry="2" />
<text  x="15.58" y="431.5" ></text>
</g>
<g >
<title>do_syscall_64 (33 samples, 0.02%)</title><rect x="17.5" y="453" width="0.3" height="15.0" fill="rgb(249,45,46)" rx="2" ry="2" />
<text  x="20.47" y="463.5" ></text>
</g>
<g >
<title>test_bit (15 samples, 0.01%)</title><rect x="37.8" y="293" width="0.2" height="15.0" fill="rgb(219,37,0)" rx="2" ry="2" />
<text  x="40.83" y="303.5" ></text>
</g>
<g >
<title>__cpuidle_text_start (96,022 samples, 72.43%)</title><rect x="324.0" y="421" width="854.7" height="15.0" fill="rgb(226,185,35)" rx="2" ry="2" />
<text  x="327.02" y="431.5" >__cpuidle_text_start</text>
</g>
<g >
<title>kvm_send_userspace_msi (28 samples, 0.02%)</title><rect x="39.8" y="357" width="0.2" height="15.0" fill="rgb(238,172,22)" rx="2" ry="2" />
<text  x="42.80" y="367.5" ></text>
</g>
<g >
<title>generic_perform_write (16 samples, 0.01%)</title><rect x="1189.5" y="229" width="0.1" height="15.0" fill="rgb(228,145,12)" rx="2" ry="2" />
<text  x="1192.48" y="239.5" ></text>
</g>
<g >
<title>iptables (27 samples, 0.02%)</title><rect x="18.0" y="501" width="0.3" height="15.0" fill="rgb(231,21,49)" rx="2" ry="2" />
<text  x="21.01" y="511.5" ></text>
</g>
<g >
<title>[newlogd] (28 samples, 0.02%)</title><rect x="21.8" y="373" width="0.2" height="15.0" fill="rgb(205,69,36)" rx="2" ry="2" />
<text  x="24.78" y="383.5" ></text>
</g>
<g >
<title>eventfd_signal (58 samples, 0.04%)</title><rect x="33.2" y="277" width="0.5" height="15.0" fill="rgb(235,123,2)" rx="2" ry="2" />
<text  x="36.17" y="287.5" ></text>
</g>
<g >
<title>kvm_vcpu_kick (23 samples, 0.02%)</title><rect x="39.8" y="277" width="0.2" height="15.0" fill="rgb(242,2,12)" rx="2" ry="2" />
<text  x="42.81" y="287.5" ></text>
</g>
<g >
<title>syscall.Syscall6 (13 samples, 0.01%)</title><rect x="15.2" y="197" width="0.1" height="15.0" fill="rgb(215,206,38)" rx="2" ry="2" />
<text  x="18.16" y="207.5" ></text>
</g>
<g >
<title>[newlogd] (38 samples, 0.03%)</title><rect x="21.7" y="469" width="0.4" height="15.0" fill="rgb(210,78,35)" rx="2" ry="2" />
<text  x="24.71" y="479.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/google.golang.org/grpc.(*Server).processUnaryRPC (451 samples, 0.34%)</title><rect x="12.8" y="437" width="4.0" height="15.0" fill="rgb(222,94,50)" rx="2" ry="2" />
<text  x="15.77" y="447.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive/compression.(*readCloserWrapper).Read (84 samples, 0.06%)</title><rect x="15.6" y="117" width="0.7" height="15.0" fill="rgb(223,153,1)" rx="2" ry="2" />
<text  x="18.56" y="127.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (21 samples, 0.02%)</title><rect x="22.7" y="325" width="0.2" height="15.0" fill="rgb(220,143,34)" rx="2" ry="2" />
<text  x="25.72" y="335.5" ></text>
</g>
<g >
<title>[newlogd] (31 samples, 0.02%)</title><rect x="21.8" y="389" width="0.2" height="15.0" fill="rgb(238,140,7)" rx="2" ry="2" />
<text  x="24.77" y="399.5" ></text>
</g>
<g >
<title>kvm_vm_ioctl (31 samples, 0.02%)</title><rect x="39.8" y="373" width="0.3" height="15.0" fill="rgb(226,151,49)" rx="2" ry="2" />
<text  x="42.78" y="383.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/api/services/diff/v1._Diff_Apply_Handler (442 samples, 0.33%)</title><rect x="12.8" y="421" width="3.9" height="15.0" fill="rgb(230,168,30)" rx="2" ry="2" />
<text  x="15.77" y="431.5" ></text>
</g>
<g >
<title>__raw_spin_unlock_irq (35 samples, 0.03%)</title><rect x="29.9" y="373" width="0.3" height="15.0" fill="rgb(243,213,42)" rx="2" ry="2" />
<text  x="32.88" y="383.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (16 samples, 0.01%)</title><rect x="1189.5" y="261" width="0.1" height="15.0" fill="rgb(231,82,46)" rx="2" ry="2" />
<text  x="1192.48" y="271.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (21 samples, 0.02%)</title><rect x="22.7" y="341" width="0.2" height="15.0" fill="rgb(241,2,45)" rx="2" ry="2" />
<text  x="25.72" y="351.5" ></text>
</g>
<g >
<title>[memlogd] (13 samples, 0.01%)</title><rect x="21.4" y="437" width="0.1" height="15.0" fill="rgb(217,76,43)" rx="2" ry="2" />
<text  x="24.43" y="447.5" ></text>
</g>
<g >
<title>vfs_write (39 samples, 0.03%)</title><rect x="29.9" y="405" width="0.3" height="15.0" fill="rgb(210,170,45)" rx="2" ry="2" />
<text  x="32.87" y="415.5" ></text>
</g>
<g >
<title>do_sys_poll (503 samples, 0.38%)</title><rect x="24.3" y="405" width="4.5" height="15.0" fill="rgb(254,157,8)" rx="2" ry="2" />
<text  x="27.34" y="415.5" ></text>
</g>
<g >
<title>zedbox (1,092 samples, 0.82%)</title><rect x="1180.3" y="501" width="9.7" height="15.0" fill="rgb(227,166,32)" rx="2" ry="2" />
<text  x="1183.28" y="511.5" ></text>
</g>
<g >
<title>__do_insn_fetch_bytes (28 samples, 0.02%)</title><rect x="34.4" y="277" width="0.3" height="15.0" fill="rgb(222,59,27)" rx="2" ry="2" />
<text  x="37.44" y="287.5" ></text>
</g>
<g >
<title>[newlogd] (35 samples, 0.03%)</title><rect x="21.7" y="421" width="0.4" height="15.0" fill="rgb(245,220,52)" rx="2" ry="2" />
<text  x="24.74" y="431.5" ></text>
</g>
<g >
<title>do_syscall_64 (26 samples, 0.02%)</title><rect x="1188.5" y="245" width="0.2" height="15.0" fill="rgb(224,43,50)" rx="2" ry="2" />
<text  x="1191.48" y="255.5" ></text>
</g>
<g >
<title>__raw_spin_unlock_irq (12 samples, 0.01%)</title><rect x="22.5" y="325" width="0.1" height="15.0" fill="rgb(243,187,28)" rx="2" ry="2" />
<text  x="25.50" y="335.5" ></text>
</g>
<g >
<title>kworker/u8:3-fl (19 samples, 0.01%)</title><rect x="21.2" y="501" width="0.2" height="15.0" fill="rgb(208,84,54)" rx="2" ry="2" />
<text  x="24.22" y="511.5" ></text>
</g>
<g >
<title>blk_mq_requeue_work (26 samples, 0.02%)</title><rect x="20.9" y="421" width="0.3" height="15.0" fill="rgb(221,57,5)" rx="2" ry="2" />
<text  x="23.95" y="431.5" ></text>
</g>
<g >
<title>[jq] (122 samples, 0.09%)</title><rect x="18.8" y="485" width="1.1" height="15.0" fill="rgb(252,224,44)" rx="2" ry="2" />
<text  x="21.84" y="495.5" ></text>
</g>
<g >
<title>receive_buf (12 samples, 0.01%)</title><rect x="1178.5" y="293" width="0.2" height="15.0" fill="rgb(243,220,37)" rx="2" ry="2" />
<text  x="1181.55" y="303.5" ></text>
</g>
<g >
<title>start_kernel (31,852 samples, 24.02%)</title><rect x="40.5" y="469" width="283.5" height="15.0" fill="rgb(247,102,45)" rx="2" ry="2" />
<text  x="43.47" y="479.5" >start_kernel</text>
</g>
<g >
<title>scsi_queue_rq (23 samples, 0.02%)</title><rect x="20.9" y="309" width="0.3" height="15.0" fill="rgb(237,63,29)" rx="2" ry="2" />
<text  x="23.95" y="319.5" ></text>
</g>
<g >
<title>ret_from_intr (85 samples, 0.06%)</title><rect x="1177.9" y="389" width="0.8" height="15.0" fill="rgb(252,167,33)" rx="2" ry="2" />
<text  x="1180.90" y="399.5" ></text>
</g>
<g >
<title>vmx_set_msr (27 samples, 0.02%)</title><rect x="33.9" y="309" width="0.2" height="15.0" fill="rgb(243,221,38)" rx="2" ry="2" />
<text  x="36.85" y="319.5" ></text>
</g>
<g >
<title>jq (204 samples, 0.15%)</title><rect x="18.8" y="501" width="1.9" height="15.0" fill="rgb(250,178,4)" rx="2" ry="2" />
<text  x="21.84" y="511.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/gc/scheduler.(*gcScheduler).run (19 samples, 0.01%)</title><rect x="12.2" y="469" width="0.2" height="15.0" fill="rgb(236,201,45)" rx="2" ry="2" />
<text  x="15.21" y="479.5" ></text>
</g>
<g >
<title>scsi_io_completion (48 samples, 0.04%)</title><rect x="1178.1" y="309" width="0.4" height="15.0" fill="rgb(234,138,1)" rx="2" ry="2" />
<text  x="1181.11" y="319.5" ></text>
</g>
<g >
<title>vfs_read (14 samples, 0.01%)</title><rect x="29.7" y="405" width="0.1" height="15.0" fill="rgb(240,86,8)" rx="2" ry="2" />
<text  x="32.72" y="415.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (17 samples, 0.01%)</title><rect x="39.8" y="245" width="0.2" height="15.0" fill="rgb(244,155,11)" rx="2" ry="2" />
<text  x="42.83" y="255.5" ></text>
</g>
<g >
<title>wwan-init.sh (12 samples, 0.01%)</title><rect x="1180.2" y="501" width="0.1" height="15.0" fill="rgb(208,169,18)" rx="2" ry="2" />
<text  x="1183.17" y="511.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (49 samples, 0.04%)</title><rect x="26.9" y="357" width="0.5" height="15.0" fill="rgb(246,114,8)" rx="2" ry="2" />
<text  x="29.93" y="367.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (50 samples, 0.04%)</title><rect x="27.7" y="373" width="0.4" height="15.0" fill="rgb(209,62,21)" rx="2" ry="2" />
<text  x="30.69" y="383.5" ></text>
</g>
<g >
<title>process_one_work (19 samples, 0.01%)</title><rect x="21.2" y="437" width="0.2" height="15.0" fill="rgb(252,72,41)" rx="2" ry="2" />
<text  x="24.22" y="447.5" ></text>
</g>
<g >
<title>path_lookupat.isra.37 (12 samples, 0.01%)</title><rect x="29.5" y="373" width="0.1" height="15.0" fill="rgb(226,7,53)" rx="2" ry="2" />
<text  x="32.49" y="383.5" ></text>
</g>
<g >
<title>worker_thread (19 samples, 0.01%)</title><rect x="21.2" y="453" width="0.2" height="15.0" fill="rgb(229,95,0)" rx="2" ry="2" />
<text  x="24.22" y="463.5" ></text>
</g>
<g >
<title>do_syscall_64 (18 samples, 0.01%)</title><rect x="1189.2" y="309" width="0.2" height="15.0" fill="rgb(226,68,8)" rx="2" ry="2" />
<text  x="1192.23" y="319.5" ></text>
</g>
<g >
<title>[zedbox] (942 samples, 0.71%)</title><rect x="1181.6" y="421" width="8.4" height="15.0" fill="rgb(242,192,7)" rx="2" ry="2" />
<text  x="1184.58" y="431.5" ></text>
</g>
<g >
<title>sem_post (47 samples, 0.04%)</title><rect x="32.4" y="469" width="0.4" height="15.0" fill="rgb(217,210,34)" rx="2" ry="2" />
<text  x="35.38" y="479.5" ></text>
</g>
<g >
<title>vfs_write (17 samples, 0.01%)</title><rect x="1189.5" y="293" width="0.1" height="15.0" fill="rgb(214,42,45)" rx="2" ry="2" />
<text  x="1192.48" y="303.5" ></text>
</g>
<g >
<title>finish_task_switch (107 samples, 0.08%)</title><rect x="1179.1" y="389" width="0.9" height="15.0" fill="rgb(251,58,36)" rx="2" ry="2" />
<text  x="1182.07" y="399.5" ></text>
</g>
<g >
<title>__sched_text_start (112 samples, 0.08%)</title><rect x="1179.0" y="405" width="1.0" height="15.0" fill="rgb(234,0,45)" rx="2" ry="2" />
<text  x="1182.03" y="415.5" ></text>
</g>
<g >
<title>do_writepages (17 samples, 0.01%)</title><rect x="21.2" y="341" width="0.2" height="15.0" fill="rgb(208,211,46)" rx="2" ry="2" />
<text  x="24.23" y="351.5" ></text>
</g>
<g >
<title>run_rebalance_domains (20 samples, 0.02%)</title><rect x="323.0" y="325" width="0.2" height="15.0" fill="rgb(208,99,16)" rx="2" ry="2" />
<text  x="326.01" y="335.5" ></text>
</g>
<g >
<title>kthread (30 samples, 0.02%)</title><rect x="20.9" y="469" width="0.3" height="15.0" fill="rgb(229,179,6)" rx="2" ry="2" />
<text  x="23.94" y="479.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/diff/apply.(*readCounter).Read (220 samples, 0.17%)</title><rect x="12.9" y="197" width="2.0" height="15.0" fill="rgb(216,173,16)" rx="2" ry="2" />
<text  x="15.91" y="207.5" ></text>
</g>
<g >
<title>kvm_emulate_wrmsr (28 samples, 0.02%)</title><rect x="33.9" y="341" width="0.2" height="15.0" fill="rgb(246,186,23)" rx="2" ry="2" />
<text  x="36.85" y="351.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (18 samples, 0.01%)</title><rect x="1178.2" y="261" width="0.1" height="15.0" fill="rgb(254,114,4)" rx="2" ry="2" />
<text  x="1181.15" y="271.5" ></text>
</g>
<g >
<title>do_futex (13 samples, 0.01%)</title><rect x="1180.4" y="293" width="0.1" height="15.0" fill="rgb(235,118,33)" rx="2" ry="2" />
<text  x="1183.43" y="303.5" ></text>
</g>
<g >
<title>__writeback_inodes_wb (19 samples, 0.01%)</title><rect x="21.2" y="389" width="0.2" height="15.0" fill="rgb(248,81,37)" rx="2" ry="2" />
<text  x="24.22" y="399.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (57 samples, 0.04%)</title><rect x="33.2" y="261" width="0.5" height="15.0" fill="rgb(221,131,5)" rx="2" ry="2" />
<text  x="36.18" y="271.5" ></text>
</g>
<g >
<title>[zedbox] (644 samples, 0.49%)</title><rect x="1183.7" y="341" width="5.7" height="15.0" fill="rgb(232,10,48)" rx="2" ry="2" />
<text  x="1186.67" y="351.5" ></text>
</g>
<g >
<title>[ld-musl-x86_64.so.1] (777 samples, 0.59%)</title><rect x="23.4" y="469" width="6.9" height="15.0" fill="rgb(253,203,17)" rx="2" ry="2" />
<text  x="26.40" y="479.5" ></text>
</g>
<g >
<title>process_one_work (27 samples, 0.02%)</title><rect x="20.9" y="437" width="0.3" height="15.0" fill="rgb(210,192,3)" rx="2" ry="2" />
<text  x="23.94" y="447.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.01%)</title><rect x="1187.7" y="197" width="0.1" height="15.0" fill="rgb(225,53,16)" rx="2" ry="2" />
<text  x="1190.69" y="207.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).Read (219 samples, 0.17%)</title><rect x="12.9" y="117" width="2.0" height="15.0" fill="rgb(214,205,29)" rx="2" ry="2" />
<text  x="15.91" y="127.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/metadata.(*DB).cleanupSnapshotter (12 samples, 0.01%)</title><rect x="12.4" y="453" width="0.1" height="15.0" fill="rgb(239,123,39)" rx="2" ry="2" />
<text  x="15.38" y="463.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (32 samples, 0.02%)</title><rect x="1188.5" y="261" width="0.3" height="15.0" fill="rgb(231,91,39)" rx="2" ry="2" />
<text  x="1191.48" y="271.5" ></text>
</g>
<g >
<title>__blk_mq_delay_run_hw_queue (26 samples, 0.02%)</title><rect x="20.9" y="373" width="0.3" height="15.0" fill="rgb(231,14,1)" rx="2" ry="2" />
<text  x="23.95" y="383.5" ></text>
</g>
<g >
<title>vfs_writev (22 samples, 0.02%)</title><rect x="22.7" y="421" width="0.2" height="15.0" fill="rgb(247,179,21)" rx="2" ry="2" />
<text  x="25.71" y="431.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive.createTarFile (117 samples, 0.09%)</title><rect x="15.6" y="229" width="1.0" height="15.0" fill="rgb(236,49,17)" rx="2" ry="2" />
<text  x="18.55" y="239.5" ></text>
</g>
<g >
<title>[unknown] (219 samples, 0.17%)</title><rect x="10.2" y="485" width="2.0" height="15.0" fill="rgb(228,16,2)" rx="2" ry="2" />
<text  x="13.25" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (22 samples, 0.02%)</title><rect x="1188.8" y="293" width="0.2" height="15.0" fill="rgb(241,39,53)" rx="2" ry="2" />
<text  x="1191.84" y="303.5" ></text>
</g>
<g >
<title>[zedbox] (82 samples, 0.06%)</title><rect x="1180.6" y="469" width="0.8" height="15.0" fill="rgb(226,5,26)" rx="2" ry="2" />
<text  x="1183.65" y="479.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (45 samples, 0.03%)</title><rect x="32.4" y="453" width="0.4" height="15.0" fill="rgb(210,105,45)" rx="2" ry="2" />
<text  x="35.39" y="463.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (33 samples, 0.02%)</title><rect x="17.5" y="469" width="0.3" height="15.0" fill="rgb(232,189,42)" rx="2" ry="2" />
<text  x="20.47" y="479.5" ></text>
</g>
<g >
<title>skip_emulated_instruction (36 samples, 0.03%)</title><rect x="34.4" y="325" width="0.3" height="15.0" fill="rgb(243,117,7)" rx="2" ry="2" />
<text  x="37.39" y="335.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (12 samples, 0.01%)</title><rect x="1178.5" y="245" width="0.2" height="15.0" fill="rgb(216,18,8)" rx="2" ry="2" />
<text  x="1181.55" y="255.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/github.com/grpc-ecosystem/go-grpc-prometheus.(*ServerMetrics).UnaryServerInterceptor.func1 (442 samples, 0.33%)</title><rect x="12.8" y="405" width="3.9" height="15.0" fill="rgb(243,92,47)" rx="2" ry="2" />
<text  x="15.77" y="415.5" ></text>
</g>
<g >
<title>virtnet_poll (12 samples, 0.01%)</title><rect x="1178.5" y="309" width="0.2" height="15.0" fill="rgb(235,227,27)" rx="2" ry="2" />
<text  x="1181.55" y="319.5" ></text>
</g>
<g >
<title>__kvm_io_bus_write (60 samples, 0.05%)</title><rect x="33.2" y="309" width="0.5" height="15.0" fill="rgb(220,3,35)" rx="2" ry="2" />
<text  x="36.17" y="319.5" ></text>
</g>
<g >
<title>finish_task_switch (18 samples, 0.01%)</title><rect x="28.5" y="325" width="0.1" height="15.0" fill="rgb(250,224,11)" rx="2" ry="2" />
<text  x="31.47" y="335.5" ></text>
</g>
<g >
<title>blk_mq_run_hw_queues (26 samples, 0.02%)</title><rect x="20.9" y="405" width="0.3" height="15.0" fill="rgb(206,78,44)" rx="2" ry="2" />
<text  x="23.95" y="415.5" ></text>
</g>
<g >
<title>call_timer_fn (16 samples, 0.01%)</title><rect x="323.2" y="293" width="0.2" height="15.0" fill="rgb(211,5,16)" rx="2" ry="2" />
<text  x="326.23" y="303.5" ></text>
</g>
<g >
<title>do_idle (96,184 samples, 72.55%)</title><rect x="324.0" y="437" width="856.0" height="15.0" fill="rgb(225,159,40)" rx="2" ry="2" />
<text  x="326.98" y="447.5" >do_idle</text>
</g>
<g >
<title>seq_read (12 samples, 0.01%)</title><rect x="1188.4" y="181" width="0.1" height="15.0" fill="rgb(217,70,44)" rx="2" ry="2" />
<text  x="1191.35" y="191.5" ></text>
</g>
<g >
<title>apic_has_interrupt_for_ppr (14 samples, 0.01%)</title><rect x="37.4" y="261" width="0.1" height="15.0" fill="rgb(210,206,53)" rx="2" ry="2" />
<text  x="40.42" y="271.5" ></text>
</g>
<g >
<title>qemu-system-x86 (2,016 samples, 1.52%)</title><rect x="22.3" y="501" width="18.0" height="15.0" fill="rgb(230,145,34)" rx="2" ry="2" />
<text  x="25.34" y="511.5" ></text>
</g>
<g >
<title>__generic_file_write_iter (16 samples, 0.01%)</title><rect x="1189.5" y="245" width="0.1" height="15.0" fill="rgb(226,26,44)" rx="2" ry="2" />
<text  x="1192.48" y="255.5" ></text>
</g>
<g >
<title>[zedbox] (442 samples, 0.33%)</title><rect x="1184.9" y="293" width="3.9" height="15.0" fill="rgb(249,3,52)" rx="2" ry="2" />
<text  x="1187.91" y="303.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (21 samples, 0.02%)</title><rect x="1177.9" y="325" width="0.2" height="15.0" fill="rgb(208,113,13)" rx="2" ry="2" />
<text  x="1180.90" y="335.5" ></text>
</g>
<g >
<title>tdp_page_fault (12 samples, 0.01%)</title><rect x="34.2" y="325" width="0.1" height="15.0" fill="rgb(220,224,47)" rx="2" ry="2" />
<text  x="37.24" y="335.5" ></text>
</g>
<g >
<title>net_rx_action (12 samples, 0.01%)</title><rect x="1181.3" y="389" width="0.1" height="15.0" fill="rgb(251,119,41)" rx="2" ry="2" />
<text  x="1184.27" y="399.5" ></text>
</g>
<g >
<title>blk_mq_flush_plug_list (12 samples, 0.01%)</title><rect x="18.4" y="389" width="0.1" height="15.0" fill="rgb(234,77,34)" rx="2" ry="2" />
<text  x="21.43" y="399.5" ></text>
</g>
<g >
<title>__cpuidle_text_start (31,797 samples, 23.98%)</title><rect x="40.5" y="421" width="283.0" height="15.0" fill="rgb(231,219,14)" rx="2" ry="2" />
<text  x="43.50" y="431.5" >__cpuidle_text_start</text>
</g>
<g >
<title>[zedbox] (40 samples, 0.03%)</title><rect x="1180.3" y="437" width="0.3" height="15.0" fill="rgb(212,224,21)" rx="2" ry="2" />
<text  x="1183.29" y="447.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (34 samples, 0.03%)</title><rect x="1188.2" y="245" width="0.3" height="15.0" fill="rgb(229,141,46)" rx="2" ry="2" />
<text  x="1191.16" y="255.5" ></text>
</g>
<g >
<title>ksys_read (13 samples, 0.01%)</title><rect x="1188.3" y="213" width="0.2" height="15.0" fill="rgb(227,69,6)" rx="2" ry="2" />
<text  x="1191.34" y="223.5" ></text>
</g>
<g >
<title>[zedbox] (22 samples, 0.02%)</title><rect x="1180.4" y="357" width="0.2" height="15.0" fill="rgb(222,56,33)" rx="2" ry="2" />
<text  x="1183.38" y="367.5" ></text>
</g>
<g >
<title>__blk_mq_run_hw_queue (26 samples, 0.02%)</title><rect x="20.9" y="357" width="0.3" height="15.0" fill="rgb(229,50,40)" rx="2" ry="2" />
<text  x="23.95" y="367.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (74 samples, 0.06%)</title><rect x="322.7" y="389" width="0.7" height="15.0" fill="rgb(206,24,6)" rx="2" ry="2" />
<text  x="325.71" y="399.5" ></text>
</g>
<g >
<title>__fget_light (89 samples, 0.07%)</title><rect x="25.1" y="389" width="0.8" height="15.0" fill="rgb(250,56,18)" rx="2" ry="2" />
<text  x="28.12" y="399.5" ></text>
</g>
<g >
<title>containerd-shim (24 samples, 0.02%)</title><rect x="10.0" y="501" width="0.2" height="15.0" fill="rgb(239,103,10)" rx="2" ry="2" />
<text  x="13.04" y="511.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (26 samples, 0.02%)</title><rect x="1189.4" y="341" width="0.2" height="15.0" fill="rgb(207,117,45)" rx="2" ry="2" />
<text  x="1192.40" y="351.5" ></text>
</g>
<g >
<title>virtscsi_add_cmd (19 samples, 0.01%)</title><rect x="21.0" y="277" width="0.2" height="15.0" fill="rgb(211,177,12)" rx="2" ry="2" />
<text  x="23.98" y="287.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive.openFile (18 samples, 0.01%)</title><rect x="15.2" y="245" width="0.1" height="15.0" fill="rgb(221,15,47)" rx="2" ry="2" />
<text  x="18.15" y="255.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (29 samples, 0.02%)</title><rect x="28.9" y="421" width="0.3" height="15.0" fill="rgb(230,207,11)" rx="2" ry="2" />
<text  x="31.94" y="431.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).huffmanBlock (69 samples, 0.05%)</title><rect x="14.1" y="85" width="0.6" height="15.0" fill="rgb(250,77,38)" rx="2" ry="2" />
<text  x="17.10" y="95.5" ></text>
</g>
<g >
<title>__do_sys_ppoll (512 samples, 0.39%)</title><rect x="24.3" y="421" width="4.6" height="15.0" fill="rgb(210,119,13)" rx="2" ry="2" />
<text  x="27.34" y="431.5" ></text>
</g>
<g >
<title>ret_from_fork (30 samples, 0.02%)</title><rect x="20.9" y="485" width="0.3" height="15.0" fill="rgb(228,51,34)" rx="2" ry="2" />
<text  x="23.94" y="495.5" ></text>
</g>
<g >
<title>[unknown] (1,056 samples, 0.80%)</title><rect x="23.4" y="485" width="9.4" height="15.0" fill="rgb(230,215,40)" rx="2" ry="2" />
<text  x="26.40" y="495.5" ></text>
</g>
<g >
<title>path_openat (38 samples, 0.03%)</title><rect x="29.3" y="389" width="0.3" height="15.0" fill="rgb(223,47,54)" rx="2" ry="2" />
<text  x="32.26" y="399.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (18 samples, 0.01%)</title><rect x="28.5" y="293" width="0.1" height="15.0" fill="rgb(241,226,26)" rx="2" ry="2" />
<text  x="31.47" y="303.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Write (27 samples, 0.02%)</title><rect x="14.9" y="213" width="0.2" height="15.0" fill="rgb(226,213,25)" rx="2" ry="2" />
<text  x="17.87" y="223.5" ></text>
</g>
<g >
<title>__srcu_read_lock (34 samples, 0.03%)</title><rect x="35.8" y="309" width="0.3" height="15.0" fill="rgb(236,160,43)" rx="2" ry="2" />
<text  x="38.85" y="319.5" ></text>
</g>
<g >
<title>eventfd_write (38 samples, 0.03%)</title><rect x="29.9" y="389" width="0.3" height="15.0" fill="rgb(253,143,24)" rx="2" ry="2" />
<text  x="32.88" y="399.5" ></text>
</g>
<g >
<title>cpu_startup_entry (31,852 samples, 24.02%)</title><rect x="40.5" y="453" width="283.5" height="15.0" fill="rgb(207,111,18)" rx="2" ry="2" />
<text  x="43.47" y="463.5" >cpu_startup_entry</text>
</g>
<g >
<title>compress/flate.(*decompressor).Read (84 samples, 0.06%)</title><rect x="15.6" y="85" width="0.7" height="15.0" fill="rgb(213,99,25)" rx="2" ry="2" />
<text  x="18.56" y="95.5" ></text>
</g>
<g >
<title>compress/gzip.(*Reader).Read (220 samples, 0.17%)</title><rect x="12.9" y="133" width="2.0" height="15.0" fill="rgb(246,73,0)" rx="2" ry="2" />
<text  x="15.91" y="143.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/diff/apply.apply (442 samples, 0.33%)</title><rect x="12.8" y="309" width="3.9" height="15.0" fill="rgb(223,25,51)" rx="2" ry="2" />
<text  x="15.77" y="319.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/diff/apply.(*readCounter).Read (84 samples, 0.06%)</title><rect x="15.6" y="165" width="0.7" height="15.0" fill="rgb(212,191,9)" rx="2" ry="2" />
<text  x="18.56" y="175.5" ></text>
</g>
<g >
<title>[unknown] (19 samples, 0.01%)</title><rect x="31.8" y="453" width="0.2" height="15.0" fill="rgb(231,131,25)" rx="2" ry="2" />
<text  x="34.81" y="463.5" ></text>
</g>
<g >
<title>do_pwritev (22 samples, 0.02%)</title><rect x="22.7" y="437" width="0.2" height="15.0" fill="rgb(211,217,1)" rx="2" ry="2" />
<text  x="25.71" y="447.5" ></text>
</g>
<g >
<title>vmx_vcpu_load (13 samples, 0.01%)</title><rect x="39.2" y="261" width="0.2" height="15.0" fill="rgb(210,155,25)" rx="2" ry="2" />
<text  x="42.24" y="271.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive.Apply (135 samples, 0.10%)</title><rect x="15.5" y="261" width="1.2" height="15.0" fill="rgb(224,40,8)" rx="2" ry="2" />
<text  x="18.50" y="271.5" ></text>
</g>
<g >
<title>[zedbox] (877 samples, 0.66%)</title><rect x="1182.1" y="405" width="7.8" height="15.0" fill="rgb(217,128,30)" rx="2" ry="2" />
<text  x="1185.14" y="415.5" ></text>
</g>
<g >
<title>irq_exit (34 samples, 0.03%)</title><rect x="1177.5" y="357" width="0.3" height="15.0" fill="rgb(243,90,34)" rx="2" ry="2" />
<text  x="1180.53" y="367.5" ></text>
</g>
<g >
<title>[zedbox] (966 samples, 0.73%)</title><rect x="1181.4" y="469" width="8.6" height="15.0" fill="rgb(229,96,27)" rx="2" ry="2" />
<text  x="1184.38" y="479.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/diff/apply.(*fsApplier).Apply (442 samples, 0.33%)</title><rect x="12.8" y="325" width="3.9" height="15.0" fill="rgb(243,46,34)" rx="2" ry="2" />
<text  x="15.77" y="335.5" ></text>
</g>
<g >
<title>ip6tables (13 samples, 0.01%)</title><rect x="17.9" y="501" width="0.1" height="15.0" fill="rgb(239,105,52)" rx="2" ry="2" />
<text  x="20.89" y="511.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/diff/walking/plugin.(*diffPlugin).Apply (442 samples, 0.33%)</title><rect x="12.8" y="341" width="3.9" height="15.0" fill="rgb(254,4,39)" rx="2" ry="2" />
<text  x="15.77" y="351.5" ></text>
</g>
<g >
<title>kthread (19 samples, 0.01%)</title><rect x="21.2" y="469" width="0.2" height="15.0" fill="rgb(213,192,50)" rx="2" ry="2" />
<text  x="24.22" y="479.5" ></text>
</g>
<g >
<title>[newlogd] (38 samples, 0.03%)</title><rect x="21.7" y="453" width="0.4" height="15.0" fill="rgb(246,70,16)" rx="2" ry="2" />
<text  x="24.71" y="463.5" ></text>
</g>
<g >
<title>[newlogd] (17 samples, 0.01%)</title><rect x="21.8" y="357" width="0.2" height="15.0" fill="rgb(222,199,54)" rx="2" ry="2" />
<text  x="24.84" y="367.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (13 samples, 0.01%)</title><rect x="22.5" y="389" width="0.1" height="15.0" fill="rgb(233,170,54)" rx="2" ry="2" />
<text  x="25.50" y="399.5" ></text>
</g>
<g >
<title>[newlogd] (33 samples, 0.02%)</title><rect x="21.8" y="405" width="0.3" height="15.0" fill="rgb(237,158,10)" rx="2" ry="2" />
<text  x="24.76" y="415.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/services/diff.(*local).Apply (442 samples, 0.33%)</title><rect x="12.8" y="357" width="3.9" height="15.0" fill="rgb(228,21,46)" rx="2" ry="2" />
<text  x="15.77" y="367.5" ></text>
</g>
<g >
<title>kthread (63 samples, 0.05%)</title><rect x="18.3" y="469" width="0.5" height="15.0" fill="rgb(208,101,4)" rx="2" ry="2" />
<text  x="21.28" y="479.5" ></text>
</g>
<g >
<title>writeback_sb_inodes (19 samples, 0.01%)</title><rect x="21.2" y="373" width="0.2" height="15.0" fill="rgb(253,50,52)" rx="2" ry="2" />
<text  x="24.22" y="383.5" ></text>
</g>
<g >
<title>blk_flush_plug_list (12 samples, 0.01%)</title><rect x="18.4" y="405" width="0.1" height="15.0" fill="rgb(219,113,35)" rx="2" ry="2" />
<text  x="21.43" y="415.5" ></text>
</g>
<g >
<title>__sched_text_start (23 samples, 0.02%)</title><rect x="39.2" y="309" width="0.2" height="15.0" fill="rgb(230,22,36)" rx="2" ry="2" />
<text  x="42.16" y="319.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (57 samples, 0.04%)</title><rect x="33.2" y="245" width="0.5" height="15.0" fill="rgb(217,225,7)" rx="2" ry="2" />
<text  x="36.18" y="255.5" ></text>
</g>
<g >
<title>[zedbox] (513 samples, 0.39%)</title><rect x="1184.5" y="309" width="4.5" height="15.0" fill="rgb(227,120,37)" rx="2" ry="2" />
<text  x="1187.47" y="319.5" ></text>
</g>
<g >
<title>runtime.timerproc (13 samples, 0.01%)</title><rect x="11.0" y="453" width="0.1" height="15.0" fill="rgb(253,127,49)" rx="2" ry="2" />
<text  x="14.00" y="463.5" ></text>
</g>
<g >
<title>scsi_end_request (47 samples, 0.04%)</title><rect x="1178.1" y="293" width="0.4" height="15.0" fill="rgb(248,87,6)" rx="2" ry="2" />
<text  x="1181.12" y="303.5" ></text>
</g>
<g >
<title>[unknown] (58 samples, 0.04%)</title><rect x="31.6" y="469" width="0.5" height="15.0" fill="rgb(250,195,53)" rx="2" ry="2" />
<text  x="34.59" y="479.5" ></text>
</g>
<g >
<title>runtime.scanobject (46 samples, 0.03%)</title><rect x="10.6" y="405" width="0.4" height="15.0" fill="rgb(211,74,5)" rx="2" ry="2" />
<text  x="13.59" y="415.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (74 samples, 0.06%)</title><rect x="322.7" y="341" width="0.7" height="15.0" fill="rgb(235,59,0)" rx="2" ry="2" />
<text  x="325.71" y="351.5" ></text>
</g>
<g >
<title>kvm_apic_has_interrupt (55 samples, 0.04%)</title><rect x="37.1" y="277" width="0.5" height="15.0" fill="rgb(234,150,2)" rx="2" ry="2" />
<text  x="40.09" y="287.5" ></text>
</g>
<g >
<title>kvm_arch_vcpu_load (14 samples, 0.01%)</title><rect x="39.2" y="277" width="0.2" height="15.0" fill="rgb(229,40,47)" rx="2" ry="2" />
<text  x="42.23" y="287.5" ></text>
</g>
<g >
<title>futex_wait (21 samples, 0.02%)</title><rect x="22.5" y="405" width="0.2" height="15.0" fill="rgb(215,11,26)" rx="2" ry="2" />
<text  x="25.50" y="415.5" ></text>
</g>
<g >
<title>fput_many (24 samples, 0.02%)</title><rect x="28.2" y="373" width="0.2" height="15.0" fill="rgb(251,213,14)" rx="2" ry="2" />
<text  x="31.17" y="383.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (12 samples, 0.01%)</title><rect x="22.5" y="309" width="0.1" height="15.0" fill="rgb(230,226,15)" rx="2" ry="2" />
<text  x="25.50" y="319.5" ></text>
</g>
<g >
<title>runtime.gcDrain (52 samples, 0.04%)</title><rect x="10.5" y="421" width="0.5" height="15.0" fill="rgb(218,94,14)" rx="2" ry="2" />
<text  x="13.53" y="431.5" ></text>
</g>
<g >
<title>os.openFileNolog (14 samples, 0.01%)</title><rect x="15.2" y="213" width="0.1" height="15.0" fill="rgb(250,40,14)" rx="2" ry="2" />
<text  x="18.15" y="223.5" ></text>
</g>
<g >
<title>__pollwait (51 samples, 0.04%)</title><rect x="26.5" y="373" width="0.4" height="15.0" fill="rgb(242,38,17)" rx="2" ry="2" />
<text  x="29.46" y="383.5" ></text>
</g>
<g >
<title>apic_enabled (12 samples, 0.01%)</title><rect x="36.4" y="293" width="0.1" height="15.0" fill="rgb(213,40,2)" rx="2" ry="2" />
<text  x="39.41" y="303.5" ></text>
</g>
<g >
<title>[zedbox] (969 samples, 0.73%)</title><rect x="1181.4" y="485" width="8.6" height="15.0" fill="rgb(205,186,3)" rx="2" ry="2" />
<text  x="1184.38" y="495.5" ></text>
</g>
<g >
<title>[zedbox] (717 samples, 0.54%)</title><rect x="1183.3" y="357" width="6.3" height="15.0" fill="rgb(232,82,17)" rx="2" ry="2" />
<text  x="1186.26" y="367.5" ></text>
</g>
<g >
<title>x86_decode_insn (31 samples, 0.02%)</title><rect x="34.4" y="293" width="0.3" height="15.0" fill="rgb(242,74,20)" rx="2" ry="2" />
<text  x="37.43" y="303.5" ></text>
</g>
<g >
<title>swapper (128,037 samples, 96.57%)</title><rect x="40.5" y="501" width="1139.5" height="15.0" fill="rgb(225,22,13)" rx="2" ry="2" />
<text  x="43.47" y="511.5" >swapper</text>
</g>
<g >
<title>github.com/containerd/containerd/archive.Apply (307 samples, 0.23%)</title><rect x="12.8" y="293" width="2.7" height="15.0" fill="rgb(206,82,33)" rx="2" ry="2" />
<text  x="15.77" y="303.5" ></text>
</g>
<g >
<title>iowrite16 (14 samples, 0.01%)</title><rect x="21.0" y="229" width="0.2" height="15.0" fill="rgb(237,115,19)" rx="2" ry="2" />
<text  x="24.03" y="239.5" ></text>
</g>
<g >
<title>__sched_text_start (18 samples, 0.01%)</title><rect x="28.5" y="341" width="0.1" height="15.0" fill="rgb(234,207,34)" rx="2" ry="2" />
<text  x="31.47" y="351.5" ></text>
</g>
<g >
<title>do_syscall_64 (17 samples, 0.01%)</title><rect x="1189.7" y="357" width="0.2" height="15.0" fill="rgb(205,24,31)" rx="2" ry="2" />
<text  x="1192.72" y="367.5" ></text>
</g>
<g >
<title>all (132,579 samples, 100%)</title><rect x="10.0" y="517" width="1180.0" height="15.0" fill="rgb(248,103,29)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>blk_mq_dispatch_rq_list (23 samples, 0.02%)</title><rect x="20.9" y="325" width="0.3" height="15.0" fill="rgb(244,119,14)" rx="2" ry="2" />
<text  x="23.95" y="335.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).nextBlock (87 samples, 0.07%)</title><rect x="14.0" y="101" width="0.8" height="15.0" fill="rgb(205,151,36)" rx="2" ry="2" />
<text  x="17.05" y="111.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/metadata.(*snapshotter).garbageCollect (12 samples, 0.01%)</title><rect x="12.4" y="437" width="0.1" height="15.0" fill="rgb(245,59,9)" rx="2" ry="2" />
<text  x="15.38" y="447.5" ></text>
</g>
<g >
<title>blk_finish_plug (12 samples, 0.01%)</title><rect x="18.4" y="421" width="0.1" height="15.0" fill="rgb(206,91,50)" rx="2" ry="2" />
<text  x="21.43" y="431.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (12 samples, 0.01%)</title><rect x="1181.3" y="405" width="0.1" height="15.0" fill="rgb(246,22,40)" rx="2" ry="2" />
<text  x="1184.27" y="415.5" ></text>
</g>
<g >
<title>secondary_startup_64 (128,037 samples, 96.57%)</title><rect x="40.5" y="485" width="1139.5" height="15.0" fill="rgb(220,37,11)" rx="2" ry="2" />
<text  x="43.47" y="495.5" >secondary_startup_64</text>
</g>
<g >
<title>__run_timers.part.40 (20 samples, 0.02%)</title><rect x="323.2" y="309" width="0.2" height="15.0" fill="rgb(211,0,14)" rx="2" ry="2" />
<text  x="326.19" y="319.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (34 samples, 0.03%)</title><rect x="1177.5" y="341" width="0.3" height="15.0" fill="rgb(235,140,1)" rx="2" ry="2" />
<text  x="1180.53" y="351.5" ></text>
</g>
<g >
<title>receive_buf (12 samples, 0.01%)</title><rect x="1181.3" y="357" width="0.1" height="15.0" fill="rgb(254,193,38)" rx="2" ry="2" />
<text  x="1184.27" y="367.5" ></text>
</g>
<g >
<title>ioeventfd_write (58 samples, 0.04%)</title><rect x="33.2" y="293" width="0.5" height="15.0" fill="rgb(218,42,17)" rx="2" ry="2" />
<text  x="36.17" y="303.5" ></text>
</g>
<g >
<title>__writeback_single_inode (18 samples, 0.01%)</title><rect x="21.2" y="357" width="0.2" height="15.0" fill="rgb(236,162,30)" rx="2" ry="2" />
<text  x="24.23" y="367.5" ></text>
</g>
<g >
<title>archive/tar.(*Reader).Read (220 samples, 0.17%)</title><rect x="12.9" y="229" width="2.0" height="15.0" fill="rgb(236,153,16)" rx="2" ry="2" />
<text  x="15.91" y="239.5" ></text>
</g>
<g >
<title>eventfd_poll (154 samples, 0.12%)</title><rect x="26.0" y="389" width="1.4" height="15.0" fill="rgb(229,100,23)" rx="2" ry="2" />
<text  x="29.04" y="399.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (34 samples, 0.03%)</title><rect x="1177.5" y="389" width="0.3" height="15.0" fill="rgb(218,33,40)" rx="2" ry="2" />
<text  x="1180.53" y="399.5" ></text>
</g>
<g >
<title>vfs_read (13 samples, 0.01%)</title><rect x="1188.3" y="197" width="0.2" height="15.0" fill="rgb(210,36,2)" rx="2" ry="2" />
<text  x="1191.34" y="207.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (12 samples, 0.01%)</title><rect x="1178.5" y="261" width="0.2" height="15.0" fill="rgb(240,83,49)" rx="2" ry="2" />
<text  x="1181.55" y="271.5" ></text>
</g>
<g >
<title>kvm_arch_vcpu_ioctl_run (765 samples, 0.58%)</title><rect x="33.0" y="357" width="6.8" height="15.0" fill="rgb(242,5,5)" rx="2" ry="2" />
<text  x="35.96" y="367.5" ></text>
</g>
<g >
<title>generic_perform_write (22 samples, 0.02%)</title><rect x="14.9" y="69" width="0.2" height="15.0" fill="rgb(211,28,50)" rx="2" ry="2" />
<text  x="17.91" y="79.5" ></text>
</g>
<g >
<title>schedule_idle (115 samples, 0.09%)</title><rect x="1179.0" y="421" width="1.0" height="15.0" fill="rgb(248,84,54)" rx="2" ry="2" />
<text  x="1182.00" y="431.5" ></text>
</g>
<g >
<title>archive/tar.(*Reader).Read (84 samples, 0.06%)</title><rect x="15.6" y="197" width="0.7" height="15.0" fill="rgb(245,103,27)" rx="2" ry="2" />
<text  x="18.56" y="207.5" ></text>
</g>
<g >
<title>kvm_skip_emulated_instruction (37 samples, 0.03%)</title><rect x="34.4" y="341" width="0.3" height="15.0" fill="rgb(252,176,12)" rx="2" ry="2" />
<text  x="37.38" y="351.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).huffSym (44 samples, 0.03%)</title><rect x="14.3" y="69" width="0.4" height="15.0" fill="rgb(210,219,3)" rx="2" ry="2" />
<text  x="17.31" y="79.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).huffmanBlock (25 samples, 0.02%)</title><rect x="16.1" y="53" width="0.2" height="15.0" fill="rgb(218,88,31)" rx="2" ry="2" />
<text  x="19.05" y="63.5" ></text>
</g>
<g >
<title>memlogd (24 samples, 0.02%)</title><rect x="21.4" y="501" width="0.2" height="15.0" fill="rgb(234,194,33)" rx="2" ry="2" />
<text  x="24.43" y="511.5" ></text>
</g>
<g >
<title>[zedbox] (40 samples, 0.03%)</title><rect x="1180.3" y="421" width="0.3" height="15.0" fill="rgb(241,167,16)" rx="2" ry="2" />
<text  x="1183.29" y="431.5" ></text>
</g>
<g >
<title>ksys_write (17 samples, 0.01%)</title><rect x="1189.5" y="309" width="0.1" height="15.0" fill="rgb(233,166,7)" rx="2" ry="2" />
<text  x="1192.48" y="319.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive.applyNaive (307 samples, 0.23%)</title><rect x="12.8" y="277" width="2.7" height="15.0" fill="rgb(237,51,34)" rx="2" ry="2" />
<text  x="15.77" y="287.5" ></text>
</g>
<g >
<title>do_syscall_64 (804 samples, 0.61%)</title><rect x="32.9" y="453" width="7.2" height="15.0" fill="rgb(225,96,29)" rx="2" ry="2" />
<text  x="35.93" y="463.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).huffSym (19 samples, 0.01%)</title><rect x="15.8" y="53" width="0.2" height="15.0" fill="rgb(219,28,24)" rx="2" ry="2" />
<text  x="18.81" y="63.5" ></text>
</g>
<g >
<title>[unknown] (69 samples, 0.05%)</title><rect x="19.9" y="485" width="0.7" height="15.0" fill="rgb(216,187,43)" rx="2" ry="2" />
<text  x="22.94" y="495.5" ></text>
</g>
<g >
<title>schedule (20 samples, 0.02%)</title><rect x="28.5" y="357" width="0.1" height="15.0" fill="rgb(242,93,42)" rx="2" ry="2" />
<text  x="31.46" y="367.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (19 samples, 0.01%)</title><rect x="323.0" y="277" width="0.2" height="15.0" fill="rgb(246,125,3)" rx="2" ry="2" />
<text  x="326.02" y="287.5" ></text>
</g>
<g >
<title>wb_writeback (19 samples, 0.01%)</title><rect x="21.2" y="405" width="0.2" height="15.0" fill="rgb(218,41,11)" rx="2" ry="2" />
<text  x="24.22" y="415.5" ></text>
</g>
<g >
<title>[zedbox] (404 samples, 0.30%)</title><rect x="1185.2" y="277" width="3.6" height="15.0" fill="rgb(218,61,4)" rx="2" ry="2" />
<text  x="1188.17" y="287.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).huffmanBlock (47 samples, 0.04%)</title><rect x="15.6" y="69" width="0.4" height="15.0" fill="rgb(242,65,12)" rx="2" ry="2" />
<text  x="18.61" y="79.5" ></text>
</g>
<g >
<title>do_syscall_64 (673 samples, 0.51%)</title><rect x="24.2" y="437" width="6.0" height="15.0" fill="rgb(218,50,40)" rx="2" ry="2" />
<text  x="27.23" y="447.5" ></text>
</g>
<g >
<title>ksys_write (42 samples, 0.03%)</title><rect x="29.8" y="421" width="0.4" height="15.0" fill="rgb(206,151,51)" rx="2" ry="2" />
<text  x="32.85" y="431.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/services/diff.(*service).Apply (442 samples, 0.33%)</title><rect x="12.8" y="373" width="3.9" height="15.0" fill="rgb(216,132,25)" rx="2" ry="2" />
<text  x="15.77" y="383.5" ></text>
</g>
<g >
<title>__raw_spin_unlock_irq (18 samples, 0.01%)</title><rect x="28.5" y="309" width="0.1" height="15.0" fill="rgb(214,62,34)" rx="2" ry="2" />
<text  x="31.47" y="319.5" ></text>
</g>
<g >
<title>kjournald2 (63 samples, 0.05%)</title><rect x="18.3" y="453" width="0.5" height="15.0" fill="rgb(212,74,6)" rx="2" ry="2" />
<text  x="21.28" y="463.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (105 samples, 0.08%)</title><rect x="1179.1" y="357" width="0.9" height="15.0" fill="rgb(226,35,10)" rx="2" ry="2" />
<text  x="1182.09" y="367.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker.func2 (52 samples, 0.04%)</title><rect x="10.5" y="437" width="0.5" height="15.0" fill="rgb(245,150,13)" rx="2" ry="2" />
<text  x="13.53" y="447.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive.applyNaive (135 samples, 0.10%)</title><rect x="15.5" y="245" width="1.2" height="15.0" fill="rgb(234,139,11)" rx="2" ry="2" />
<text  x="18.50" y="255.5" ></text>
</g>
<g >
<title>wake_up_q (40 samples, 0.03%)</title><rect x="32.4" y="373" width="0.4" height="15.0" fill="rgb(236,146,10)" rx="2" ry="2" />
<text  x="35.41" y="383.5" ></text>
</g>
<g >
<title>[zedbox] (40 samples, 0.03%)</title><rect x="1180.3" y="405" width="0.3" height="15.0" fill="rgb(252,87,27)" rx="2" ry="2" />
<text  x="1183.29" y="415.5" ></text>
</g>
<g >
<title>vfs_write (25 samples, 0.02%)</title><rect x="14.9" y="133" width="0.2" height="15.0" fill="rgb(220,229,16)" rx="2" ry="2" />
<text  x="17.89" y="143.5" ></text>
</g>
<g >
<title>[zedbox] (38 samples, 0.03%)</title><rect x="1180.3" y="389" width="0.3" height="15.0" fill="rgb(234,208,3)" rx="2" ry="2" />
<text  x="1183.31" y="399.5" ></text>
</g>
<g >
<title>do_syscall_64 (20 samples, 0.02%)</title><rect x="1189.0" y="293" width="0.2" height="15.0" fill="rgb(239,133,39)" rx="2" ry="2" />
<text  x="1192.04" y="303.5" ></text>
</g>
<g >
<title>ksys_write (25 samples, 0.02%)</title><rect x="14.9" y="149" width="0.2" height="15.0" fill="rgb(225,179,9)" rx="2" ry="2" />
<text  x="17.89" y="159.5" ></text>
</g>
<g >
<title>do_syscall_64 (34 samples, 0.03%)</title><rect x="1188.2" y="229" width="0.3" height="15.0" fill="rgb(220,6,47)" rx="2" ry="2" />
<text  x="1191.16" y="239.5" ></text>
</g>
<g >
<title>vp_notify (14 samples, 0.01%)</title><rect x="21.0" y="245" width="0.2" height="15.0" fill="rgb(209,185,4)" rx="2" ry="2" />
<text  x="24.03" y="255.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (26 samples, 0.02%)</title><rect x="14.9" y="181" width="0.2" height="15.0" fill="rgb(214,12,37)" rx="2" ry="2" />
<text  x="17.88" y="191.5" ></text>
</g>
<g >
<title>ksys_read (20 samples, 0.02%)</title><rect x="29.7" y="421" width="0.1" height="15.0" fill="rgb(213,108,36)" rx="2" ry="2" />
<text  x="32.67" y="431.5" ></text>
</g>
<g >
<title>archive/tar.(*regFileReader).Read (84 samples, 0.06%)</title><rect x="15.6" y="181" width="0.7" height="15.0" fill="rgb(210,215,36)" rx="2" ry="2" />
<text  x="18.56" y="191.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/mount.WithTempMount (135 samples, 0.10%)</title><rect x="15.5" y="293" width="1.2" height="15.0" fill="rgb(212,166,33)" rx="2" ry="2" />
<text  x="18.50" y="303.5" ></text>
</g>
<g >
<title>[jq] (64 samples, 0.05%)</title><rect x="19.9" y="469" width="0.6" height="15.0" fill="rgb(249,83,37)" rx="2" ry="2" />
<text  x="22.94" y="479.5" ></text>
</g>
<g >
<title>kvm_vcpu_ioctl (767 samples, 0.58%)</title><rect x="33.0" y="373" width="6.8" height="15.0" fill="rgb(242,168,27)" rx="2" ry="2" />
<text  x="35.95" y="383.5" ></text>
</g>
<g >
<title>__apic_accept_irq (25 samples, 0.02%)</title><rect x="39.8" y="293" width="0.2" height="15.0" fill="rgb(225,194,46)" rx="2" ry="2" />
<text  x="42.81" y="303.5" ></text>
</g>
<g >
<title>do_IRQ (12 samples, 0.01%)</title><rect x="1181.3" y="437" width="0.1" height="15.0" fill="rgb(237,143,32)" rx="2" ry="2" />
<text  x="1184.27" y="447.5" ></text>
</g>
<g >
<title>os.OpenFile (14 samples, 0.01%)</title><rect x="16.4" y="197" width="0.1" height="15.0" fill="rgb(206,191,21)" rx="2" ry="2" />
<text  x="19.39" y="207.5" ></text>
</g>
<g >
<title>blk_update_request (18 samples, 0.01%)</title><rect x="1178.3" y="277" width="0.2" height="15.0" fill="rgb(248,58,18)" rx="2" ry="2" />
<text  x="1181.34" y="287.5" ></text>
</g>
<g >
<title>blk_mq_run_hw_queue (26 samples, 0.02%)</title><rect x="20.9" y="389" width="0.3" height="15.0" fill="rgb(212,101,2)" rx="2" ry="2" />
<text  x="23.95" y="399.5" ></text>
</g>
<g >
<title>poll_freewait (81 samples, 0.06%)</title><rect x="27.7" y="389" width="0.7" height="15.0" fill="rgb(229,95,4)" rx="2" ry="2" />
<text  x="30.67" y="399.5" ></text>
</g>
<g >
<title>native_safe_halt (31,797 samples, 23.98%)</title><rect x="40.5" y="405" width="283.0" height="15.0" fill="rgb(241,32,48)" rx="2" ry="2" />
<text  x="43.50" y="415.5" >native_safe_halt</text>
</g>
<g >
<title>[zedbox] (23 samples, 0.02%)</title><rect x="1180.4" y="373" width="0.2" height="15.0" fill="rgb(229,142,21)" rx="2" ry="2" />
<text  x="1183.37" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (19 samples, 0.01%)</title><rect x="1189.7" y="373" width="0.2" height="15.0" fill="rgb(221,132,14)" rx="2" ry="2" />
<text  x="1192.72" y="383.5" ></text>
</g>
<g >
<title>newlogd (49 samples, 0.04%)</title><rect x="21.7" y="501" width="0.4" height="15.0" fill="rgb(223,132,12)" rx="2" ry="2" />
<text  x="24.71" y="511.5" ></text>
</g>
<g >
<title>prb_retire_rx_blk_timer_expired (16 samples, 0.01%)</title><rect x="323.2" y="277" width="0.2" height="15.0" fill="rgb(244,19,48)" rx="2" ry="2" />
<text  x="326.23" y="287.5" ></text>
</g>
<g >
<title>do_syscall_64 (26 samples, 0.02%)</title><rect x="14.9" y="165" width="0.2" height="15.0" fill="rgb(225,48,9)" rx="2" ry="2" />
<text  x="17.88" y="175.5" ></text>
</g>
<g >
<title>__apic_accept_irq (17 samples, 0.01%)</title><rect x="33.9" y="229" width="0.2" height="15.0" fill="rgb(207,73,26)" rx="2" ry="2" />
<text  x="36.91" y="239.5" ></text>
</g>
<g >
<title>[zedbox] (192 samples, 0.14%)</title><rect x="1186.3" y="229" width="1.7" height="15.0" fill="rgb(227,157,15)" rx="2" ry="2" />
<text  x="1189.31" y="239.5" ></text>
</g>
<g >
<title>read_tsc (70 samples, 0.05%)</title><rect x="35.1" y="293" width="0.6" height="15.0" fill="rgb(208,197,5)" rx="2" ry="2" />
<text  x="38.09" y="303.5" ></text>
</g>
<g >
<title>start_secondary (96,185 samples, 72.55%)</title><rect x="324.0" y="469" width="856.0" height="15.0" fill="rgb(220,111,25)" rx="2" ry="2" />
<text  x="326.97" y="479.5" >start_secondary</text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/google.golang.org/grpc.(*Server).processStreamingRPC (21 samples, 0.02%)</title><rect x="12.6" y="437" width="0.2" height="15.0" fill="rgb(219,35,29)" rx="2" ry="2" />
<text  x="15.58" y="447.5" ></text>
</g>
<g >
<title>virtscsi_queuecommand (20 samples, 0.02%)</title><rect x="21.0" y="293" width="0.2" height="15.0" fill="rgb(251,153,32)" rx="2" ry="2" />
<text  x="23.97" y="303.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).huffSym (56 samples, 0.04%)</title><rect x="13.5" y="85" width="0.5" height="15.0" fill="rgb(240,165,35)" rx="2" ry="2" />
<text  x="16.45" y="95.5" ></text>
</g>
<g >
<title>blk_done_softirq (52 samples, 0.04%)</title><rect x="1178.1" y="325" width="0.4" height="15.0" fill="rgb(242,90,44)" rx="2" ry="2" />
<text  x="1181.08" y="335.5" ></text>
</g>
<g >
<title>__fget (76 samples, 0.06%)</title><rect x="25.2" y="373" width="0.7" height="15.0" fill="rgb(233,132,0)" rx="2" ry="2" />
<text  x="28.24" y="383.5" ></text>
</g>
<g >
<title>os.(*File).Write (27 samples, 0.02%)</title><rect x="14.9" y="229" width="0.2" height="15.0" fill="rgb(211,109,17)" rx="2" ry="2" />
<text  x="17.87" y="239.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (74 samples, 0.06%)</title><rect x="322.7" y="373" width="0.7" height="15.0" fill="rgb(235,25,19)" rx="2" ry="2" />
<text  x="325.71" y="383.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (31 samples, 0.02%)</title><rect x="1178.7" y="421" width="0.3" height="15.0" fill="rgb(248,32,3)" rx="2" ry="2" />
<text  x="1181.68" y="431.5" ></text>
</g>
<g >
<title>__raw_spin_unlock_irq (105 samples, 0.08%)</title><rect x="1179.1" y="373" width="0.9" height="15.0" fill="rgb(206,220,54)" rx="2" ry="2" />
<text  x="1182.09" y="383.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (13 samples, 0.01%)</title><rect x="322.7" y="325" width="0.1" height="15.0" fill="rgb(213,75,11)" rx="2" ry="2" />
<text  x="325.72" y="335.5" ></text>
</g>
<g >
<title>schedule_idle (36 samples, 0.03%)</title><rect x="323.6" y="421" width="0.4" height="15.0" fill="rgb(223,207,2)" rx="2" ry="2" />
<text  x="326.65" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (684 samples, 0.52%)</title><rect x="24.2" y="453" width="6.1" height="15.0" fill="rgb(244,58,15)" rx="2" ry="2" />
<text  x="27.23" y="463.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive.createTarFile (282 samples, 0.21%)</title><rect x="12.9" y="261" width="2.5" height="15.0" fill="rgb(216,159,12)" rx="2" ry="2" />
<text  x="15.86" y="271.5" ></text>
</g>
<g >
<title>kvm_cpu_has_extint (22 samples, 0.02%)</title><rect x="37.6" y="277" width="0.2" height="15.0" fill="rgb(215,151,50)" rx="2" ry="2" />
<text  x="40.58" y="287.5" ></text>
</g>
<g >
<title>kvm_irq_delivery_to_apic_fast (20 samples, 0.02%)</title><rect x="33.9" y="245" width="0.2" height="15.0" fill="rgb(211,166,0)" rx="2" ry="2" />
<text  x="36.90" y="255.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (25 samples, 0.02%)</title><rect x="17.5" y="437" width="0.3" height="15.0" fill="rgb(209,8,3)" rx="2" ry="2" />
<text  x="20.54" y="447.5" ></text>
</g>
<g >
<title>[zedbox] (765 samples, 0.58%)</title><rect x="1182.9" y="373" width="6.8" height="15.0" fill="rgb(220,4,42)" rx="2" ry="2" />
<text  x="1185.92" y="383.5" ></text>
</g>
<g >
<title>do_filp_open (38 samples, 0.03%)</title><rect x="29.3" y="405" width="0.3" height="15.0" fill="rgb(250,34,15)" rx="2" ry="2" />
<text  x="32.26" y="415.5" ></text>
</g>
<g >
<title>fput_many (26 samples, 0.02%)</title><rect x="27.4" y="389" width="0.3" height="15.0" fill="rgb(248,196,14)" rx="2" ry="2" />
<text  x="30.43" y="399.5" ></text>
</g>
<g >
<title>[zedbox] (964 samples, 0.73%)</title><rect x="1181.4" y="453" width="8.6" height="15.0" fill="rgb(246,214,18)" rx="2" ry="2" />
<text  x="1184.39" y="463.5" ></text>
</g>
<g >
<title>[memlogd] (13 samples, 0.01%)</title><rect x="21.4" y="453" width="0.1" height="15.0" fill="rgb(225,80,21)" rx="2" ry="2" />
<text  x="24.43" y="463.5" ></text>
</g>
<g >
<title>kvm_set_msi (28 samples, 0.02%)</title><rect x="39.8" y="341" width="0.2" height="15.0" fill="rgb(245,122,11)" rx="2" ry="2" />
<text  x="42.80" y="351.5" ></text>
</g>
<g >
<title>irq_exit (74 samples, 0.06%)</title><rect x="322.7" y="357" width="0.7" height="15.0" fill="rgb(238,162,2)" rx="2" ry="2" />
<text  x="325.71" y="367.5" ></text>
</g>
<g >
<title>do_syscall_64 (45 samples, 0.03%)</title><rect x="32.4" y="437" width="0.4" height="15.0" fill="rgb(250,96,40)" rx="2" ry="2" />
<text  x="35.39" y="447.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (808 samples, 0.61%)</title><rect x="32.9" y="469" width="7.2" height="15.0" fill="rgb(251,159,21)" rx="2" ry="2" />
<text  x="35.93" y="479.5" ></text>
</g>
<g >
<title>worker_thread (30 samples, 0.02%)</title><rect x="20.9" y="453" width="0.3" height="15.0" fill="rgb(205,39,42)" rx="2" ry="2" />
<text  x="23.94" y="463.5" ></text>
</g>
<g >
<title>do_IRQ (85 samples, 0.06%)</title><rect x="1177.9" y="373" width="0.8" height="15.0" fill="rgb(208,174,23)" rx="2" ry="2" />
<text  x="1180.90" y="383.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (801 samples, 0.60%)</title><rect x="32.9" y="437" width="7.2" height="15.0" fill="rgb(244,228,29)" rx="2" ry="2" />
<text  x="35.94" y="447.5" ></text>
</g>
<g >
<title>kvm_vcpu_check_block (386 samples, 0.29%)</title><rect x="35.7" y="325" width="3.5" height="15.0" fill="rgb(210,176,49)" rx="2" ry="2" />
<text  x="38.72" y="335.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).nextBlock (31 samples, 0.02%)</title><rect x="16.0" y="69" width="0.3" height="15.0" fill="rgb(246,147,38)" rx="2" ry="2" />
<text  x="19.03" y="79.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/google.golang.org/grpc.(*Server).handleStream (474 samples, 0.36%)</title><rect x="12.6" y="453" width="4.2" height="15.0" fill="rgb(215,65,47)" rx="2" ry="2" />
<text  x="15.58" y="463.5" ></text>
</g>
<g >
<title>kvm_vcpu_wake_up (16 samples, 0.01%)</title><rect x="33.9" y="197" width="0.1" height="15.0" fill="rgb(223,202,26)" rx="2" ry="2" />
<text  x="36.91" y="207.5" ></text>
</g>
<g >
<title>runtime.systemstack (52 samples, 0.04%)</title><rect x="10.5" y="453" width="0.5" height="15.0" fill="rgb(234,227,44)" rx="2" ry="2" />
<text  x="13.53" y="463.5" ></text>
</g>
<g >
<title>new_sync_write (17 samples, 0.01%)</title><rect x="1189.5" y="277" width="0.1" height="15.0" fill="rgb(231,83,20)" rx="2" ry="2" />
<text  x="1192.48" y="287.5" ></text>
</g>
</g>
</svg>
