<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="582" onload="init(evt)" viewBox="0 0 1200 582" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="582.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="565" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="565" > </text>
<g id="frames">
<g >
<title>internal/poll.(*FD).Write (33 samples, 0.03%)</title><rect x="15.4" y="197" width="0.4" height="15.0" fill="rgb(223,42,40)" rx="2" ry="2" />
<text  x="18.45" y="207.5" ></text>
</g>
<g >
<title>kvm_irq_delivery_to_apic_fast (13 samples, 0.01%)</title><rect x="34.4" y="261" width="0.1" height="15.0" fill="rgb(210,187,24)" rx="2" ry="2" />
<text  x="37.39" y="271.5" ></text>
</g>
<g >
<title>__sched_text_start (32 samples, 0.02%)</title><rect x="322.3" y="421" width="0.3" height="15.0" fill="rgb(206,64,3)" rx="2" ry="2" />
<text  x="325.29" y="431.5" ></text>
</g>
<g >
<title>do_futex (34 samples, 0.03%)</title><rect x="22.4" y="437" width="0.3" height="15.0" fill="rgb(210,165,35)" rx="2" ry="2" />
<text  x="25.38" y="447.5" ></text>
</g>
<g >
<title>zpl_iter_write (31 samples, 0.02%)</title><rect x="15.5" y="85" width="0.2" height="15.0" fill="rgb(217,80,44)" rx="2" ry="2" />
<text  x="18.46" y="95.5" ></text>
</g>
<g >
<title>z_wr_iss (95 samples, 0.07%)</title><rect x="1177.7" y="517" width="0.9" height="15.0" fill="rgb(225,119,3)" rx="2" ry="2" />
<text  x="1180.72" y="527.5" ></text>
</g>
<g >
<title>virtnet_poll (17 samples, 0.01%)</title><rect x="1179.9" y="389" width="0.2" height="15.0" fill="rgb(234,203,8)" rx="2" ry="2" />
<text  x="1182.93" y="399.5" ></text>
</g>
<g >
<title>runtime.timerproc (15 samples, 0.01%)</title><rect x="10.9" y="469" width="0.1" height="15.0" fill="rgb(242,69,47)" rx="2" ry="2" />
<text  x="13.86" y="479.5" ></text>
</g>
<g >
<title>arc_write_done (15 samples, 0.01%)</title><rect x="1176.8" y="421" width="0.1" height="15.0" fill="rgb(237,139,28)" rx="2" ry="2" />
<text  x="1179.76" y="431.5" ></text>
</g>
<g >
<title>abd_copy_from_buf_off_cb (16 samples, 0.01%)</title><rect x="1178.0" y="373" width="0.1" height="15.0" fill="rgb(227,5,8)" rx="2" ry="2" />
<text  x="1180.99" y="383.5" ></text>
</g>
<g >
<title>[newlogd] (34 samples, 0.03%)</title><rect x="21.3" y="485" width="0.4" height="15.0" fill="rgb(250,206,38)" rx="2" ry="2" />
<text  x="24.34" y="495.5" ></text>
</g>
<g >
<title>do_sys_open (44 samples, 0.03%)</title><rect x="29.2" y="437" width="0.4" height="15.0" fill="rgb(226,49,44)" rx="2" ry="2" />
<text  x="32.17" y="447.5" ></text>
</g>
<g >
<title>__apic_accept_irq (11 samples, 0.01%)</title><rect x="34.4" y="245" width="0.1" height="15.0" fill="rgb(216,100,12)" rx="2" ry="2" />
<text  x="37.40" y="255.5" ></text>
</g>
<g >
<title>do_idle (92,721 samples, 72.32%)</title><rect x="322.6" y="453" width="853.4" height="15.0" fill="rgb(229,219,7)" rx="2" ry="2" />
<text  x="325.60" y="463.5" >do_idle</text>
</g>
<g >
<title>ret_from_fork (15 samples, 0.01%)</title><rect x="1178.6" y="501" width="0.1" height="15.0" fill="rgb(239,228,18)" rx="2" ry="2" />
<text  x="1181.60" y="511.5" ></text>
</g>
<g >
<title>vmx_prepare_switch_to_guest (13 samples, 0.01%)</title><rect x="40.2" y="357" width="0.1" height="15.0" fill="rgb(205,19,51)" rx="2" ry="2" />
<text  x="43.22" y="367.5" ></text>
</g>
<g >
<title>ioctl (16 samples, 0.01%)</title><rect x="1189.7" y="485" width="0.2" height="15.0" fill="rgb(228,181,13)" rx="2" ry="2" />
<text  x="1192.74" y="495.5" ></text>
</g>
<g >
<title>__sched_text_start (21 samples, 0.02%)</title><rect x="22.4" y="373" width="0.2" height="15.0" fill="rgb(240,67,51)" rx="2" ry="2" />
<text  x="25.44" y="383.5" ></text>
</g>
<g >
<title>do_vfs_ioctl (765 samples, 0.60%)</title><rect x="33.6" y="421" width="7.0" height="15.0" fill="rgb(250,15,46)" rx="2" ry="2" />
<text  x="36.57" y="431.5" ></text>
</g>
<g >
<title>kvm_arch_vcpu_ioctl_run (732 samples, 0.57%)</title><rect x="33.6" y="373" width="6.7" height="15.0" fill="rgb(221,198,46)" rx="2" ry="2" />
<text  x="36.60" y="383.5" ></text>
</g>
<g >
<title>[newlogd] (34 samples, 0.03%)</title><rect x="21.3" y="501" width="0.4" height="15.0" fill="rgb(226,205,37)" rx="2" ry="2" />
<text  x="24.34" y="511.5" ></text>
</g>
<g >
<title>[memlogd] (12 samples, 0.01%)</title><rect x="21.0" y="421" width="0.1" height="15.0" fill="rgb(208,188,3)" rx="2" ry="2" />
<text  x="24.02" y="431.5" ></text>
</g>
<g >
<title>do_syscall_64 (25 samples, 0.02%)</title><rect x="1188.1" y="261" width="0.2" height="15.0" fill="rgb(212,40,5)" rx="2" ry="2" />
<text  x="1191.08" y="271.5" ></text>
</g>
<g >
<title>path_openat (32 samples, 0.02%)</title><rect x="29.2" y="405" width="0.3" height="15.0" fill="rgb(238,51,48)" rx="2" ry="2" />
<text  x="32.19" y="415.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (44 samples, 0.03%)</title><rect x="32.9" y="357" width="0.4" height="15.0" fill="rgb(226,144,46)" rx="2" ry="2" />
<text  x="35.89" y="367.5" ></text>
</g>
<g >
<title>kthreadd (28 samples, 0.02%)</title><rect x="20.6" y="517" width="0.3" height="15.0" fill="rgb(250,77,40)" rx="2" ry="2" />
<text  x="23.59" y="527.5" ></text>
</g>
<g >
<title>ret_from_fork (122 samples, 0.10%)</title><rect x="1176.6" y="501" width="1.1" height="15.0" fill="rgb(246,48,28)" rx="2" ry="2" />
<text  x="1179.56" y="511.5" ></text>
</g>
<g >
<title>zfs_create (18 samples, 0.01%)</title><rect x="16.0" y="69" width="0.1" height="15.0" fill="rgb(251,64,32)" rx="2" ry="2" />
<text  x="18.97" y="79.5" ></text>
</g>
<g >
<title>do_syscall_64 (32 samples, 0.02%)</title><rect x="15.4" y="149" width="0.3" height="15.0" fill="rgb(221,160,19)" rx="2" ry="2" />
<text  x="18.45" y="159.5" ></text>
</g>
<g >
<title>iptables (22 samples, 0.02%)</title><rect x="18.4" y="517" width="0.2" height="15.0" fill="rgb(208,100,53)" rx="2" ry="2" />
<text  x="21.42" y="527.5" ></text>
</g>
<g >
<title>[unknown] (67 samples, 0.05%)</title><rect x="19.7" y="501" width="0.7" height="15.0" fill="rgb(228,25,0)" rx="2" ry="2" />
<text  x="22.75" y="511.5" ></text>
</g>
<g >
<title>ioeventfd_write (36 samples, 0.03%)</title><rect x="33.8" y="309" width="0.3" height="15.0" fill="rgb(232,14,29)" rx="2" ry="2" />
<text  x="36.78" y="319.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (40 samples, 0.03%)</title><rect x="27.6" y="373" width="0.4" height="15.0" fill="rgb(212,82,3)" rx="2" ry="2" />
<text  x="30.59" y="383.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive.handleLChmod (11 samples, 0.01%)</title><rect x="15.8" y="229" width="0.1" height="15.0" fill="rgb(229,126,43)" rx="2" ry="2" />
<text  x="18.75" y="239.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).nextBlock (114 samples, 0.09%)</title><rect x="14.3" y="85" width="1.1" height="15.0" fill="rgb(251,228,41)" rx="2" ry="2" />
<text  x="17.32" y="95.5" ></text>
</g>
<g >
<title>kthread (29 samples, 0.02%)</title><rect x="1176.1" y="485" width="0.2" height="15.0" fill="rgb(249,100,5)" rx="2" ry="2" />
<text  x="1179.06" y="495.5" ></text>
</g>
<g >
<title>runtime.systemstack (33 samples, 0.03%)</title><rect x="10.6" y="469" width="0.3" height="15.0" fill="rgb(239,225,3)" rx="2" ry="2" />
<text  x="13.55" y="479.5" ></text>
</g>
<g >
<title>ksys_ioctl (16 samples, 0.01%)</title><rect x="1189.7" y="421" width="0.2" height="15.0" fill="rgb(237,52,33)" rx="2" ry="2" />
<text  x="1192.74" y="431.5" ></text>
</g>
<g >
<title>ksys_ioctl (765 samples, 0.60%)</title><rect x="33.6" y="437" width="7.0" height="15.0" fill="rgb(250,170,3)" rx="2" ry="2" />
<text  x="36.57" y="447.5" ></text>
</g>
<g >
<title>[memlogd] (12 samples, 0.01%)</title><rect x="21.0" y="373" width="0.1" height="15.0" fill="rgb(209,69,15)" rx="2" ry="2" />
<text  x="24.02" y="383.5" ></text>
</g>
<g >
<title>io.(*teeReader).Read (269 samples, 0.21%)</title><rect x="12.9" y="165" width="2.5" height="15.0" fill="rgb(208,197,36)" rx="2" ry="2" />
<text  x="15.95" y="175.5" ></text>
</g>
<g >
<title>__cpuidle_text_start (30,496 samples, 23.79%)</title><rect x="41.5" y="437" width="280.7" height="15.0" fill="rgb(220,139,36)" rx="2" ry="2" />
<text  x="44.49" y="447.5" >__cpuidle_text_start</text>
</g>
<g >
<title>os.Lchown (12 samples, 0.01%)</title><rect x="16.3" y="229" width="0.1" height="15.0" fill="rgb(221,188,51)" rx="2" ry="2" />
<text  x="19.26" y="239.5" ></text>
</g>
<g >
<title>irq_exit (11 samples, 0.01%)</title><rect x="322.1" y="373" width="0.1" height="15.0" fill="rgb(219,87,25)" rx="2" ry="2" />
<text  x="325.08" y="383.5" ></text>
</g>
<g >
<title>irq_exit (41 samples, 0.03%)</title><rect x="1174.0" y="373" width="0.4" height="15.0" fill="rgb(244,65,11)" rx="2" ry="2" />
<text  x="1176.99" y="383.5" ></text>
</g>
<g >
<title>path_openat (20 samples, 0.02%)</title><rect x="16.0" y="101" width="0.1" height="15.0" fill="rgb(212,84,15)" rx="2" ry="2" />
<text  x="18.96" y="111.5" ></text>
</g>
<g >
<title>receive_buf (14 samples, 0.01%)</title><rect x="1174.6" y="309" width="0.1" height="15.0" fill="rgb(238,173,35)" rx="2" ry="2" />
<text  x="1177.56" y="319.5" ></text>
</g>
<g >
<title>[zedbox] (777 samples, 0.61%)</title><rect x="1182.1" y="373" width="7.2" height="15.0" fill="rgb(212,96,48)" rx="2" ry="2" />
<text  x="1185.14" y="383.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/github.com/containerd/continuity/fs.walkLinks (16 samples, 0.01%)</title><rect x="16.4" y="181" width="0.2" height="15.0" fill="rgb(223,82,44)" rx="2" ry="2" />
<text  x="19.43" y="191.5" ></text>
</g>
<g >
<title>do_syscall_64 (54 samples, 0.04%)</title><rect x="32.8" y="453" width="0.5" height="15.0" fill="rgb(243,82,48)" rx="2" ry="2" />
<text  x="35.81" y="463.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (11 samples, 0.01%)</title><rect x="1174.6" y="261" width="0.1" height="15.0" fill="rgb(243,195,18)" rx="2" ry="2" />
<text  x="1177.58" y="271.5" ></text>
</g>
<g >
<title>receive_buf (16 samples, 0.01%)</title><rect x="1179.9" y="373" width="0.2" height="15.0" fill="rgb(213,191,25)" rx="2" ry="2" />
<text  x="1182.93" y="383.5" ></text>
</g>
<g >
<title>zio_nowait (11 samples, 0.01%)</title><rect x="1178.3" y="405" width="0.1" height="15.0" fill="rgb(219,200,13)" rx="2" ry="2" />
<text  x="1181.29" y="415.5" ></text>
</g>
<g >
<title>timekeeping_get_ns (91 samples, 0.07%)</title><rect x="35.4" y="325" width="0.8" height="15.0" fill="rgb(245,173,7)" rx="2" ry="2" />
<text  x="38.37" y="335.5" ></text>
</g>
<g >
<title>abd_iterate_func (16 samples, 0.01%)</title><rect x="1178.0" y="389" width="0.1" height="15.0" fill="rgb(216,117,39)" rx="2" ry="2" />
<text  x="1180.99" y="399.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (13 samples, 0.01%)</title><rect x="39.6" y="277" width="0.1" height="15.0" fill="rgb(216,167,26)" rx="2" ry="2" />
<text  x="42.63" y="287.5" ></text>
</g>
<g >
<title>archive/tar.(*regFileReader).Read (269 samples, 0.21%)</title><rect x="12.9" y="197" width="2.5" height="15.0" fill="rgb(253,57,11)" rx="2" ry="2" />
<text  x="15.95" y="207.5" ></text>
</g>
<g >
<title>[unknown] (30 samples, 0.02%)</title><rect x="32.0" y="469" width="0.2" height="15.0" fill="rgb(245,161,30)" rx="2" ry="2" />
<text  x="34.97" y="479.5" ></text>
</g>
<g >
<title>schedule (38 samples, 0.03%)</title><rect x="39.6" y="341" width="0.3" height="15.0" fill="rgb(232,159,26)" rx="2" ry="2" />
<text  x="42.59" y="351.5" ></text>
</g>
<g >
<title>syscall.Syscall6 (21 samples, 0.02%)</title><rect x="15.9" y="181" width="0.2" height="15.0" fill="rgb(246,5,28)" rx="2" ry="2" />
<text  x="18.95" y="191.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (54 samples, 0.04%)</title><rect x="26.7" y="373" width="0.5" height="15.0" fill="rgb(245,140,18)" rx="2" ry="2" />
<text  x="29.70" y="383.5" ></text>
</g>
<g >
<title>do_syscall_64 (40 samples, 0.03%)</title><rect x="17.6" y="469" width="0.4" height="15.0" fill="rgb(236,202,52)" rx="2" ry="2" />
<text  x="20.63" y="479.5" ></text>
</g>
<g >
<title>zio_done (52 samples, 0.04%)</title><rect x="1176.8" y="437" width="0.4" height="15.0" fill="rgb(246,229,24)" rx="2" ry="2" />
<text  x="1179.76" y="447.5" ></text>
</g>
<g >
<title>start_kernel (30,542 samples, 23.82%)</title><rect x="41.5" y="485" width="281.1" height="15.0" fill="rgb(220,6,5)" rx="2" ry="2" />
<text  x="44.48" y="495.5" >start_kernel</text>
</g>
<g >
<title>vdev_queue_io_to_issue (22 samples, 0.02%)</title><rect x="1177.3" y="405" width="0.2" height="15.0" fill="rgb(242,87,39)" rx="2" ry="2" />
<text  x="1180.29" y="415.5" ></text>
</g>
<g >
<title>do_futex (52 samples, 0.04%)</title><rect x="32.8" y="421" width="0.5" height="15.0" fill="rgb(245,73,12)" rx="2" ry="2" />
<text  x="35.82" y="431.5" ></text>
</g>
<g >
<title>napi_gro_receive (15 samples, 0.01%)</title><rect x="1179.9" y="357" width="0.2" height="15.0" fill="rgb(234,112,4)" rx="2" ry="2" />
<text  x="1182.93" y="367.5" ></text>
</g>
<g >
<title>handle_ept_misconfig (40 samples, 0.03%)</title><rect x="33.8" y="357" width="0.3" height="15.0" fill="rgb(232,115,49)" rx="2" ry="2" />
<text  x="36.77" y="367.5" ></text>
</g>
<g >
<title>ksys_read (17 samples, 0.01%)</title><rect x="1187.9" y="229" width="0.2" height="15.0" fill="rgb(207,78,2)" rx="2" ry="2" />
<text  x="1190.91" y="239.5" ></text>
</g>
<g >
<title>do_IRQ (17 samples, 0.01%)</title><rect x="1179.9" y="453" width="0.2" height="15.0" fill="rgb(208,34,25)" rx="2" ry="2" />
<text  x="1182.93" y="463.5" ></text>
</g>
<g >
<title>[zedbox] (1,008 samples, 0.79%)</title><rect x="1180.3" y="437" width="9.2" height="15.0" fill="rgb(228,124,49)" rx="2" ry="2" />
<text  x="1183.26" y="447.5" ></text>
</g>
<g >
<title>taskq_thread (21 samples, 0.02%)</title><rect x="18.1" y="469" width="0.2" height="15.0" fill="rgb(245,91,10)" rx="2" ry="2" />
<text  x="21.07" y="479.5" ></text>
</g>
<g >
<title>[memlogd] (14 samples, 0.01%)</title><rect x="21.0" y="453" width="0.1" height="15.0" fill="rgb(232,72,16)" rx="2" ry="2" />
<text  x="24.01" y="463.5" ></text>
</g>
<g >
<title>__kvm_io_bus_write (40 samples, 0.03%)</title><rect x="33.8" y="325" width="0.3" height="15.0" fill="rgb(254,167,24)" rx="2" ry="2" />
<text  x="36.77" y="335.5" ></text>
</g>
<g >
<title>zio_taskq_dispatch (18 samples, 0.01%)</title><rect x="1177.0" y="421" width="0.2" height="15.0" fill="rgb(252,181,28)" rx="2" ry="2" />
<text  x="1180.05" y="431.5" ></text>
</g>
<g >
<title>zfsdev_ioctl (16 samples, 0.01%)</title><rect x="1189.7" y="373" width="0.2" height="15.0" fill="rgb(247,119,16)" rx="2" ry="2" />
<text  x="1192.74" y="383.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive.openFile (35 samples, 0.03%)</title><rect x="15.9" y="229" width="0.3" height="15.0" fill="rgb(236,124,16)" rx="2" ry="2" />
<text  x="18.92" y="239.5" ></text>
</g>
<g >
<title>ret_from_intr (28 samples, 0.02%)</title><rect x="1174.4" y="405" width="0.3" height="15.0" fill="rgb(212,182,5)" rx="2" ry="2" />
<text  x="1177.44" y="415.5" ></text>
</g>
<g >
<title>kvm_vm_ioctl (29 samples, 0.02%)</title><rect x="40.3" y="389" width="0.3" height="15.0" fill="rgb(225,216,49)" rx="2" ry="2" />
<text  x="43.35" y="399.5" ></text>
</g>
<g >
<title>[newlogd] (31 samples, 0.02%)</title><rect x="21.4" y="421" width="0.3" height="15.0" fill="rgb(233,79,22)" rx="2" ry="2" />
<text  x="24.37" y="431.5" ></text>
</g>
<g >
<title>try_to_wake_up (44 samples, 0.03%)</title><rect x="32.9" y="373" width="0.4" height="15.0" fill="rgb(221,58,26)" rx="2" ry="2" />
<text  x="35.89" y="383.5" ></text>
</g>
<g >
<title>archive/tar.(*Reader).Read (270 samples, 0.21%)</title><rect x="12.9" y="213" width="2.5" height="15.0" fill="rgb(219,139,36)" rx="2" ry="2" />
<text  x="15.95" y="223.5" ></text>
</g>
<g >
<title>kernel_thread (17 samples, 0.01%)</title><rect x="20.7" y="469" width="0.1" height="15.0" fill="rgb(205,11,22)" rx="2" ry="2" />
<text  x="23.67" y="479.5" ></text>
</g>
<g >
<title>compress/gzip.(*Reader).Read (268 samples, 0.21%)</title><rect x="13.0" y="117" width="2.4" height="15.0" fill="rgb(248,117,48)" rx="2" ry="2" />
<text  x="15.95" y="127.5" ></text>
</g>
<g >
<title>[ld-musl-x86_64.so.1] (739 samples, 0.58%)</title><rect x="23.4" y="485" width="6.8" height="15.0" fill="rgb(233,218,0)" rx="2" ry="2" />
<text  x="26.41" y="495.5" ></text>
</g>
<g >
<title>do_syscall_64 (14 samples, 0.01%)</title><rect x="1188.3" y="277" width="0.2" height="15.0" fill="rgb(249,182,48)" rx="2" ry="2" />
<text  x="1191.33" y="287.5" ></text>
</g>
<g >
<title>do_IRQ (28 samples, 0.02%)</title><rect x="1174.4" y="389" width="0.3" height="15.0" fill="rgb(206,124,37)" rx="2" ry="2" />
<text  x="1177.44" y="399.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/diff/apply.(*fsApplier).Apply (432 samples, 0.34%)</title><rect x="12.7" y="341" width="4.0" height="15.0" fill="rgb(207,201,2)" rx="2" ry="2" />
<text  x="15.74" y="351.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (41 samples, 0.03%)</title><rect x="1174.0" y="389" width="0.4" height="15.0" fill="rgb(245,180,17)" rx="2" ry="2" />
<text  x="1176.99" y="399.5" ></text>
</g>
<g >
<title>wake_up_q (44 samples, 0.03%)</title><rect x="32.9" y="389" width="0.4" height="15.0" fill="rgb(254,5,11)" rx="2" ry="2" />
<text  x="35.89" y="399.5" ></text>
</g>
<g >
<title>taskq_thread_create (11 samples, 0.01%)</title><rect x="41.2" y="437" width="0.1" height="15.0" fill="rgb(252,80,31)" rx="2" ry="2" />
<text  x="44.23" y="447.5" ></text>
</g>
<g >
<title>vmx_vcpu_load (20 samples, 0.02%)</title><rect x="39.7" y="277" width="0.2" height="15.0" fill="rgb(218,221,39)" rx="2" ry="2" />
<text  x="42.75" y="287.5" ></text>
</g>
<g >
<title>[zedbox] (87 samples, 0.07%)</title><rect x="1186.2" y="197" width="0.8" height="15.0" fill="rgb(208,14,28)" rx="2" ry="2" />
<text  x="1189.18" y="207.5" ></text>
</g>
<g >
<title>[newlogd] (24 samples, 0.02%)</title><rect x="21.4" y="389" width="0.2" height="15.0" fill="rgb(236,25,44)" rx="2" ry="2" />
<text  x="24.40" y="399.5" ></text>
</g>
<g >
<title>taskq_thread (11 samples, 0.01%)</title><rect x="41.3" y="469" width="0.1" height="15.0" fill="rgb(212,167,49)" rx="2" ry="2" />
<text  x="44.33" y="479.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/gc/scheduler.(*gcScheduler).run (17 samples, 0.01%)</title><rect x="12.1" y="485" width="0.1" height="15.0" fill="rgb(253,75,0)" rx="2" ry="2" />
<text  x="15.08" y="495.5" ></text>
</g>
<g >
<title>[perf] (15 samples, 0.01%)</title><rect x="21.8" y="469" width="0.1" height="15.0" fill="rgb(244,62,26)" rx="2" ry="2" />
<text  x="24.81" y="479.5" ></text>
</g>
<g >
<title>do_syscall_64 (17 samples, 0.01%)</title><rect x="32.3" y="437" width="0.1" height="15.0" fill="rgb(205,206,30)" rx="2" ry="2" />
<text  x="35.29" y="447.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (21 samples, 0.02%)</title><rect x="22.4" y="325" width="0.2" height="15.0" fill="rgb(205,37,33)" rx="2" ry="2" />
<text  x="25.44" y="335.5" ></text>
</g>
<g >
<title>do_futex (16 samples, 0.01%)</title><rect x="1178.9" y="309" width="0.1" height="15.0" fill="rgb(247,85,26)" rx="2" ry="2" />
<text  x="1181.88" y="319.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).huffSym (51 samples, 0.04%)</title><rect x="14.7" y="53" width="0.5" height="15.0" fill="rgb(209,192,25)" rx="2" ry="2" />
<text  x="17.70" y="63.5" ></text>
</g>
<g >
<title>secondary_startup_64 (123,263 samples, 96.15%)</title><rect x="41.5" y="501" width="1134.5" height="15.0" fill="rgb(226,167,5)" rx="2" ry="2" />
<text  x="44.48" y="511.5" >secondary_startup_64</text>
</g>
<g >
<title>__cpuidle_text_start (92,573 samples, 72.21%)</title><rect x="322.6" y="437" width="852.1" height="15.0" fill="rgb(251,66,13)" rx="2" ry="2" />
<text  x="325.62" y="447.5" >__cpuidle_text_start</text>
</g>
<g >
<title>_do_fork (17 samples, 0.01%)</title><rect x="20.7" y="453" width="0.1" height="15.0" fill="rgb(254,202,31)" rx="2" ry="2" />
<text  x="23.67" y="463.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/api/services/content/v1._Content_Write_Handler (22 samples, 0.02%)</title><rect x="12.5" y="421" width="0.2" height="15.0" fill="rgb(217,145,54)" rx="2" ry="2" />
<text  x="15.51" y="431.5" ></text>
</g>
<g >
<title>vfs_statx (16 samples, 0.01%)</title><rect x="32.3" y="405" width="0.1" height="15.0" fill="rgb(217,220,2)" rx="2" ry="2" />
<text  x="35.30" y="415.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/github.com/containerd/continuity/fs.walkLinks (19 samples, 0.01%)</title><rect x="16.4" y="229" width="0.2" height="15.0" fill="rgb(211,186,9)" rx="2" ry="2" />
<text  x="19.41" y="239.5" ></text>
</g>
<g >
<title>__raw_spin_unlock_irq (21 samples, 0.02%)</title><rect x="22.4" y="341" width="0.2" height="15.0" fill="rgb(246,110,52)" rx="2" ry="2" />
<text  x="25.44" y="351.5" ></text>
</g>
<g >
<title>z_wr_int (122 samples, 0.10%)</title><rect x="1176.6" y="517" width="1.1" height="15.0" fill="rgb(222,119,3)" rx="2" ry="2" />
<text  x="1179.56" y="527.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/github.com/containerd/continuity/fs.walkLinks (11 samples, 0.01%)</title><rect x="16.5" y="149" width="0.1" height="15.0" fill="rgb(209,72,48)" rx="2" ry="2" />
<text  x="19.47" y="159.5" ></text>
</g>
<g >
<title>vdev_queue_io_done (43 samples, 0.03%)</title><rect x="1177.3" y="421" width="0.4" height="15.0" fill="rgb(222,156,33)" rx="2" ry="2" />
<text  x="1180.27" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (32 samples, 0.02%)</title><rect x="15.4" y="165" width="0.3" height="15.0" fill="rgb(236,144,1)" rx="2" ry="2" />
<text  x="18.45" y="175.5" ></text>
</g>
<g >
<title>[unknown] (49 samples, 0.04%)</title><rect x="1178.8" y="485" width="0.4" height="15.0" fill="rgb(219,72,10)" rx="2" ry="2" />
<text  x="1181.76" y="495.5" ></text>
</g>
<g >
<title>kvm_skip_emulated_instruction (40 samples, 0.03%)</title><rect x="34.9" y="357" width="0.4" height="15.0" fill="rgb(231,52,45)" rx="2" ry="2" />
<text  x="37.90" y="367.5" ></text>
</g>
<g >
<title>__do_sys_ppoll (500 samples, 0.39%)</title><rect x="24.2" y="437" width="4.6" height="15.0" fill="rgb(234,75,23)" rx="2" ry="2" />
<text  x="27.24" y="447.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (23 samples, 0.02%)</title><rect x="1188.7" y="325" width="0.2" height="15.0" fill="rgb(236,47,8)" rx="2" ry="2" />
<text  x="1191.68" y="335.5" ></text>
</g>
<g >
<title>test_bit (11 samples, 0.01%)</title><rect x="38.5" y="309" width="0.1" height="15.0" fill="rgb(252,99,1)" rx="2" ry="2" />
<text  x="41.49" y="319.5" ></text>
</g>
<g >
<title>kvm_apic_has_interrupt (56 samples, 0.04%)</title><rect x="37.7" y="293" width="0.5" height="15.0" fill="rgb(227,148,21)" rx="2" ry="2" />
<text  x="40.70" y="303.5" ></text>
</g>
<g >
<title>__do_sys_futex (52 samples, 0.04%)</title><rect x="32.8" y="437" width="0.5" height="15.0" fill="rgb(251,81,11)" rx="2" ry="2" />
<text  x="35.82" y="447.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).huffmanBlock (142 samples, 0.11%)</title><rect x="13.0" y="85" width="1.3" height="15.0" fill="rgb(224,188,33)" rx="2" ry="2" />
<text  x="16.01" y="95.5" ></text>
</g>
<g >
<title>[zedbox] (65 samples, 0.05%)</title><rect x="1186.4" y="181" width="0.6" height="15.0" fill="rgb(213,168,23)" rx="2" ry="2" />
<text  x="1189.36" y="191.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (115 samples, 0.09%)</title><rect x="1175.0" y="373" width="1.0" height="15.0" fill="rgb(234,75,17)" rx="2" ry="2" />
<text  x="1177.95" y="383.5" ></text>
</g>
<g >
<title>do_syscall_64 (16 samples, 0.01%)</title><rect x="1188.9" y="325" width="0.2" height="15.0" fill="rgb(227,58,38)" rx="2" ry="2" />
<text  x="1191.90" y="335.5" ></text>
</g>
<g >
<title>runtime.gcDrain (32 samples, 0.02%)</title><rect x="10.6" y="437" width="0.2" height="15.0" fill="rgb(231,169,8)" rx="2" ry="2" />
<text  x="13.55" y="447.5" ></text>
</g>
<g >
<title>__fget (82 samples, 0.06%)</title><rect x="25.1" y="389" width="0.7" height="15.0" fill="rgb(247,123,52)" rx="2" ry="2" />
<text  x="28.10" y="399.5" ></text>
</g>
<g >
<title>ksys_read (14 samples, 0.01%)</title><rect x="29.6" y="437" width="0.1" height="15.0" fill="rgb(225,72,16)" rx="2" ry="2" />
<text  x="32.58" y="447.5" ></text>
</g>
<g >
<title>[memlogd] (12 samples, 0.01%)</title><rect x="21.1" y="469" width="0.1" height="15.0" fill="rgb(250,185,40)" rx="2" ry="2" />
<text  x="24.14" y="479.5" ></text>
</g>
<g >
<title>vmx_read_guest_seg_ar (17 samples, 0.01%)</title><rect x="35.1" y="245" width="0.1" height="15.0" fill="rgb(236,138,49)" rx="2" ry="2" />
<text  x="38.08" y="255.5" ></text>
</g>
<g >
<title>ret_from_fork (15 samples, 0.01%)</title><rect x="41.2" y="501" width="0.1" height="15.0" fill="rgb(228,168,12)" rx="2" ry="2" />
<text  x="44.19" y="511.5" ></text>
</g>
<g >
<title>[unknown] (74 samples, 0.06%)</title><rect x="10.3" y="485" width="0.7" height="15.0" fill="rgb(243,164,33)" rx="2" ry="2" />
<text  x="13.32" y="495.5" ></text>
</g>
<g >
<title>__srcu_read_unlock (23 samples, 0.02%)</title><rect x="36.7" y="325" width="0.2" height="15.0" fill="rgb(247,208,37)" rx="2" ry="2" />
<text  x="39.71" y="335.5" ></text>
</g>
<g >
<title>kthread (94 samples, 0.07%)</title><rect x="1177.7" y="485" width="0.9" height="15.0" fill="rgb(243,45,31)" rx="2" ry="2" />
<text  x="1180.73" y="495.5" ></text>
</g>
<g >
<title>[zedbox] (1,033 samples, 0.81%)</title><rect x="1180.1" y="501" width="9.5" height="15.0" fill="rgb(208,214,27)" rx="2" ry="2" />
<text  x="1183.10" y="511.5" ></text>
</g>
<g >
<title>zpl_read_common_iovec (14 samples, 0.01%)</title><rect x="32.0" y="325" width="0.1" height="15.0" fill="rgb(239,204,36)" rx="2" ry="2" />
<text  x="34.98" y="335.5" ></text>
</g>
<g >
<title>[zedbox] (361 samples, 0.28%)</title><rect x="1184.7" y="277" width="3.4" height="15.0" fill="rgb(213,221,48)" rx="2" ry="2" />
<text  x="1187.74" y="287.5" ></text>
</g>
<g >
<title>ioctl (787 samples, 0.61%)</title><rect x="33.5" y="501" width="7.2" height="15.0" fill="rgb(224,221,22)" rx="2" ry="2" />
<text  x="36.45" y="511.5" ></text>
</g>
<g >
<title>kvm_irq_delivery_to_apic_fast (26 samples, 0.02%)</title><rect x="40.4" y="325" width="0.2" height="15.0" fill="rgb(221,179,33)" rx="2" ry="2" />
<text  x="43.36" y="335.5" ></text>
</g>
<g >
<title>[zedbox] (43 samples, 0.03%)</title><rect x="1186.5" y="165" width="0.4" height="15.0" fill="rgb(240,112,54)" rx="2" ry="2" />
<text  x="1189.52" y="175.5" ></text>
</g>
<g >
<title>kvm_lapic_reg_write (18 samples, 0.01%)</title><rect x="34.4" y="293" width="0.1" height="15.0" fill="rgb(238,86,7)" rx="2" ry="2" />
<text  x="37.38" y="303.5" ></text>
</g>
<g >
<title>sem_post (55 samples, 0.04%)</title><rect x="32.8" y="485" width="0.5" height="15.0" fill="rgb(219,3,47)" rx="2" ry="2" />
<text  x="35.80" y="495.5" ></text>
</g>
<g >
<title>vfs_writev (20 samples, 0.02%)</title><rect x="22.7" y="437" width="0.2" height="15.0" fill="rgb(235,229,4)" rx="2" ry="2" />
<text  x="25.73" y="447.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (41 samples, 0.03%)</title><rect x="1174.0" y="405" width="0.4" height="15.0" fill="rgb(221,62,7)" rx="2" ry="2" />
<text  x="1176.99" y="415.5" ></text>
</g>
<g >
<title>[zedbox] (16 samples, 0.01%)</title><rect x="1186.6" y="117" width="0.2" height="15.0" fill="rgb(234,14,9)" rx="2" ry="2" />
<text  x="1189.65" y="127.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (54 samples, 0.04%)</title><rect x="32.8" y="469" width="0.5" height="15.0" fill="rgb(253,217,22)" rx="2" ry="2" />
<text  x="35.81" y="479.5" ></text>
</g>
<g >
<title>kvm_set_msi (26 samples, 0.02%)</title><rect x="40.4" y="357" width="0.2" height="15.0" fill="rgb(233,44,18)" rx="2" ry="2" />
<text  x="43.36" y="367.5" ></text>
</g>
<g >
<title>schedule (18 samples, 0.01%)</title><rect x="28.4" y="373" width="0.1" height="15.0" fill="rgb(232,98,10)" rx="2" ry="2" />
<text  x="31.35" y="383.5" ></text>
</g>
<g >
<title>[unknown] (95 samples, 0.07%)</title><rect x="31.6" y="485" width="0.9" height="15.0" fill="rgb(229,105,5)" rx="2" ry="2" />
<text  x="34.63" y="495.5" ></text>
</g>
<g >
<title>dnsmasq (113 samples, 0.09%)</title><rect x="17.0" y="517" width="1.1" height="15.0" fill="rgb(210,198,31)" rx="2" ry="2" />
<text  x="20.03" y="527.5" ></text>
</g>
<g >
<title>vfs_ioctl (764 samples, 0.60%)</title><rect x="33.6" y="405" width="7.0" height="15.0" fill="rgb(250,98,41)" rx="2" ry="2" />
<text  x="36.58" y="415.5" ></text>
</g>
<g >
<title>__do_sys_futex (34 samples, 0.03%)</title><rect x="22.4" y="453" width="0.3" height="15.0" fill="rgb(230,159,21)" rx="2" ry="2" />
<text  x="25.38" y="463.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.01%)</title><rect x="1188.9" y="341" width="0.2" height="15.0" fill="rgb(250,7,38)" rx="2" ry="2" />
<text  x="1191.90" y="351.5" ></text>
</g>
<g >
<title>do_sys_poll (488 samples, 0.38%)</title><rect x="24.2" y="421" width="4.5" height="15.0" fill="rgb(244,76,33)" rx="2" ry="2" />
<text  x="27.24" y="431.5" ></text>
</g>
<g >
<title>qemu-system-x86 (2,058 samples, 1.61%)</title><rect x="22.1" y="517" width="18.9" height="15.0" fill="rgb(228,47,2)" rx="2" ry="2" />
<text  x="25.07" y="527.5" ></text>
</g>
<g >
<title>[unknown] (190 samples, 0.15%)</title><rect x="10.3" y="501" width="1.8" height="15.0" fill="rgb(230,129,48)" rx="2" ry="2" />
<text  x="13.32" y="511.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/api/services/diff/v1._Diff_Apply_Handler (432 samples, 0.34%)</title><rect x="12.7" y="437" width="4.0" height="15.0" fill="rgb(251,98,34)" rx="2" ry="2" />
<text  x="15.74" y="447.5" ></text>
</g>
<g >
<title>[zedbox] (499 samples, 0.39%)</title><rect x="1183.9" y="309" width="4.6" height="15.0" fill="rgb(205,68,38)" rx="2" ry="2" />
<text  x="1186.91" y="319.5" ></text>
</g>
<g >
<title>kvm_send_userspace_msi (26 samples, 0.02%)</title><rect x="40.4" y="373" width="0.2" height="15.0" fill="rgb(206,156,41)" rx="2" ry="2" />
<text  x="43.36" y="383.5" ></text>
</g>
<g >
<title>zio_compress_data (20 samples, 0.02%)</title><rect x="1178.4" y="421" width="0.2" height="15.0" fill="rgb(241,158,5)" rx="2" ry="2" />
<text  x="1181.41" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.01%)</title><rect x="31.6" y="453" width="0.2" height="15.0" fill="rgb(245,215,47)" rx="2" ry="2" />
<text  x="34.65" y="463.5" ></text>
</g>
<g >
<title>do_syscall_64 (14 samples, 0.01%)</title><rect x="31.6" y="437" width="0.2" height="15.0" fill="rgb(211,15,4)" rx="2" ry="2" />
<text  x="34.65" y="447.5" ></text>
</g>
<g >
<title>[memlogd] (15 samples, 0.01%)</title><rect x="21.0" y="485" width="0.1" height="15.0" fill="rgb(226,221,17)" rx="2" ry="2" />
<text  x="24.00" y="495.5" ></text>
</g>
<g >
<title>do_filp_open (20 samples, 0.02%)</title><rect x="16.0" y="117" width="0.1" height="15.0" fill="rgb(243,196,2)" rx="2" ry="2" />
<text  x="18.96" y="127.5" ></text>
</g>
<g >
<title>kthreadd (18 samples, 0.01%)</title><rect x="20.7" y="485" width="0.1" height="15.0" fill="rgb(221,91,11)" rx="2" ry="2" />
<text  x="23.67" y="495.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/golang.org/x/net/http2.(*Framer).ReadFrame (12 samples, 0.01%)</title><rect x="12.3" y="437" width="0.1" height="15.0" fill="rgb(249,163,17)" rx="2" ry="2" />
<text  x="15.34" y="447.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (650 samples, 0.51%)</title><rect x="24.2" y="469" width="6.0" height="15.0" fill="rgb(248,9,43)" rx="2" ry="2" />
<text  x="27.23" y="479.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.01%)</title><rect x="1187.1" y="213" width="0.1" height="15.0" fill="rgb(249,61,35)" rx="2" ry="2" />
<text  x="1190.06" y="223.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (62 samples, 0.05%)</title><rect x="22.4" y="485" width="0.6" height="15.0" fill="rgb(234,140,36)" rx="2" ry="2" />
<text  x="25.38" y="495.5" ></text>
</g>
<g >
<title>cpu_startup_entry (30,542 samples, 23.82%)</title><rect x="41.5" y="469" width="281.1" height="15.0" fill="rgb(244,88,15)" rx="2" ry="2" />
<text  x="44.48" y="479.5" >cpu_startup_entry</text>
</g>
<g >
<title>futex_wait (33 samples, 0.03%)</title><rect x="22.4" y="421" width="0.3" height="15.0" fill="rgb(221,45,22)" rx="2" ry="2" />
<text  x="25.39" y="431.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive.Apply (425 samples, 0.33%)</title><rect x="12.8" y="277" width="3.9" height="15.0" fill="rgb(246,79,14)" rx="2" ry="2" />
<text  x="15.75" y="287.5" ></text>
</g>
<g >
<title>zio_execute (15 samples, 0.01%)</title><rect x="1178.6" y="453" width="0.1" height="15.0" fill="rgb(210,150,12)" rx="2" ry="2" />
<text  x="1181.60" y="463.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (11 samples, 0.01%)</title><rect x="322.1" y="357" width="0.1" height="15.0" fill="rgb(233,50,21)" rx="2" ry="2" />
<text  x="325.08" y="367.5" ></text>
</g>
<g >
<title>[perf] (15 samples, 0.01%)</title><rect x="21.8" y="437" width="0.1" height="15.0" fill="rgb(252,110,25)" rx="2" ry="2" />
<text  x="24.81" y="447.5" ></text>
</g>
<g >
<title>ksys_write (39 samples, 0.03%)</title><rect x="29.7" y="437" width="0.4" height="15.0" fill="rgb(226,101,42)" rx="2" ry="2" />
<text  x="32.71" y="447.5" ></text>
</g>
<g >
<title>net_rx_action (11 samples, 0.01%)</title><rect x="322.1" y="341" width="0.1" height="15.0" fill="rgb(251,93,27)" rx="2" ry="2" />
<text  x="325.08" y="351.5" ></text>
</g>
<g >
<title>[zedbox] (271 samples, 0.21%)</title><rect x="1185.2" y="261" width="2.5" height="15.0" fill="rgb(230,113,34)" rx="2" ry="2" />
<text  x="1188.20" y="271.5" ></text>
</g>
<g >
<title>do_iter_read (15 samples, 0.01%)</title><rect x="32.0" y="373" width="0.1" height="15.0" fill="rgb(246,55,28)" rx="2" ry="2" />
<text  x="34.97" y="383.5" ></text>
</g>
<g >
<title>[memlogd] (12 samples, 0.01%)</title><rect x="21.0" y="389" width="0.1" height="15.0" fill="rgb(244,155,8)" rx="2" ry="2" />
<text  x="24.02" y="399.5" ></text>
</g>
<g >
<title>bufio.(*Reader).ReadByte (18 samples, 0.01%)</title><rect x="14.1" y="53" width="0.2" height="15.0" fill="rgb(252,39,4)" rx="2" ry="2" />
<text  x="17.10" y="63.5" ></text>
</g>
<g >
<title>lz4_compress_zfs (20 samples, 0.02%)</title><rect x="1178.4" y="405" width="0.2" height="15.0" fill="rgb(227,41,43)" rx="2" ry="2" />
<text  x="1181.41" y="415.5" ></text>
</g>
<g >
<title>__sched_text_start (120 samples, 0.09%)</title><rect x="1174.9" y="421" width="1.1" height="15.0" fill="rgb(213,108,26)" rx="2" ry="2" />
<text  x="1177.90" y="431.5" ></text>
</g>
<g >
<title>abd_copy_off_cb (17 samples, 0.01%)</title><rect x="1177.3" y="357" width="0.2" height="15.0" fill="rgb(253,120,26)" rx="2" ry="2" />
<text  x="1180.31" y="367.5" ></text>
</g>
<g >
<title>[zedbox] (149 samples, 0.12%)</title><rect x="1185.9" y="229" width="1.3" height="15.0" fill="rgb(241,69,48)" rx="2" ry="2" />
<text  x="1188.87" y="239.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (21 samples, 0.02%)</title><rect x="1178.9" y="357" width="0.2" height="15.0" fill="rgb(220,3,31)" rx="2" ry="2" />
<text  x="1181.88" y="367.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (15 samples, 0.01%)</title><rect x="30.1" y="453" width="0.1" height="15.0" fill="rgb(208,22,19)" rx="2" ry="2" />
<text  x="33.07" y="463.5" ></text>
</g>
<g >
<title>[perf] (15 samples, 0.01%)</title><rect x="21.8" y="357" width="0.1" height="15.0" fill="rgb(211,168,16)" rx="2" ry="2" />
<text  x="24.81" y="367.5" ></text>
</g>
<g >
<title>[zedbox] (828 samples, 0.65%)</title><rect x="1181.8" y="389" width="7.6" height="15.0" fill="rgb(229,13,21)" rx="2" ry="2" />
<text  x="1184.75" y="399.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (17 samples, 0.01%)</title><rect x="28.4" y="309" width="0.1" height="15.0" fill="rgb(228,182,24)" rx="2" ry="2" />
<text  x="31.36" y="319.5" ></text>
</g>
<g >
<title>[memlogd] (15 samples, 0.01%)</title><rect x="21.0" y="501" width="0.1" height="15.0" fill="rgb(215,61,22)" rx="2" ry="2" />
<text  x="24.00" y="511.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.01%)</title><rect x="1188.3" y="293" width="0.2" height="15.0" fill="rgb(235,152,32)" rx="2" ry="2" />
<text  x="1191.33" y="303.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/services/content/contentserver.(*service).Write (22 samples, 0.02%)</title><rect x="12.5" y="405" width="0.2" height="15.0" fill="rgb(245,65,24)" rx="2" ry="2" />
<text  x="15.51" y="415.5" ></text>
</g>
<g >
<title>kvm_io_bus_write (40 samples, 0.03%)</title><rect x="33.8" y="341" width="0.3" height="15.0" fill="rgb(246,204,35)" rx="2" ry="2" />
<text  x="36.77" y="351.5" ></text>
</g>
<g >
<title>__do_sys_futex (16 samples, 0.01%)</title><rect x="1178.9" y="325" width="0.1" height="15.0" fill="rgb(235,121,41)" rx="2" ry="2" />
<text  x="1181.88" y="335.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/github.com/containerd/continuity/fs.RootPath (20 samples, 0.02%)</title><rect x="16.4" y="245" width="0.2" height="15.0" fill="rgb(254,212,54)" rx="2" ry="2" />
<text  x="19.41" y="255.5" ></text>
</g>
<g >
<title>[qemu-system-x86_64] (103 samples, 0.08%)</title><rect x="30.7" y="485" width="0.9" height="15.0" fill="rgb(241,96,15)" rx="2" ry="2" />
<text  x="33.68" y="495.5" ></text>
</g>
<g >
<title>__raw_spin_unlock_irq (32 samples, 0.02%)</title><rect x="29.8" y="389" width="0.2" height="15.0" fill="rgb(237,227,4)" rx="2" ry="2" />
<text  x="32.75" y="399.5" ></text>
</g>
<g >
<title>arc_write_ready (25 samples, 0.02%)</title><rect x="1178.0" y="421" width="0.2" height="15.0" fill="rgb(232,180,44)" rx="2" ry="2" />
<text  x="1180.99" y="431.5" ></text>
</g>
<g >
<title>[newlogd] (11 samples, 0.01%)</title><rect x="21.4" y="373" width="0.1" height="15.0" fill="rgb(240,98,39)" rx="2" ry="2" />
<text  x="24.44" y="383.5" ></text>
</g>
<g >
<title>ret_from_fork (28 samples, 0.02%)</title><rect x="20.6" y="501" width="0.3" height="15.0" fill="rgb(209,97,14)" rx="2" ry="2" />
<text  x="23.59" y="511.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker.func2 (33 samples, 0.03%)</title><rect x="10.6" y="453" width="0.3" height="15.0" fill="rgb(227,129,16)" rx="2" ry="2" />
<text  x="13.55" y="463.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (34 samples, 0.03%)</title><rect x="17.7" y="453" width="0.3" height="15.0" fill="rgb(214,181,52)" rx="2" ry="2" />
<text  x="20.69" y="463.5" ></text>
</g>
<g >
<title>ret_from_fork (11 samples, 0.01%)</title><rect x="41.3" y="501" width="0.1" height="15.0" fill="rgb(242,191,40)" rx="2" ry="2" />
<text  x="44.33" y="511.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (766 samples, 0.60%)</title><rect x="33.6" y="453" width="7.0" height="15.0" fill="rgb(240,150,52)" rx="2" ry="2" />
<text  x="36.56" y="463.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (17 samples, 0.01%)</title><rect x="40.4" y="245" width="0.1" height="15.0" fill="rgb(218,55,4)" rx="2" ry="2" />
<text  x="43.39" y="255.5" ></text>
</g>
<g >
<title>kvm_vcpu_ioctl (733 samples, 0.57%)</title><rect x="33.6" y="389" width="6.7" height="15.0" fill="rgb(212,183,1)" rx="2" ry="2" />
<text  x="36.60" y="399.5" ></text>
</g>
<g >
<title>do_idle (30,542 samples, 23.82%)</title><rect x="41.5" y="453" width="281.1" height="15.0" fill="rgb(246,154,29)" rx="2" ry="2" />
<text  x="44.48" y="463.5" >do_idle</text>
</g>
<g >
<title>ret_from_fork (21 samples, 0.02%)</title><rect x="18.1" y="501" width="0.2" height="15.0" fill="rgb(208,95,52)" rx="2" ry="2" />
<text  x="21.07" y="511.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (36 samples, 0.03%)</title><rect x="33.8" y="277" width="0.3" height="15.0" fill="rgb(212,116,44)" rx="2" ry="2" />
<text  x="36.78" y="287.5" ></text>
</g>
<g >
<title>abd_copy_off (17 samples, 0.01%)</title><rect x="1177.3" y="389" width="0.2" height="15.0" fill="rgb(227,43,25)" rx="2" ry="2" />
<text  x="1180.31" y="399.5" ></text>
</g>
<g >
<title>irq_exit (28 samples, 0.02%)</title><rect x="1174.4" y="373" width="0.3" height="15.0" fill="rgb(242,137,32)" rx="2" ry="2" />
<text  x="1177.44" y="383.5" ></text>
</g>
<g >
<title>syscall.Syscall6 (11 samples, 0.01%)</title><rect x="16.3" y="213" width="0.1" height="15.0" fill="rgb(206,197,6)" rx="2" ry="2" />
<text  x="19.27" y="223.5" ></text>
</g>
<g >
<title>do_filp_open (33 samples, 0.03%)</title><rect x="29.2" y="421" width="0.3" height="15.0" fill="rgb(211,78,51)" rx="2" ry="2" />
<text  x="32.18" y="431.5" ></text>
</g>
<g >
<title>do_syscall_64 (27 samples, 0.02%)</title><rect x="1187.2" y="213" width="0.3" height="15.0" fill="rgb(225,81,53)" rx="2" ry="2" />
<text  x="1190.24" y="223.5" ></text>
</g>
<g >
<title>[perf] (15 samples, 0.01%)</title><rect x="21.8" y="405" width="0.1" height="15.0" fill="rgb(222,71,28)" rx="2" ry="2" />
<text  x="24.81" y="415.5" ></text>
</g>
<g >
<title>all (128,201 samples, 100%)</title><rect x="10.0" y="533" width="1180.0" height="15.0" fill="rgb(253,213,44)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>dmu_read_uio_dnode (12 samples, 0.01%)</title><rect x="32.0" y="277" width="0.1" height="15.0" fill="rgb(234,171,6)" rx="2" ry="2" />
<text  x="34.98" y="287.5" ></text>
</g>
<g >
<title>schedule (21 samples, 0.02%)</title><rect x="22.4" y="389" width="0.2" height="15.0" fill="rgb(226,184,12)" rx="2" ry="2" />
<text  x="25.44" y="399.5" ></text>
</g>
<g >
<title>futex_wake (52 samples, 0.04%)</title><rect x="32.8" y="405" width="0.5" height="15.0" fill="rgb(227,10,38)" rx="2" ry="2" />
<text  x="35.82" y="415.5" ></text>
</g>
<g >
<title>[zedbox] (1,017 samples, 0.79%)</title><rect x="1180.2" y="453" width="9.3" height="15.0" fill="rgb(220,104,38)" rx="2" ry="2" />
<text  x="1183.19" y="463.5" ></text>
</g>
<g >
<title>z_wr_iss_h (15 samples, 0.01%)</title><rect x="1178.6" y="517" width="0.1" height="15.0" fill="rgb(230,99,50)" rx="2" ry="2" />
<text  x="1181.60" y="527.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/services/diff.(*local).Apply (432 samples, 0.34%)</title><rect x="12.7" y="373" width="4.0" height="15.0" fill="rgb(243,63,17)" rx="2" ry="2" />
<text  x="15.74" y="383.5" ></text>
</g>
<g >
<title>runtime.goexit (529 samples, 0.41%)</title><rect x="12.1" y="501" width="4.8" height="15.0" fill="rgb(218,71,38)" rx="2" ry="2" />
<text  x="15.08" y="511.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.01%)</title><rect x="1189.4" y="389" width="0.1" height="15.0" fill="rgb(216,92,31)" rx="2" ry="2" />
<text  x="1192.37" y="399.5" ></text>
</g>
<g >
<title>zio_vdev_io_start (12 samples, 0.01%)</title><rect x="1178.3" y="437" width="0.1" height="15.0" fill="rgb(228,42,20)" rx="2" ry="2" />
<text  x="1181.29" y="447.5" ></text>
</g>
<g >
<title>poll_schedule_timeout.constprop.9 (30 samples, 0.02%)</title><rect x="28.2" y="405" width="0.3" height="15.0" fill="rgb(213,152,27)" rx="2" ry="2" />
<text  x="31.24" y="415.5" ></text>
</g>
<g >
<title>zio_nowait (13 samples, 0.01%)</title><rect x="1177.5" y="405" width="0.2" height="15.0" fill="rgb(210,82,54)" rx="2" ry="2" />
<text  x="1180.55" y="415.5" ></text>
</g>
<g >
<title>[ld-musl-x86_64.so.1] (15 samples, 0.01%)</title><rect x="21.8" y="485" width="0.1" height="15.0" fill="rgb(253,183,17)" rx="2" ry="2" />
<text  x="24.81" y="495.5" ></text>
</g>
<g >
<title>__apic_accept_irq (22 samples, 0.02%)</title><rect x="40.4" y="309" width="0.2" height="15.0" fill="rgb(217,118,50)" rx="2" ry="2" />
<text  x="43.38" y="319.5" ></text>
</g>
<g >
<title>crypto/sha256.block (115 samples, 0.09%)</title><rect x="11.0" y="485" width="1.1" height="15.0" fill="rgb(213,60,5)" rx="2" ry="2" />
<text  x="14.00" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.01%)</title><rect x="1179.1" y="389" width="0.1" height="15.0" fill="rgb(243,162,26)" rx="2" ry="2" />
<text  x="1182.07" y="399.5" ></text>
</g>
<g >
<title>eventfd_poll (144 samples, 0.11%)</title><rect x="25.9" y="405" width="1.3" height="15.0" fill="rgb(253,84,35)" rx="2" ry="2" />
<text  x="28.91" y="415.5" ></text>
</g>
<g >
<title>[ld-musl-x86_64.so.1] (15 samples, 0.01%)</title><rect x="32.0" y="453" width="0.1" height="15.0" fill="rgb(215,173,41)" rx="2" ry="2" />
<text  x="34.97" y="463.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive/compression.(*readCloserWrapper).Read (268 samples, 0.21%)</title><rect x="13.0" y="133" width="2.4" height="15.0" fill="rgb(220,66,42)" rx="2" ry="2" />
<text  x="15.95" y="143.5" ></text>
</g>
<g >
<title>[newlogd] (32 samples, 0.02%)</title><rect x="21.4" y="453" width="0.3" height="15.0" fill="rgb(215,178,24)" rx="2" ry="2" />
<text  x="24.36" y="463.5" ></text>
</g>
<g >
<title>zio_ready (29 samples, 0.02%)</title><rect x="1178.0" y="437" width="0.3" height="15.0" fill="rgb(210,195,36)" rx="2" ry="2" />
<text  x="1180.99" y="447.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (41 samples, 0.03%)</title><rect x="17.6" y="485" width="0.4" height="15.0" fill="rgb(228,152,45)" rx="2" ry="2" />
<text  x="20.63" y="495.5" ></text>
</g>
<g >
<title>net_rx_action (14 samples, 0.01%)</title><rect x="1174.6" y="341" width="0.1" height="15.0" fill="rgb(239,108,43)" rx="2" ry="2" />
<text  x="1177.56" y="351.5" ></text>
</g>
<g >
<title>__do_sys_newfstatat (17 samples, 0.01%)</title><rect x="32.3" y="421" width="0.1" height="15.0" fill="rgb(226,102,51)" rx="2" ry="2" />
<text  x="35.29" y="431.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/github.com/containerd/continuity/fs.walkLinks (19 samples, 0.01%)</title><rect x="16.4" y="213" width="0.2" height="15.0" fill="rgb(210,159,14)" rx="2" ry="2" />
<text  x="19.41" y="223.5" ></text>
</g>
<g >
<title>kvm_irq_delivery_to_apic (14 samples, 0.01%)</title><rect x="34.4" y="277" width="0.1" height="15.0" fill="rgb(225,34,18)" rx="2" ry="2" />
<text  x="37.38" y="287.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/diff/apply.(*readCounter).Read (269 samples, 0.21%)</title><rect x="12.9" y="181" width="2.5" height="15.0" fill="rgb(206,226,4)" rx="2" ry="2" />
<text  x="15.95" y="191.5" ></text>
</g>
<g >
<title>napi_gro_receive (11 samples, 0.01%)</title><rect x="1174.6" y="293" width="0.1" height="15.0" fill="rgb(214,226,36)" rx="2" ry="2" />
<text  x="1177.58" y="303.5" ></text>
</g>
<g >
<title>zio_execute (89 samples, 0.07%)</title><rect x="1177.8" y="453" width="0.8" height="15.0" fill="rgb(217,136,25)" rx="2" ry="2" />
<text  x="1180.78" y="463.5" ></text>
</g>
<g >
<title>do_IRQ (11 samples, 0.01%)</title><rect x="322.1" y="389" width="0.1" height="15.0" fill="rgb(217,193,27)" rx="2" ry="2" />
<text  x="325.08" y="399.5" ></text>
</g>
<g >
<title>abd_iterate_func2 (17 samples, 0.01%)</title><rect x="1177.3" y="373" width="0.2" height="15.0" fill="rgb(207,145,45)" rx="2" ry="2" />
<text  x="1180.31" y="383.5" ></text>
</g>
<g >
<title>kthread (15 samples, 0.01%)</title><rect x="41.2" y="485" width="0.1" height="15.0" fill="rgb(248,103,21)" rx="2" ry="2" />
<text  x="44.19" y="495.5" ></text>
</g>
<g >
<title>do_vfs_ioctl (16 samples, 0.01%)</title><rect x="1189.7" y="405" width="0.2" height="15.0" fill="rgb(219,99,5)" rx="2" ry="2" />
<text  x="1192.74" y="415.5" ></text>
</g>
<g >
<title>finish_task_switch (37 samples, 0.03%)</title><rect x="39.6" y="309" width="0.3" height="15.0" fill="rgb(227,216,21)" rx="2" ry="2" />
<text  x="42.60" y="319.5" ></text>
</g>
<g >
<title>vmx_set_msr (20 samples, 0.02%)</title><rect x="34.4" y="325" width="0.2" height="15.0" fill="rgb(208,20,40)" rx="2" ry="2" />
<text  x="37.38" y="335.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (55 samples, 0.04%)</title><rect x="26.7" y="389" width="0.5" height="15.0" fill="rgb(210,137,20)" rx="2" ry="2" />
<text  x="29.69" y="399.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/github.com/grpc-ecosystem/go-grpc-prometheus.(*ServerMetrics).UnaryServerInterceptor.func1 (432 samples, 0.34%)</title><rect x="12.7" y="421" width="4.0" height="15.0" fill="rgb(216,46,0)" rx="2" ry="2" />
<text  x="15.74" y="431.5" ></text>
</g>
<g >
<title>__sched_text_start (37 samples, 0.03%)</title><rect x="39.6" y="325" width="0.3" height="15.0" fill="rgb(233,188,48)" rx="2" ry="2" />
<text  x="42.60" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (775 samples, 0.60%)</title><rect x="33.6" y="485" width="7.1" height="15.0" fill="rgb(237,103,27)" rx="2" ry="2" />
<text  x="36.56" y="495.5" ></text>
</g>
<g >
<title>do_preadv (15 samples, 0.01%)</title><rect x="32.0" y="405" width="0.1" height="15.0" fill="rgb(238,104,53)" rx="2" ry="2" />
<text  x="34.97" y="415.5" ></text>
</g>
<g >
<title>[zedbox] (108 samples, 0.08%)</title><rect x="1186.1" y="213" width="1.0" height="15.0" fill="rgb(235,61,44)" rx="2" ry="2" />
<text  x="1189.07" y="223.5" ></text>
</g>
<g >
<title>zio_execute (102 samples, 0.08%)</title><rect x="1176.7" y="453" width="1.0" height="15.0" fill="rgb(206,54,7)" rx="2" ry="2" />
<text  x="1179.75" y="463.5" ></text>
</g>
<g >
<title>os.chmod (11 samples, 0.01%)</title><rect x="15.8" y="213" width="0.1" height="15.0" fill="rgb(220,132,28)" rx="2" ry="2" />
<text  x="18.75" y="223.5" ></text>
</g>
<g >
<title>kvm_irq_delivery_to_apic (26 samples, 0.02%)</title><rect x="40.4" y="341" width="0.2" height="15.0" fill="rgb(248,121,42)" rx="2" ry="2" />
<text  x="43.36" y="351.5" ></text>
</g>
<g >
<title>__raw_spin_unlock_irq (13 samples, 0.01%)</title><rect x="39.6" y="293" width="0.1" height="15.0" fill="rgb(251,91,2)" rx="2" ry="2" />
<text  x="42.63" y="303.5" ></text>
</g>
<g >
<title>[ld-musl-x86_64.so.1] (94 samples, 0.07%)</title><rect x="22.1" y="501" width="0.9" height="15.0" fill="rgb(224,27,35)" rx="2" ry="2" />
<text  x="25.09" y="511.5" ></text>
</g>
<g >
<title>swapper (123,264 samples, 96.15%)</title><rect x="41.5" y="517" width="1134.5" height="15.0" fill="rgb(226,152,53)" rx="2" ry="2" />
<text  x="44.47" y="527.5" >swapper</text>
</g>
<g >
<title>zfs (43 samples, 0.03%)</title><rect x="1189.6" y="517" width="0.4" height="15.0" fill="rgb(241,24,13)" rx="2" ry="2" />
<text  x="1192.60" y="527.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (28 samples, 0.02%)</title><rect x="1188.1" y="277" width="0.2" height="15.0" fill="rgb(233,189,40)" rx="2" ry="2" />
<text  x="1191.08" y="287.5" ></text>
</g>
<g >
<title>vfs_write (31 samples, 0.02%)</title><rect x="15.5" y="117" width="0.2" height="15.0" fill="rgb(249,178,19)" rx="2" ry="2" />
<text  x="18.46" y="127.5" ></text>
</g>
<g >
<title>do_syscall_64 (21 samples, 0.02%)</title><rect x="1178.9" y="341" width="0.2" height="15.0" fill="rgb(223,117,6)" rx="2" ry="2" />
<text  x="1181.88" y="351.5" ></text>
</g>
<g >
<title>dsl_pool_sync (13 samples, 0.01%)</title><rect x="1176.1" y="421" width="0.1" height="15.0" fill="rgb(207,227,45)" rx="2" ry="2" />
<text  x="1179.06" y="431.5" ></text>
</g>
<g >
<title>[perf] (15 samples, 0.01%)</title><rect x="21.8" y="453" width="0.1" height="15.0" fill="rgb(240,169,48)" rx="2" ry="2" />
<text  x="24.81" y="463.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/diff/apply.apply.func1 (425 samples, 0.33%)</title><rect x="12.8" y="293" width="3.9" height="15.0" fill="rgb(210,36,9)" rx="2" ry="2" />
<text  x="15.75" y="303.5" ></text>
</g>
<g >
<title>zfs_write (31 samples, 0.02%)</title><rect x="15.5" y="53" width="0.2" height="15.0" fill="rgb(243,88,12)" rx="2" ry="2" />
<text  x="18.46" y="63.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive.createTarFile (384 samples, 0.30%)</title><rect x="12.9" y="245" width="3.5" height="15.0" fill="rgb(221,212,20)" rx="2" ry="2" />
<text  x="15.86" y="255.5" ></text>
</g>
<g >
<title>[qemu-system-x86_64] (46 samples, 0.04%)</title><rect x="23.0" y="501" width="0.4" height="15.0" fill="rgb(205,49,8)" rx="2" ry="2" />
<text  x="25.99" y="511.5" ></text>
</g>
<g >
<title>[zedbox] (938 samples, 0.73%)</title><rect x="1180.9" y="421" width="8.6" height="15.0" fill="rgb(236,85,14)" rx="2" ry="2" />
<text  x="1183.90" y="431.5" ></text>
</g>
<g >
<title>[zedbox] (28 samples, 0.02%)</title><rect x="1178.8" y="389" width="0.3" height="15.0" fill="rgb(221,102,51)" rx="2" ry="2" />
<text  x="1181.82" y="399.5" ></text>
</g>
<g >
<title>memlogd (27 samples, 0.02%)</title><rect x="21.0" y="517" width="0.2" height="15.0" fill="rgb(220,105,23)" rx="2" ry="2" />
<text  x="24.00" y="527.5" ></text>
</g>
<g >
<title>thread_generic_wrapper (29 samples, 0.02%)</title><rect x="1176.1" y="469" width="0.2" height="15.0" fill="rgb(218,1,47)" rx="2" ry="2" />
<text  x="1179.06" y="479.5" ></text>
</g>
<g >
<title>[zedbox] (207 samples, 0.16%)</title><rect x="1185.6" y="245" width="1.9" height="15.0" fill="rgb(217,207,14)" rx="2" ry="2" />
<text  x="1188.60" y="255.5" ></text>
</g>
<g >
<title>zio_write_compress (21 samples, 0.02%)</title><rect x="1178.4" y="437" width="0.2" height="15.0" fill="rgb(233,68,46)" rx="2" ry="2" />
<text  x="1181.40" y="447.5" ></text>
</g>
<g >
<title>do_syscall_64 (15 samples, 0.01%)</title><rect x="1179.1" y="373" width="0.1" height="15.0" fill="rgb(206,13,45)" rx="2" ry="2" />
<text  x="1182.07" y="383.5" ></text>
</g>
<g >
<title>finish_task_switch (21 samples, 0.02%)</title><rect x="22.4" y="357" width="0.2" height="15.0" fill="rgb(234,122,15)" rx="2" ry="2" />
<text  x="25.44" y="367.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (15 samples, 0.01%)</title><rect x="1179.9" y="341" width="0.2" height="15.0" fill="rgb(221,22,35)" rx="2" ry="2" />
<text  x="1182.93" y="351.5" ></text>
</g>
<g >
<title>rcu_core (18 samples, 0.01%)</title><rect x="1174.0" y="341" width="0.2" height="15.0" fill="rgb(253,134,32)" rx="2" ry="2" />
<text  x="1177.05" y="351.5" ></text>
</g>
<g >
<title>kvm_vcpu_wake_up (18 samples, 0.01%)</title><rect x="40.4" y="277" width="0.1" height="15.0" fill="rgb(252,2,25)" rx="2" ry="2" />
<text  x="43.38" y="287.5" ></text>
</g>
<g >
<title>native_safe_halt (30,496 samples, 23.79%)</title><rect x="41.5" y="421" width="280.7" height="15.0" fill="rgb(239,11,34)" rx="2" ry="2" />
<text  x="44.49" y="431.5" >native_safe_halt</text>
</g>
<g >
<title>[zedbox] (47 samples, 0.04%)</title><rect x="1178.8" y="405" width="0.4" height="15.0" fill="rgb(213,59,9)" rx="2" ry="2" />
<text  x="1181.78" y="415.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (29 samples, 0.02%)</title><rect x="1187.2" y="229" width="0.3" height="15.0" fill="rgb(226,218,49)" rx="2" ry="2" />
<text  x="1190.24" y="239.5" ></text>
</g>
<g >
<title>[libglib-2.0.so.0.6400.6] (51 samples, 0.04%)</title><rect x="30.2" y="485" width="0.5" height="15.0" fill="rgb(208,225,28)" rx="2" ry="2" />
<text  x="33.21" y="495.5" ></text>
</g>
<g >
<title>[ld-musl-x86_64.so.1] (20 samples, 0.02%)</title><rect x="31.6" y="469" width="0.2" height="15.0" fill="rgb(232,228,8)" rx="2" ry="2" />
<text  x="34.63" y="479.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/google.golang.org/grpc.(*Server).serveStreams.func1.1 (471 samples, 0.37%)</title><rect x="12.5" y="485" width="4.3" height="15.0" fill="rgb(242,73,18)" rx="2" ry="2" />
<text  x="15.50" y="495.5" ></text>
</g>
<g >
<title>[zedbox] (49 samples, 0.04%)</title><rect x="1178.8" y="437" width="0.4" height="15.0" fill="rgb(221,65,4)" rx="2" ry="2" />
<text  x="1181.76" y="447.5" ></text>
</g>
<g >
<title>[qemu-system-x86_64] (14 samples, 0.01%)</title><rect x="31.8" y="469" width="0.2" height="15.0" fill="rgb(229,61,15)" rx="2" ry="2" />
<text  x="34.84" y="479.5" ></text>
</g>
<g >
<title>taskq_thread_spawn_task (11 samples, 0.01%)</title><rect x="41.2" y="453" width="0.1" height="15.0" fill="rgb(240,166,54)" rx="2" ry="2" />
<text  x="44.23" y="463.5" ></text>
</g>
<g >
<title>skip_emulated_instruction (39 samples, 0.03%)</title><rect x="34.9" y="341" width="0.4" height="15.0" fill="rgb(235,63,36)" rx="2" ry="2" />
<text  x="37.90" y="351.5" ></text>
</g>
<g >
<title>zpl_write_common_iovec (31 samples, 0.02%)</title><rect x="15.5" y="69" width="0.2" height="15.0" fill="rgb(224,199,7)" rx="2" ry="2" />
<text  x="18.46" y="79.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (20 samples, 0.02%)</title><rect x="16.0" y="165" width="0.1" height="15.0" fill="rgb(251,168,33)" rx="2" ry="2" />
<text  x="18.96" y="175.5" ></text>
</g>
<g >
<title>taskq_thread (94 samples, 0.07%)</title><rect x="1177.7" y="469" width="0.9" height="15.0" fill="rgb(237,168,32)" rx="2" ry="2" />
<text  x="1180.73" y="479.5" ></text>
</g>
<g >
<title>__pollwait (44 samples, 0.03%)</title><rect x="26.3" y="389" width="0.4" height="15.0" fill="rgb(217,170,53)" rx="2" ry="2" />
<text  x="29.27" y="399.5" ></text>
</g>
<g >
<title>ret_from_intr (17 samples, 0.01%)</title><rect x="1179.9" y="469" width="0.2" height="15.0" fill="rgb(216,209,12)" rx="2" ry="2" />
<text  x="1182.93" y="479.5" ></text>
</g>
<g >
<title>[unknown] (26 samples, 0.02%)</title><rect x="1189.7" y="501" width="0.2" height="15.0" fill="rgb(252,112,52)" rx="2" ry="2" />
<text  x="1192.68" y="511.5" ></text>
</g>
<g >
<title>kthread (15 samples, 0.01%)</title><rect x="1178.6" y="485" width="0.1" height="15.0" fill="rgb(254,201,28)" rx="2" ry="2" />
<text  x="1181.60" y="495.5" ></text>
</g>
<g >
<title>[unknown] (145 samples, 0.11%)</title><rect x="1178.8" y="501" width="1.3" height="15.0" fill="rgb(219,192,30)" rx="2" ry="2" />
<text  x="1181.76" y="511.5" ></text>
</g>
<g >
<title>[zedbox] (38 samples, 0.03%)</title><rect x="1186.6" y="149" width="0.3" height="15.0" fill="rgb(228,64,49)" rx="2" ry="2" />
<text  x="1189.56" y="159.5" ></text>
</g>
<g >
<title>do_syscall_64 (16 samples, 0.01%)</title><rect x="1189.7" y="453" width="0.2" height="15.0" fill="rgb(242,200,49)" rx="2" ry="2" />
<text  x="1192.74" y="463.5" ></text>
</g>
<g >
<title>vfs_read (13 samples, 0.01%)</title><rect x="1187.9" y="213" width="0.2" height="15.0" fill="rgb(229,31,40)" rx="2" ry="2" />
<text  x="1190.95" y="223.5" ></text>
</g>
<g >
<title>do_syscall_64 (767 samples, 0.60%)</title><rect x="33.6" y="469" width="7.0" height="15.0" fill="rgb(220,28,33)" rx="2" ry="2" />
<text  x="36.56" y="479.5" ></text>
</g>
<g >
<title>runtime.scanobject (23 samples, 0.02%)</title><rect x="10.6" y="421" width="0.2" height="15.0" fill="rgb(220,23,40)" rx="2" ry="2" />
<text  x="13.64" y="431.5" ></text>
</g>
<g >
<title>vfs_write (36 samples, 0.03%)</title><rect x="29.7" y="421" width="0.4" height="15.0" fill="rgb(234,51,9)" rx="2" ry="2" />
<text  x="32.73" y="431.5" ></text>
</g>
<g >
<title>[zedbox] (49 samples, 0.04%)</title><rect x="1178.8" y="469" width="0.4" height="15.0" fill="rgb(242,105,48)" rx="2" ry="2" />
<text  x="1181.76" y="479.5" ></text>
</g>
<g >
<title>do_pwritev (20 samples, 0.02%)</title><rect x="22.7" y="453" width="0.2" height="15.0" fill="rgb(215,0,54)" rx="2" ry="2" />
<text  x="25.73" y="463.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/google.golang.org/grpc.(*Server).processUnaryRPC (448 samples, 0.35%)</title><rect x="12.7" y="453" width="4.1" height="15.0" fill="rgb(231,27,14)" rx="2" ry="2" />
<text  x="15.72" y="463.5" ></text>
</g>
<g >
<title>kvm_arch_vcpu_runnable (255 samples, 0.20%)</title><rect x="37.2" y="325" width="2.3" height="15.0" fill="rgb(236,181,40)" rx="2" ry="2" />
<text  x="40.15" y="335.5" ></text>
</g>
<g >
<title>spl_cache_grow_work (11 samples, 0.01%)</title><rect x="41.3" y="453" width="0.1" height="15.0" fill="rgb(223,202,18)" rx="2" ry="2" />
<text  x="44.33" y="463.5" ></text>
</g>
<g >
<title>zpl_create (18 samples, 0.01%)</title><rect x="16.0" y="85" width="0.1" height="15.0" fill="rgb(219,25,17)" rx="2" ry="2" />
<text  x="18.97" y="95.5" ></text>
</g>
<g >
<title>memmove (14 samples, 0.01%)</title><rect x="40.9" y="501" width="0.1" height="15.0" fill="rgb(252,77,36)" rx="2" ry="2" />
<text  x="43.85" y="511.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive.copyBuffered (305 samples, 0.24%)</title><rect x="12.9" y="229" width="2.9" height="15.0" fill="rgb(218,139,39)" rx="2" ry="2" />
<text  x="15.95" y="239.5" ></text>
</g>
<g >
<title>kvm_vcpu_check_block (367 samples, 0.29%)</title><rect x="36.2" y="341" width="3.4" height="15.0" fill="rgb(218,214,21)" rx="2" ry="2" />
<text  x="39.20" y="351.5" ></text>
</g>
<g >
<title>[zedbox] (26 samples, 0.02%)</title><rect x="1178.8" y="373" width="0.3" height="15.0" fill="rgb(239,121,2)" rx="2" ry="2" />
<text  x="1181.84" y="383.5" ></text>
</g>
<g >
<title>__do_sys_nanosleep (11 samples, 0.01%)</title><rect x="1179.1" y="357" width="0.1" height="15.0" fill="rgb(223,124,33)" rx="2" ry="2" />
<text  x="1182.08" y="367.5" ></text>
</g>
<g >
<title>[memlogd] (15 samples, 0.01%)</title><rect x="21.0" y="469" width="0.1" height="15.0" fill="rgb(220,185,20)" rx="2" ry="2" />
<text  x="24.00" y="479.5" ></text>
</g>
<g >
<title>run_rebalance_domains (11 samples, 0.01%)</title><rect x="1174.2" y="341" width="0.1" height="15.0" fill="rgb(233,152,21)" rx="2" ry="2" />
<text  x="1177.23" y="351.5" ></text>
</g>
<g >
<title>[zedbox] (96 samples, 0.07%)</title><rect x="1179.2" y="485" width="0.9" height="15.0" fill="rgb(208,161,39)" rx="2" ry="2" />
<text  x="1182.21" y="495.5" ></text>
</g>
<g >
<title>do_syscall_64 (17 samples, 0.01%)</title><rect x="1187.1" y="197" width="0.1" height="15.0" fill="rgb(226,82,39)" rx="2" ry="2" />
<text  x="1190.06" y="207.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).Read (265 samples, 0.21%)</title><rect x="13.0" y="101" width="2.4" height="15.0" fill="rgb(214,67,27)" rx="2" ry="2" />
<text  x="15.95" y="111.5" ></text>
</g>
<g >
<title>newlogd (42 samples, 0.03%)</title><rect x="21.3" y="517" width="0.4" height="15.0" fill="rgb(235,129,51)" rx="2" ry="2" />
<text  x="24.34" y="527.5" ></text>
</g>
<g >
<title>start_secondary (92,721 samples, 72.32%)</title><rect x="322.6" y="485" width="853.4" height="15.0" fill="rgb(240,49,12)" rx="2" ry="2" />
<text  x="325.60" y="495.5" >start_secondary</text>
</g>
<g >
<title>ktime_get (97 samples, 0.08%)</title><rect x="35.3" y="341" width="0.9" height="15.0" fill="rgb(251,100,40)" rx="2" ry="2" />
<text  x="38.31" y="351.5" ></text>
</g>
<g >
<title>do_syscall_64 (19 samples, 0.01%)</title><rect x="1188.5" y="293" width="0.2" height="15.0" fill="rgb(206,76,25)" rx="2" ry="2" />
<text  x="1191.50" y="303.5" ></text>
</g>
<g >
<title>__raw_spin_unlock_irq (29 samples, 0.02%)</title><rect x="322.3" y="389" width="0.3" height="15.0" fill="rgb(246,178,43)" rx="2" ry="2" />
<text  x="325.32" y="399.5" ></text>
</g>
<g >
<title>ret_from_fork (94 samples, 0.07%)</title><rect x="1177.7" y="501" width="0.9" height="15.0" fill="rgb(216,76,2)" rx="2" ry="2" />
<text  x="1180.73" y="511.5" ></text>
</g>
<g >
<title>do_syscall_64 (11 samples, 0.01%)</title><rect x="1186.8" y="117" width="0.1" height="15.0" fill="rgb(226,16,41)" rx="2" ry="2" />
<text  x="1189.80" y="127.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/github.com/containerd/continuity/fs.walkLinks (17 samples, 0.01%)</title><rect x="16.4" y="197" width="0.2" height="15.0" fill="rgb(251,224,29)" rx="2" ry="2" />
<text  x="19.42" y="207.5" ></text>
</g>
<g >
<title>eventfd_write (33 samples, 0.03%)</title><rect x="29.8" y="405" width="0.3" height="15.0" fill="rgb(216,201,21)" rx="2" ry="2" />
<text  x="32.75" y="415.5" ></text>
</g>
<g >
<title>zfs_write (19 samples, 0.01%)</title><rect x="22.7" y="357" width="0.2" height="15.0" fill="rgb(253,186,30)" rx="2" ry="2" />
<text  x="25.74" y="367.5" ></text>
</g>
<g >
<title>[zedbox] (49 samples, 0.04%)</title><rect x="1178.8" y="453" width="0.4" height="15.0" fill="rgb(223,119,37)" rx="2" ry="2" />
<text  x="1181.76" y="463.5" ></text>
</g>
<g >
<title>fstatat (17 samples, 0.01%)</title><rect x="32.3" y="469" width="0.1" height="15.0" fill="rgb(253,18,54)" rx="2" ry="2" />
<text  x="35.29" y="479.5" ></text>
</g>
<g >
<title>taskq_thread (114 samples, 0.09%)</title><rect x="1176.6" y="469" width="1.1" height="15.0" fill="rgb(245,122,28)" rx="2" ry="2" />
<text  x="1179.64" y="479.5" ></text>
</g>
<g >
<title>spa_sync (29 samples, 0.02%)</title><rect x="1176.1" y="437" width="0.2" height="15.0" fill="rgb(208,118,32)" rx="2" ry="2" />
<text  x="1179.06" y="447.5" ></text>
</g>
<g >
<title>zpl_iter_read (15 samples, 0.01%)</title><rect x="32.0" y="341" width="0.1" height="15.0" fill="rgb(236,178,9)" rx="2" ry="2" />
<text  x="34.97" y="351.5" ></text>
</g>
<g >
<title>syscall.Syscall (33 samples, 0.03%)</title><rect x="15.4" y="181" width="0.4" height="15.0" fill="rgb(227,110,34)" rx="2" ry="2" />
<text  x="18.45" y="191.5" ></text>
</g>
<g >
<title>compress/flate.(*huffmanDecoder).init (12 samples, 0.01%)</title><rect x="15.2" y="53" width="0.1" height="15.0" fill="rgb(223,13,47)" rx="2" ry="2" />
<text  x="18.23" y="63.5" ></text>
</g>
<g >
<title>schedule_idle (32 samples, 0.02%)</title><rect x="322.3" y="437" width="0.3" height="15.0" fill="rgb(234,226,9)" rx="2" ry="2" />
<text  x="325.29" y="447.5" ></text>
</g>
<g >
<title>update_blocked_averages (11 samples, 0.01%)</title><rect x="1174.2" y="325" width="0.1" height="15.0" fill="rgb(224,43,50)" rx="2" ry="2" />
<text  x="1177.23" y="335.5" ></text>
</g>
<g >
<title>spl_dynamic_tas (15 samples, 0.01%)</title><rect x="41.2" y="517" width="0.1" height="15.0" fill="rgb(224,96,23)" rx="2" ry="2" />
<text  x="44.19" y="527.5" ></text>
</g>
<g >
<title>kvm_apic_accept_pic_intr (12 samples, 0.01%)</title><rect x="38.3" y="277" width="0.1" height="15.0" fill="rgb(254,130,11)" rx="2" ry="2" />
<text  x="41.30" y="287.5" ></text>
</g>
<g >
<title>kvm_set_msr_common (20 samples, 0.02%)</title><rect x="34.4" y="309" width="0.2" height="15.0" fill="rgb(247,207,19)" rx="2" ry="2" />
<text  x="37.38" y="319.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/google.golang.org/grpc.(*Server).handleStream (471 samples, 0.37%)</title><rect x="12.5" y="469" width="4.3" height="15.0" fill="rgb(216,9,35)" rx="2" ry="2" />
<text  x="15.50" y="479.5" ></text>
</g>
<g >
<title>schedule_idle (122 samples, 0.10%)</title><rect x="1174.9" y="437" width="1.1" height="15.0" fill="rgb(239,131,31)" rx="2" ry="2" />
<text  x="1177.90" y="447.5" ></text>
</g>
<g >
<title>paravirt_read_msr (13 samples, 0.01%)</title><rect x="39.8" y="261" width="0.1" height="15.0" fill="rgb(231,184,19)" rx="2" ry="2" />
<text  x="42.78" y="271.5" ></text>
</g>
<g >
<title>os.OpenFile (25 samples, 0.02%)</title><rect x="15.9" y="213" width="0.2" height="15.0" fill="rgb(223,147,26)" rx="2" ry="2" />
<text  x="18.92" y="223.5" ></text>
</g>
<g >
<title>native_read_msr (13 samples, 0.01%)</title><rect x="39.8" y="245" width="0.1" height="15.0" fill="rgb(239,194,33)" rx="2" ry="2" />
<text  x="42.78" y="255.5" ></text>
</g>
<g >
<title>cpu_startup_entry (92,721 samples, 72.32%)</title><rect x="322.6" y="469" width="853.4" height="15.0" fill="rgb(208,18,39)" rx="2" ry="2" />
<text  x="325.60" y="479.5" >cpu_startup_entry</text>
</g>
<g >
<title>kvm_arch_vcpu_load (20 samples, 0.02%)</title><rect x="39.7" y="293" width="0.2" height="15.0" fill="rgb(241,189,3)" rx="2" ry="2" />
<text  x="42.75" y="303.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).readHuffman (14 samples, 0.01%)</title><rect x="15.2" y="69" width="0.1" height="15.0" fill="rgb(248,74,7)" rx="2" ry="2" />
<text  x="18.21" y="79.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).huffmanBlock (89 samples, 0.07%)</title><rect x="14.4" y="69" width="0.8" height="15.0" fill="rgb(243,52,29)" rx="2" ry="2" />
<text  x="17.39" y="79.5" ></text>
</g>
<g >
<title>__srcu_read_lock (41 samples, 0.03%)</title><rect x="36.3" y="325" width="0.4" height="15.0" fill="rgb(234,222,34)" rx="2" ry="2" />
<text  x="39.33" y="335.5" ></text>
</g>
<g >
<title>do_syscall_64 (634 samples, 0.49%)</title><rect x="24.2" y="453" width="5.9" height="15.0" fill="rgb(218,62,37)" rx="2" ry="2" />
<text  x="27.23" y="463.5" ></text>
</g>
<g >
<title>do_sys_open (20 samples, 0.02%)</title><rect x="16.0" y="133" width="0.1" height="15.0" fill="rgb(230,97,32)" rx="2" ry="2" />
<text  x="18.96" y="143.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (44 samples, 0.03%)</title><rect x="27.6" y="389" width="0.4" height="15.0" fill="rgb(227,124,8)" rx="2" ry="2" />
<text  x="30.55" y="399.5" ></text>
</g>
<g >
<title>native_safe_halt (92,572 samples, 72.21%)</title><rect x="322.6" y="421" width="852.1" height="15.0" fill="rgb(254,88,22)" rx="2" ry="2" />
<text  x="325.63" y="431.5" >native_safe_halt</text>
</g>
<g >
<title>zfs_read (14 samples, 0.01%)</title><rect x="32.0" y="309" width="0.1" height="15.0" fill="rgb(222,17,23)" rx="2" ry="2" />
<text  x="34.98" y="319.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (17 samples, 0.01%)</title><rect x="40.4" y="261" width="0.1" height="15.0" fill="rgb(251,31,28)" rx="2" ry="2" />
<text  x="43.39" y="271.5" ></text>
</g>
<g >
<title>zio_vdev_io_done (45 samples, 0.04%)</title><rect x="1177.3" y="437" width="0.4" height="15.0" fill="rgb(206,118,45)" rx="2" ry="2" />
<text  x="1180.27" y="447.5" ></text>
</g>
<g >
<title>os.openFileNolog (25 samples, 0.02%)</title><rect x="15.9" y="197" width="0.2" height="15.0" fill="rgb(242,21,0)" rx="2" ry="2" />
<text  x="18.92" y="207.5" ></text>
</g>
<g >
<title>[unknown] (1,080 samples, 0.84%)</title><rect x="23.4" y="501" width="10.0" height="15.0" fill="rgb(221,189,31)" rx="2" ry="2" />
<text  x="26.41" y="511.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (27 samples, 0.02%)</title><rect x="28.9" y="437" width="0.2" height="15.0" fill="rgb(232,119,12)" rx="2" ry="2" />
<text  x="31.88" y="447.5" ></text>
</g>
<g >
<title>[zedbox] (577 samples, 0.45%)</title><rect x="1183.4" y="325" width="5.3" height="15.0" fill="rgb(225,159,30)" rx="2" ry="2" />
<text  x="1186.37" y="335.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (11 samples, 0.01%)</title><rect x="1174.6" y="277" width="0.1" height="15.0" fill="rgb(219,157,1)" rx="2" ry="2" />
<text  x="1177.58" y="287.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (15 samples, 0.01%)</title><rect x="1179.9" y="325" width="0.2" height="15.0" fill="rgb(206,119,27)" rx="2" ry="2" />
<text  x="1182.93" y="335.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/google.golang.org/grpc.(*Server).processStreamingRPC (23 samples, 0.02%)</title><rect x="12.5" y="453" width="0.2" height="15.0" fill="rgb(228,86,44)" rx="2" ry="2" />
<text  x="15.50" y="463.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/diff.(*compressedProcessor).Read (268 samples, 0.21%)</title><rect x="13.0" y="149" width="2.4" height="15.0" fill="rgb(212,103,49)" rx="2" ry="2" />
<text  x="15.95" y="159.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/google.golang.org/grpc.(*Server).serveStreams (18 samples, 0.01%)</title><rect x="12.3" y="469" width="0.2" height="15.0" fill="rgb(238,218,52)" rx="2" ry="2" />
<text  x="15.34" y="479.5" ></text>
</g>
<g >
<title>__spl_cache_grow (11 samples, 0.01%)</title><rect x="41.3" y="437" width="0.1" height="15.0" fill="rgb(239,11,0)" rx="2" ry="2" />
<text  x="44.33" y="447.5" ></text>
</g>
<g >
<title>[zedbox] (652 samples, 0.51%)</title><rect x="1182.9" y="341" width="6.0" height="15.0" fill="rgb(232,61,23)" rx="2" ry="2" />
<text  x="1185.90" y="351.5" ></text>
</g>
<g >
<title>zio_vdev_io_start (13 samples, 0.01%)</title><rect x="1177.5" y="389" width="0.2" height="15.0" fill="rgb(253,26,12)" rx="2" ry="2" />
<text  x="1180.55" y="399.5" ></text>
</g>
<g >
<title>kthread (122 samples, 0.10%)</title><rect x="1176.6" y="485" width="1.1" height="15.0" fill="rgb(246,189,23)" rx="2" ry="2" />
<text  x="1179.56" y="495.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (15 samples, 0.01%)</title><rect x="32.0" y="357" width="0.1" height="15.0" fill="rgb(215,199,38)" rx="2" ry="2" />
<text  x="34.97" y="367.5" ></text>
</g>
<g >
<title>__apic_update_ppr (24 samples, 0.02%)</title><rect x="37.9" y="277" width="0.2" height="15.0" fill="rgb(220,178,51)" rx="2" ry="2" />
<text  x="40.92" y="287.5" ></text>
</g>
<g >
<title>poll_freewait (82 samples, 0.06%)</title><rect x="27.5" y="405" width="0.7" height="15.0" fill="rgb(210,80,44)" rx="2" ry="2" />
<text  x="30.49" y="415.5" ></text>
</g>
<g >
<title>vfs_ioctl (16 samples, 0.01%)</title><rect x="1189.7" y="389" width="0.2" height="15.0" fill="rgb(247,149,11)" rx="2" ry="2" />
<text  x="1192.74" y="399.5" ></text>
</g>
<g >
<title>txg_sync_thread (29 samples, 0.02%)</title><rect x="1176.1" y="453" width="0.2" height="15.0" fill="rgb(238,131,7)" rx="2" ry="2" />
<text  x="1179.06" y="463.5" ></text>
</g>
<g >
<title>[memlogd] (12 samples, 0.01%)</title><rect x="21.0" y="405" width="0.1" height="15.0" fill="rgb(246,13,7)" rx="2" ry="2" />
<text  x="24.02" y="415.5" ></text>
</g>
<g >
<title>[zedbox] (1,025 samples, 0.80%)</title><rect x="1180.1" y="469" width="9.5" height="15.0" fill="rgb(237,29,42)" rx="2" ry="2" />
<text  x="1183.12" y="479.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (29 samples, 0.02%)</title><rect x="322.3" y="373" width="0.3" height="15.0" fill="rgb(248,12,20)" rx="2" ry="2" />
<text  x="325.32" y="383.5" ></text>
</g>
<g >
<title>do_iter_write (20 samples, 0.02%)</title><rect x="22.7" y="421" width="0.2" height="15.0" fill="rgb(224,23,0)" rx="2" ry="2" />
<text  x="25.73" y="431.5" ></text>
</g>
<g >
<title>[perf] (15 samples, 0.01%)</title><rect x="21.8" y="421" width="0.1" height="15.0" fill="rgb(226,141,44)" rx="2" ry="2" />
<text  x="24.81" y="431.5" ></text>
</g>
<g >
<title>virtnet_poll (14 samples, 0.01%)</title><rect x="1174.6" y="325" width="0.1" height="15.0" fill="rgb(224,101,3)" rx="2" ry="2" />
<text  x="1177.56" y="335.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/diff/apply.apply (431 samples, 0.34%)</title><rect x="12.8" y="325" width="3.9" height="15.0" fill="rgb(221,220,54)" rx="2" ry="2" />
<text  x="15.75" y="335.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).huffSym (77 samples, 0.06%)</title><rect x="13.6" y="69" width="0.7" height="15.0" fill="rgb(217,18,54)" rx="2" ry="2" />
<text  x="16.55" y="79.5" ></text>
</g>
<g >
<title>net_rx_action (17 samples, 0.01%)</title><rect x="1179.9" y="405" width="0.2" height="15.0" fill="rgb(238,218,31)" rx="2" ry="2" />
<text  x="1182.93" y="415.5" ></text>
</g>
<g >
<title>[zedbox] (49 samples, 0.04%)</title><rect x="1178.8" y="421" width="0.4" height="15.0" fill="rgb(220,75,27)" rx="2" ry="2" />
<text  x="1181.76" y="431.5" ></text>
</g>
<g >
<title>[ld-musl-x86_64.so.1] (107 samples, 0.08%)</title><rect x="17.0" y="501" width="1.0" height="15.0" fill="rgb(216,56,37)" rx="2" ry="2" />
<text  x="20.03" y="511.5" ></text>
</g>
<g >
<title>taskq_thread (15 samples, 0.01%)</title><rect x="1178.6" y="469" width="0.1" height="15.0" fill="rgb(217,207,9)" rx="2" ry="2" />
<text  x="1181.60" y="479.5" ></text>
</g>
<g >
<title>do_syscall_64 (59 samples, 0.05%)</title><rect x="22.4" y="469" width="0.5" height="15.0" fill="rgb(235,110,19)" rx="2" ry="2" />
<text  x="25.38" y="479.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (17 samples, 0.01%)</title><rect x="1177.0" y="389" width="0.2" height="15.0" fill="rgb(243,87,6)" rx="2" ry="2" />
<text  x="1180.05" y="399.5" ></text>
</g>
<g >
<title>__do_insn_fetch_bytes (27 samples, 0.02%)</title><rect x="35.0" y="293" width="0.2" height="15.0" fill="rgb(216,201,22)" rx="2" ry="2" />
<text  x="37.99" y="303.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/google.golang.org/grpc/internal/transport.(*http2Server).HandleStreams (18 samples, 0.01%)</title><rect x="12.3" y="453" width="0.2" height="15.0" fill="rgb(208,163,52)" rx="2" ry="2" />
<text  x="15.34" y="463.5" ></text>
</g>
<g >
<title>finish_task_switch (17 samples, 0.01%)</title><rect x="28.4" y="341" width="0.1" height="15.0" fill="rgb(245,52,26)" rx="2" ry="2" />
<text  x="31.36" y="351.5" ></text>
</g>
<g >
<title>[newlogd] (34 samples, 0.03%)</title><rect x="21.3" y="469" width="0.4" height="15.0" fill="rgb(212,105,49)" rx="2" ry="2" />
<text  x="24.34" y="479.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (11 samples, 0.01%)</title><rect x="1179.1" y="341" width="0.1" height="15.0" fill="rgb(224,222,45)" rx="2" ry="2" />
<text  x="1182.08" y="351.5" ></text>
</g>
<g >
<title>malloc (14 samples, 0.01%)</title><rect x="40.7" y="501" width="0.1" height="15.0" fill="rgb(212,62,31)" rx="2" ry="2" />
<text  x="43.70" y="511.5" ></text>
</g>
<g >
<title>sync_dnodes_task (12 samples, 0.01%)</title><rect x="18.1" y="453" width="0.1" height="15.0" fill="rgb(232,164,27)" rx="2" ry="2" />
<text  x="21.09" y="463.5" ></text>
</g>
<g >
<title>[perf] (15 samples, 0.01%)</title><rect x="21.8" y="501" width="0.1" height="15.0" fill="rgb(206,184,47)" rx="2" ry="2" />
<text  x="24.81" y="511.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (17 samples, 0.01%)</title><rect x="1177.0" y="405" width="0.2" height="15.0" fill="rgb(243,12,27)" rx="2" ry="2" />
<text  x="1180.05" y="415.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive.applyNaive (425 samples, 0.33%)</title><rect x="12.8" y="261" width="3.9" height="15.0" fill="rgb(235,220,15)" rx="2" ry="2" />
<text  x="15.75" y="271.5" ></text>
</g>
<g >
<title>vdev_disk_io_start (13 samples, 0.01%)</title><rect x="1177.5" y="373" width="0.2" height="15.0" fill="rgb(239,155,3)" rx="2" ry="2" />
<text  x="1180.55" y="383.5" ></text>
</g>
<g >
<title>__raw_spin_unlock_irq (17 samples, 0.01%)</title><rect x="28.4" y="325" width="0.1" height="15.0" fill="rgb(231,89,18)" rx="2" ry="2" />
<text  x="31.36" y="335.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/mount.WithTempMount (431 samples, 0.34%)</title><rect x="12.8" y="309" width="3.9" height="15.0" fill="rgb(246,158,11)" rx="2" ry="2" />
<text  x="15.75" y="319.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (11 samples, 0.01%)</title><rect x="1174.2" y="293" width="0.1" height="15.0" fill="rgb(224,183,6)" rx="2" ry="2" />
<text  x="1177.23" y="303.5" ></text>
</g>
<g >
<title>[newlogd] (26 samples, 0.02%)</title><rect x="21.4" y="405" width="0.2" height="15.0" fill="rgb(207,34,23)" rx="2" ry="2" />
<text  x="24.39" y="415.5" ></text>
</g>
<g >
<title>[jq] (64 samples, 0.05%)</title><rect x="19.7" y="485" width="0.6" height="15.0" fill="rgb(251,179,48)" rx="2" ry="2" />
<text  x="22.75" y="495.5" ></text>
</g>
<g >
<title>[zedbox] (11 samples, 0.01%)</title><rect x="1186.7" y="101" width="0.1" height="15.0" fill="rgb(225,180,1)" rx="2" ry="2" />
<text  x="1189.69" y="111.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.01%)</title><rect x="32.0" y="437" width="0.1" height="15.0" fill="rgb(216,191,12)" rx="2" ry="2" />
<text  x="34.97" y="447.5" ></text>
</g>
<g >
<title>kthread (11 samples, 0.01%)</title><rect x="41.3" y="485" width="0.1" height="15.0" fill="rgb(243,203,9)" rx="2" ry="2" />
<text  x="44.33" y="495.5" ></text>
</g>
<g >
<title>vfs_read (13 samples, 0.01%)</title><rect x="29.6" y="421" width="0.1" height="15.0" fill="rgb(211,33,1)" rx="2" ry="2" />
<text  x="32.59" y="431.5" ></text>
</g>
<g >
<title>zedbox (1,178 samples, 0.92%)</title><rect x="1178.8" y="517" width="10.8" height="15.0" fill="rgb(205,29,19)" rx="2" ry="2" />
<text  x="1181.76" y="527.5" ></text>
</g>
<g >
<title>[zedbox] (21 samples, 0.02%)</title><rect x="1186.6" y="133" width="0.2" height="15.0" fill="rgb(236,118,6)" rx="2" ry="2" />
<text  x="1189.60" y="143.5" ></text>
</g>
<g >
<title>vdev_mirror_io_start (11 samples, 0.01%)</title><rect x="1178.3" y="421" width="0.1" height="15.0" fill="rgb(250,228,30)" rx="2" ry="2" />
<text  x="1181.29" y="431.5" ></text>
</g>
<g >
<title>containerd (720 samples, 0.56%)</title><rect x="10.3" y="517" width="6.6" height="15.0" fill="rgb(219,92,27)" rx="2" ry="2" />
<text  x="13.32" y="527.5" ></text>
</g>
<g >
<title>finish_task_switch (116 samples, 0.09%)</title><rect x="1174.9" y="405" width="1.1" height="15.0" fill="rgb(233,65,20)" rx="2" ry="2" />
<text  x="1177.94" y="415.5" ></text>
</g>
<g >
<title>x86_decode_insn (31 samples, 0.02%)</title><rect x="35.0" y="309" width="0.3" height="15.0" fill="rgb(250,4,38)" rx="2" ry="2" />
<text  x="37.97" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (23 samples, 0.02%)</title><rect x="1188.7" y="309" width="0.2" height="15.0" fill="rgb(210,18,1)" rx="2" ry="2" />
<text  x="1191.68" y="319.5" ></text>
</g>
<g >
<title>vmx_get_cpl (17 samples, 0.01%)</title><rect x="35.1" y="261" width="0.1" height="15.0" fill="rgb(220,38,39)" rx="2" ry="2" />
<text  x="38.08" y="271.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/github.com/grpc-ecosystem/go-grpc-prometheus.(*ServerMetrics).StreamServerInterceptor.func1 (23 samples, 0.02%)</title><rect x="12.5" y="437" width="0.2" height="15.0" fill="rgb(209,199,36)" rx="2" ry="2" />
<text  x="15.50" y="447.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (18 samples, 0.01%)</title><rect x="1174.7" y="437" width="0.2" height="15.0" fill="rgb(241,211,5)" rx="2" ry="2" />
<text  x="1177.69" y="447.5" ></text>
</g>
<g >
<title>[zedbox] (709 samples, 0.55%)</title><rect x="1182.5" y="357" width="6.6" height="15.0" fill="rgb(232,72,40)" rx="2" ry="2" />
<text  x="1185.54" y="367.5" ></text>
</g>
<g >
<title>new_sync_write (31 samples, 0.02%)</title><rect x="15.5" y="101" width="0.2" height="15.0" fill="rgb(242,107,30)" rx="2" ry="2" />
<text  x="18.46" y="111.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (20 samples, 0.02%)</title><rect x="22.7" y="405" width="0.2" height="15.0" fill="rgb(234,5,19)" rx="2" ry="2" />
<text  x="25.73" y="415.5" ></text>
</g>
<g >
<title>bufio.(*Reader).ReadByte (13 samples, 0.01%)</title><rect x="15.1" y="37" width="0.1" height="15.0" fill="rgb(221,62,44)" rx="2" ry="2" />
<text  x="18.05" y="47.5" ></text>
</g>
<g >
<title>__raw_spin_unlock_irq (115 samples, 0.09%)</title><rect x="1175.0" y="389" width="1.0" height="15.0" fill="rgb(245,63,15)" rx="2" ry="2" />
<text  x="1177.95" y="399.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (16 samples, 0.01%)</title><rect x="1189.7" y="437" width="0.2" height="15.0" fill="rgb(222,61,12)" rx="2" ry="2" />
<text  x="1192.74" y="447.5" ></text>
</g>
<g >
<title>finish_task_switch (29 samples, 0.02%)</title><rect x="322.3" y="405" width="0.3" height="15.0" fill="rgb(220,16,45)" rx="2" ry="2" />
<text  x="325.32" y="415.5" ></text>
</g>
<g >
<title>fput_many (23 samples, 0.02%)</title><rect x="27.3" y="405" width="0.2" height="15.0" fill="rgb(241,96,4)" rx="2" ry="2" />
<text  x="30.27" y="415.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (25 samples, 0.02%)</title><rect x="1189.1" y="357" width="0.2" height="15.0" fill="rgb(229,138,29)" rx="2" ry="2" />
<text  x="1192.06" y="367.5" ></text>
</g>
<g >
<title>zpl_iter_write (20 samples, 0.02%)</title><rect x="22.7" y="389" width="0.2" height="15.0" fill="rgb(244,11,38)" rx="2" ry="2" />
<text  x="25.73" y="399.5" ></text>
</g>
<g >
<title>zpl_write_common_iovec (19 samples, 0.01%)</title><rect x="22.7" y="373" width="0.2" height="15.0" fill="rgb(245,40,24)" rx="2" ry="2" />
<text  x="25.74" y="383.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/github.com/containerd/continuity/fs.walkLinks (11 samples, 0.01%)</title><rect x="16.5" y="165" width="0.1" height="15.0" fill="rgb(227,31,22)" rx="2" ry="2" />
<text  x="19.47" y="175.5" ></text>
</g>
<g >
<title>do_syscall_64 (20 samples, 0.02%)</title><rect x="16.0" y="149" width="0.1" height="15.0" fill="rgb(222,76,19)" rx="2" ry="2" />
<text  x="18.96" y="159.5" ></text>
</g>
<g >
<title>[memlogd] (11 samples, 0.01%)</title><rect x="21.0" y="357" width="0.1" height="15.0" fill="rgb(247,105,45)" rx="2" ry="2" />
<text  x="24.03" y="367.5" ></text>
</g>
<g >
<title>[memlogd] (13 samples, 0.01%)</title><rect x="21.0" y="437" width="0.1" height="15.0" fill="rgb(231,137,22)" rx="2" ry="2" />
<text  x="24.01" y="447.5" ></text>
</g>
<g >
<title>kvm_cpu_has_extint (22 samples, 0.02%)</title><rect x="38.2" y="293" width="0.2" height="15.0" fill="rgb(217,210,28)" rx="2" ry="2" />
<text  x="41.21" y="303.5" ></text>
</g>
<g >
<title>taskq_thread (15 samples, 0.01%)</title><rect x="41.2" y="469" width="0.1" height="15.0" fill="rgb(212,224,43)" rx="2" ry="2" />
<text  x="44.19" y="479.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (28 samples, 0.02%)</title><rect x="1174.4" y="357" width="0.3" height="15.0" fill="rgb(253,182,53)" rx="2" ry="2" />
<text  x="1177.44" y="367.5" ></text>
</g>
<g >
<title>do_syscall_64 (15 samples, 0.01%)</title><rect x="32.0" y="421" width="0.1" height="15.0" fill="rgb(217,77,1)" rx="2" ry="2" />
<text  x="34.97" y="431.5" ></text>
</g>
<g >
<title>__fcheck_files (19 samples, 0.01%)</title><rect x="25.7" y="373" width="0.1" height="15.0" fill="rgb(241,169,0)" rx="2" ry="2" />
<text  x="28.67" y="383.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (36 samples, 0.03%)</title><rect x="33.8" y="261" width="0.3" height="15.0" fill="rgb(221,126,37)" rx="2" ry="2" />
<text  x="36.78" y="271.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/services/diff.(*service).Apply (432 samples, 0.34%)</title><rect x="12.7" y="389" width="4.0" height="15.0" fill="rgb(243,123,51)" rx="2" ry="2" />
<text  x="15.74" y="399.5" ></text>
</g>
<g >
<title>do_syscall_64 (24 samples, 0.02%)</title><rect x="1189.1" y="341" width="0.2" height="15.0" fill="rgb(212,147,26)" rx="2" ry="2" />
<text  x="1192.06" y="351.5" ></text>
</g>
<g >
<title>kvm_cpu_has_interrupt (101 samples, 0.08%)</title><rect x="37.5" y="309" width="1.0" height="15.0" fill="rgb(248,193,53)" rx="2" ry="2" />
<text  x="40.52" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.01%)</title><rect x="1189.7" y="469" width="0.2" height="15.0" fill="rgb(226,110,21)" rx="2" ry="2" />
<text  x="1192.74" y="479.5" ></text>
</g>
<g >
<title>spl_kmem_cache (11 samples, 0.01%)</title><rect x="41.3" y="517" width="0.1" height="15.0" fill="rgb(221,32,29)" rx="2" ry="2" />
<text  x="44.33" y="527.5" ></text>
</g>
<g >
<title>irq_exit (17 samples, 0.01%)</title><rect x="1179.9" y="437" width="0.2" height="15.0" fill="rgb(238,51,53)" rx="2" ry="2" />
<text  x="1182.93" y="447.5" ></text>
</g>
<g >
<title>kvm_emulate_wrmsr (23 samples, 0.02%)</title><rect x="34.4" y="357" width="0.2" height="15.0" fill="rgb(242,212,53)" rx="2" ry="2" />
<text  x="37.37" y="367.5" ></text>
</g>
<g >
<title>ip6tables (13 samples, 0.01%)</title><rect x="18.3" y="517" width="0.1" height="15.0" fill="rgb(220,201,34)" rx="2" ry="2" />
<text  x="21.30" y="527.5" ></text>
</g>
<g >
<title>dp_sync_taskq (21 samples, 0.02%)</title><rect x="18.1" y="517" width="0.2" height="15.0" fill="rgb(208,90,17)" rx="2" ry="2" />
<text  x="21.07" y="527.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (25 samples, 0.02%)</title><rect x="22.4" y="405" width="0.2" height="15.0" fill="rgb(220,138,40)" rx="2" ry="2" />
<text  x="25.40" y="415.5" ></text>
</g>
<g >
<title>[zedbox] (1,027 samples, 0.80%)</title><rect x="1180.1" y="485" width="9.5" height="15.0" fill="rgb(244,95,27)" rx="2" ry="2" />
<text  x="1183.11" y="495.5" ></text>
</g>
<g >
<title>ret_from_intr (11 samples, 0.01%)</title><rect x="322.1" y="405" width="0.1" height="15.0" fill="rgb(206,148,34)" rx="2" ry="2" />
<text  x="325.08" y="415.5" ></text>
</g>
<g >
<title>dnode_sync (12 samples, 0.01%)</title><rect x="18.1" y="437" width="0.1" height="15.0" fill="rgb(225,39,9)" rx="2" ry="2" />
<text  x="21.09" y="447.5" ></text>
</g>
<g >
<title>os.(*File).Write (35 samples, 0.03%)</title><rect x="15.4" y="213" width="0.4" height="15.0" fill="rgb(227,88,38)" rx="2" ry="2" />
<text  x="18.43" y="223.5" ></text>
</g>
<g >
<title>kthread (21 samples, 0.02%)</title><rect x="18.1" y="485" width="0.2" height="15.0" fill="rgb(248,184,29)" rx="2" ry="2" />
<text  x="21.07" y="495.5" ></text>
</g>
<g >
<title>abd_copy_from_buf_off (16 samples, 0.01%)</title><rect x="1178.0" y="405" width="0.1" height="15.0" fill="rgb(252,128,9)" rx="2" ry="2" />
<text  x="1180.99" y="415.5" ></text>
</g>
<g >
<title>wwan-init.sh (12 samples, 0.01%)</title><rect x="1176.4" y="517" width="0.1" height="15.0" fill="rgb(247,74,37)" rx="2" ry="2" />
<text  x="1179.41" y="527.5" ></text>
</g>
<g >
<title>copy_process (12 samples, 0.01%)</title><rect x="20.7" y="437" width="0.1" height="15.0" fill="rgb(206,37,20)" rx="2" ry="2" />
<text  x="23.67" y="447.5" ></text>
</g>
<g >
<title>fput_many (17 samples, 0.01%)</title><rect x="28.0" y="389" width="0.1" height="15.0" fill="rgb(224,86,46)" rx="2" ry="2" />
<text  x="30.98" y="399.5" ></text>
</g>
<g >
<title>perf (15 samples, 0.01%)</title><rect x="21.8" y="517" width="0.1" height="15.0" fill="rgb(238,221,33)" rx="2" ry="2" />
<text  x="24.81" y="527.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.01%)</title><rect x="1186.8" y="133" width="0.1" height="15.0" fill="rgb(249,106,26)" rx="2" ry="2" />
<text  x="1189.80" y="143.5" ></text>
</g>
<g >
<title>__kvm_set_msr (20 samples, 0.02%)</title><rect x="34.4" y="341" width="0.2" height="15.0" fill="rgb(226,139,7)" rx="2" ry="2" />
<text  x="37.38" y="351.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (44 samples, 0.03%)</title><rect x="32.9" y="341" width="0.4" height="15.0" fill="rgb(228,26,29)" rx="2" ry="2" />
<text  x="35.89" y="351.5" ></text>
</g>
<g >
<title>txg_sync (29 samples, 0.02%)</title><rect x="1176.1" y="517" width="0.2" height="15.0" fill="rgb(225,39,42)" rx="2" ry="2" />
<text  x="1179.06" y="527.5" ></text>
</g>
<g >
<title>do_syscall_64 (40 samples, 0.03%)</title><rect x="1187.7" y="245" width="0.4" height="15.0" fill="rgb(235,219,33)" rx="2" ry="2" />
<text  x="1190.70" y="255.5" ></text>
</g>
<g >
<title>apic_enabled (13 samples, 0.01%)</title><rect x="37.0" y="309" width="0.2" height="15.0" fill="rgb(243,212,7)" rx="2" ry="2" />
<text  x="40.03" y="319.5" ></text>
</g>
<g >
<title>x86_emulate_instruction (34 samples, 0.03%)</title><rect x="34.9" y="325" width="0.4" height="15.0" fill="rgb(213,206,35)" rx="2" ry="2" />
<text  x="37.94" y="335.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/api/services/diff/v1._Diff_Apply_Handler.func1 (432 samples, 0.34%)</title><rect x="12.7" y="405" width="4.0" height="15.0" fill="rgb(212,119,8)" rx="2" ry="2" />
<text  x="15.74" y="415.5" ></text>
</g>
<g >
<title>kvm_vcpu_block (515 samples, 0.40%)</title><rect x="35.3" y="357" width="4.7" height="15.0" fill="rgb(237,92,31)" rx="2" ry="2" />
<text  x="38.27" y="367.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (41 samples, 0.03%)</title><rect x="1174.0" y="357" width="0.4" height="15.0" fill="rgb(238,56,36)" rx="2" ry="2" />
<text  x="1176.99" y="367.5" ></text>
</g>
<g >
<title>apic_has_pending_timer (25 samples, 0.02%)</title><rect x="36.9" y="325" width="0.3" height="15.0" fill="rgb(228,141,37)" rx="2" ry="2" />
<text  x="39.92" y="335.5" ></text>
</g>
<g >
<title>do_syscall_64 (19 samples, 0.01%)</title><rect x="1187.5" y="229" width="0.2" height="15.0" fill="rgb(235,99,7)" rx="2" ry="2" />
<text  x="1190.51" y="239.5" ></text>
</g>
<g >
<title>eventfd_signal (36 samples, 0.03%)</title><rect x="33.8" y="293" width="0.3" height="15.0" fill="rgb(242,61,31)" rx="2" ry="2" />
<text  x="36.78" y="303.5" ></text>
</g>
<g >
<title>__fget_light (95 samples, 0.07%)</title><rect x="25.0" y="405" width="0.8" height="15.0" fill="rgb(211,178,11)" rx="2" ry="2" />
<text  x="27.98" y="415.5" ></text>
</g>
<g >
<title>__sched_text_start (17 samples, 0.01%)</title><rect x="28.4" y="357" width="0.1" height="15.0" fill="rgb(212,169,38)" rx="2" ry="2" />
<text  x="31.36" y="367.5" ></text>
</g>
<g >
<title>read_tsc (58 samples, 0.05%)</title><rect x="35.6" y="309" width="0.6" height="15.0" fill="rgb(234,11,13)" rx="2" ry="2" />
<text  x="38.64" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.01%)</title><rect x="32.3" y="453" width="0.1" height="15.0" fill="rgb(226,119,30)" rx="2" ry="2" />
<text  x="35.29" y="463.5" ></text>
</g>
<g >
<title>[jq] (121 samples, 0.09%)</title><rect x="18.6" y="501" width="1.1" height="15.0" fill="rgb(241,142,43)" rx="2" ry="2" />
<text  x="21.62" y="511.5" ></text>
</g>
<g >
<title>[unknown] (12 samples, 0.01%)</title><rect x="21.1" y="485" width="0.1" height="15.0" fill="rgb(207,0,49)" rx="2" ry="2" />
<text  x="24.14" y="495.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/diff/walking/plugin.(*diffPlugin).Apply (432 samples, 0.34%)</title><rect x="12.7" y="357" width="4.0" height="15.0" fill="rgb(215,7,34)" rx="2" ry="2" />
<text  x="15.74" y="367.5" ></text>
</g>
<g >
<title>do_sys_open (12 samples, 0.01%)</title><rect x="1188.7" y="293" width="0.2" height="15.0" fill="rgb(231,209,51)" rx="2" ry="2" />
<text  x="1191.75" y="303.5" ></text>
</g>
<g >
<title>[perf] (15 samples, 0.01%)</title><rect x="21.8" y="373" width="0.1" height="15.0" fill="rgb(207,126,43)" rx="2" ry="2" />
<text  x="24.81" y="383.5" ></text>
</g>
<g >
<title>[memlogd] (12 samples, 0.01%)</title><rect x="21.1" y="453" width="0.1" height="15.0" fill="rgb(226,23,23)" rx="2" ry="2" />
<text  x="24.14" y="463.5" ></text>
</g>
<g >
<title>[perf] (15 samples, 0.01%)</title><rect x="21.8" y="389" width="0.1" height="15.0" fill="rgb(254,224,10)" rx="2" ry="2" />
<text  x="24.81" y="399.5" ></text>
</g>
<g >
<title>kvm_vcpu_kick (21 samples, 0.02%)</title><rect x="40.4" y="293" width="0.2" height="15.0" fill="rgb(250,167,24)" rx="2" ry="2" />
<text  x="43.38" y="303.5" ></text>
</g>
<g >
<title>[newlogd] (32 samples, 0.02%)</title><rect x="21.4" y="437" width="0.3" height="15.0" fill="rgb(209,46,23)" rx="2" ry="2" />
<text  x="24.36" y="447.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (40 samples, 0.03%)</title><rect x="1187.7" y="261" width="0.4" height="15.0" fill="rgb(253,100,10)" rx="2" ry="2" />
<text  x="1190.70" y="271.5" ></text>
</g>
<g >
<title>[zedbox] (432 samples, 0.34%)</title><rect x="1184.4" y="293" width="3.9" height="15.0" fill="rgb(215,162,26)" rx="2" ry="2" />
<text  x="1187.36" y="303.5" ></text>
</g>
<g >
<title>zio_vdev_io_start (11 samples, 0.01%)</title><rect x="1178.3" y="389" width="0.1" height="15.0" fill="rgb(244,84,47)" rx="2" ry="2" />
<text  x="1181.29" y="399.5" ></text>
</g>
<g >
<title>vfs_readv (15 samples, 0.01%)</title><rect x="32.0" y="389" width="0.1" height="15.0" fill="rgb(243,122,32)" rx="2" ry="2" />
<text  x="34.97" y="399.5" ></text>
</g>
<g >
<title>ret_from_fork (29 samples, 0.02%)</title><rect x="1176.1" y="501" width="0.2" height="15.0" fill="rgb(241,5,10)" rx="2" ry="2" />
<text  x="1179.06" y="511.5" ></text>
</g>
<g >
<title>vmx_interrupt_allowed (99 samples, 0.08%)</title><rect x="38.6" y="309" width="0.9" height="15.0" fill="rgb(249,175,9)" rx="2" ry="2" />
<text  x="41.59" y="319.5" ></text>
</g>
<g >
<title>[zedbox] (893 samples, 0.70%)</title><rect x="1181.3" y="405" width="8.2" height="15.0" fill="rgb(222,40,30)" rx="2" ry="2" />
<text  x="1184.28" y="415.5" ></text>
</g>
<g >
<title>ksys_write (32 samples, 0.02%)</title><rect x="15.4" y="133" width="0.3" height="15.0" fill="rgb(217,129,15)" rx="2" ry="2" />
<text  x="18.45" y="143.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/google.golang.org/grpc.(*Server).handleRawConn.func1 (18 samples, 0.01%)</title><rect x="12.3" y="485" width="0.2" height="15.0" fill="rgb(219,60,14)" rx="2" ry="2" />
<text  x="15.34" y="495.5" ></text>
</g>
<g >
<title>kvm_fetch_guest_virt (25 samples, 0.02%)</title><rect x="35.0" y="277" width="0.2" height="15.0" fill="rgb(233,124,5)" rx="2" ry="2" />
<text  x="38.01" y="287.5" ></text>
</g>
<g >
<title>dmu_read_uio_dbuf (12 samples, 0.01%)</title><rect x="32.0" y="293" width="0.1" height="15.0" fill="rgb(247,135,31)" rx="2" ry="2" />
<text  x="34.98" y="303.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (20 samples, 0.02%)</title><rect x="1187.5" y="245" width="0.2" height="15.0" fill="rgb(252,2,35)" rx="2" ry="2" />
<text  x="1190.51" y="255.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (17 samples, 0.01%)</title><rect x="1179.9" y="421" width="0.2" height="15.0" fill="rgb(253,87,15)" rx="2" ry="2" />
<text  x="1182.93" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (19 samples, 0.01%)</title><rect x="1188.5" y="309" width="0.2" height="15.0" fill="rgb(206,200,54)" rx="2" ry="2" />
<text  x="1191.50" y="319.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (11 samples, 0.01%)</title><rect x="1174.2" y="309" width="0.1" height="15.0" fill="rgb(242,226,42)" rx="2" ry="2" />
<text  x="1177.23" y="319.5" ></text>
</g>
<g >
<title>jq (204 samples, 0.16%)</title><rect x="18.6" y="517" width="1.9" height="15.0" fill="rgb(252,166,30)" rx="2" ry="2" />
<text  x="21.62" y="527.5" ></text>
</g>
<g >
<title>containerd-shim (23 samples, 0.02%)</title><rect x="10.1" y="517" width="0.2" height="15.0" fill="rgb(254,180,48)" rx="2" ry="2" />
<text  x="13.11" y="527.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (28 samples, 0.02%)</title><rect x="28.3" y="389" width="0.2" height="15.0" fill="rgb(234,228,19)" rx="2" ry="2" />
<text  x="31.26" y="399.5" ></text>
</g>
<g >
<title>[unknown] (12 samples, 0.01%)</title><rect x="21.1" y="501" width="0.1" height="15.0" fill="rgb(211,146,27)" rx="2" ry="2" />
<text  x="24.14" y="511.5" ></text>
</g>
</g>
</svg>
