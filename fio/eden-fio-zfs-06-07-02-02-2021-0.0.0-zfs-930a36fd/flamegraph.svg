<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="598" onload="init(evt)" viewBox="0 0 1200 598" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="598.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="581" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="581" > </text>
<g id="frames">
<g >
<title>vfs_read (13 samples, 0.01%)</title><rect x="1187.5" y="197" width="0.1" height="15.0" fill="rgb(218,4,51)" rx="2" ry="2" />
<text  x="1190.50" y="207.5" ></text>
</g>
<g >
<title>kvm_arch_vcpu_runnable (270 samples, 0.21%)</title><rect x="37.1" y="341" width="2.4" height="15.0" fill="rgb(214,213,17)" rx="2" ry="2" />
<text  x="40.07" y="351.5" ></text>
</g>
<g >
<title>taskq_thread (93 samples, 0.07%)</title><rect x="1178.0" y="485" width="0.8" height="15.0" fill="rgb(245,85,13)" rx="2" ry="2" />
<text  x="1180.99" y="495.5" ></text>
</g>
<g >
<title>zio_execute (14 samples, 0.01%)</title><rect x="1178.8" y="469" width="0.2" height="15.0" fill="rgb(239,197,32)" rx="2" ry="2" />
<text  x="1181.84" y="479.5" ></text>
</g>
<g >
<title>receive_buf (27 samples, 0.02%)</title><rect x="1176.1" y="325" width="0.2" height="15.0" fill="rgb(208,29,18)" rx="2" ry="2" />
<text  x="1179.06" y="335.5" ></text>
</g>
<g >
<title>apic_has_interrupt_for_ppr (12 samples, 0.01%)</title><rect x="38.0" y="293" width="0.1" height="15.0" fill="rgb(244,50,9)" rx="2" ry="2" />
<text  x="41.02" y="303.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (24 samples, 0.02%)</title><rect x="1176.1" y="277" width="0.2" height="15.0" fill="rgb(211,173,13)" rx="2" ry="2" />
<text  x="1179.08" y="287.5" ></text>
</g>
<g >
<title>kvm_irq_delivery_to_apic (40 samples, 0.03%)</title><rect x="40.4" y="357" width="0.4" height="15.0" fill="rgb(254,224,47)" rx="2" ry="2" />
<text  x="43.45" y="367.5" ></text>
</g>
<g >
<title>kthread (25 samples, 0.02%)</title><rect x="18.0" y="501" width="0.2" height="15.0" fill="rgb(245,2,48)" rx="2" ry="2" />
<text  x="20.97" y="511.5" ></text>
</g>
<g >
<title>[zedbox] (24 samples, 0.02%)</title><rect x="1179.8" y="485" width="0.2" height="15.0" fill="rgb(211,90,2)" rx="2" ry="2" />
<text  x="1182.82" y="495.5" ></text>
</g>
<g >
<title>kvm_vcpu_ioctl (795 samples, 0.61%)</title><rect x="33.2" y="405" width="7.2" height="15.0" fill="rgb(212,172,4)" rx="2" ry="2" />
<text  x="36.22" y="415.5" ></text>
</g>
<g >
<title>[zedbox] (101 samples, 0.08%)</title><rect x="1186.2" y="229" width="0.9" height="15.0" fill="rgb(228,226,44)" rx="2" ry="2" />
<text  x="1189.21" y="239.5" ></text>
</g>
<g >
<title>runtime.scanstack (13 samples, 0.01%)</title><rect x="10.3" y="389" width="0.1" height="15.0" fill="rgb(235,93,43)" rx="2" ry="2" />
<text  x="13.26" y="399.5" ></text>
</g>
<g >
<title>abd_copy_off_cb (17 samples, 0.01%)</title><rect x="1178.5" y="373" width="0.1" height="15.0" fill="rgb(244,71,43)" rx="2" ry="2" />
<text  x="1181.48" y="383.5" ></text>
</g>
<g >
<title>futex_wake (55 samples, 0.04%)</title><rect x="32.4" y="421" width="0.5" height="15.0" fill="rgb(254,221,33)" rx="2" ry="2" />
<text  x="35.42" y="431.5" ></text>
</g>
<g >
<title>runtime.markroot.func1 (14 samples, 0.01%)</title><rect x="10.3" y="421" width="0.1" height="15.0" fill="rgb(243,48,36)" rx="2" ry="2" />
<text  x="13.25" y="431.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (30 samples, 0.02%)</title><rect x="40.5" y="277" width="0.2" height="15.0" fill="rgb(215,172,52)" rx="2" ry="2" />
<text  x="43.45" y="287.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Write (36 samples, 0.03%)</title><rect x="15.6" y="213" width="0.3" height="15.0" fill="rgb(239,178,16)" rx="2" ry="2" />
<text  x="18.57" y="223.5" ></text>
</g>
<g >
<title>runtime.scanobject (26 samples, 0.02%)</title><rect x="11.0" y="437" width="0.3" height="15.0" fill="rgb(239,135,23)" rx="2" ry="2" />
<text  x="14.02" y="447.5" ></text>
</g>
<g >
<title>do_syscall_64 (35 samples, 0.03%)</title><rect x="1187.8" y="261" width="0.4" height="15.0" fill="rgb(247,192,5)" rx="2" ry="2" />
<text  x="1190.84" y="271.5" ></text>
</g>
<g >
<title>lz4_compress_zfs (15 samples, 0.01%)</title><rect x="1179.6" y="421" width="0.1" height="15.0" fill="rgb(215,17,38)" rx="2" ry="2" />
<text  x="1182.57" y="431.5" ></text>
</g>
<g >
<title>vfs_ioctl (841 samples, 0.65%)</title><rect x="33.2" y="421" width="7.6" height="15.0" fill="rgb(205,11,23)" rx="2" ry="2" />
<text  x="36.20" y="431.5" ></text>
</g>
<g >
<title>schedule_idle (108 samples, 0.08%)</title><rect x="1176.6" y="453" width="1.0" height="15.0" fill="rgb(221,77,3)" rx="2" ry="2" />
<text  x="1179.61" y="463.5" ></text>
</g>
<g >
<title>kvm_send_userspace_msi (40 samples, 0.03%)</title><rect x="40.4" y="389" width="0.4" height="15.0" fill="rgb(245,60,32)" rx="2" ry="2" />
<text  x="43.45" y="399.5" ></text>
</g>
<g >
<title>ret_from_fork (12 samples, 0.01%)</title><rect x="20.5" y="517" width="0.1" height="15.0" fill="rgb(237,162,44)" rx="2" ry="2" />
<text  x="23.50" y="527.5" ></text>
</g>
<g >
<title>do_vfs_ioctl (841 samples, 0.65%)</title><rect x="33.2" y="437" width="7.6" height="15.0" fill="rgb(230,220,12)" rx="2" ry="2" />
<text  x="36.20" y="447.5" ></text>
</g>
<g >
<title>skip_emulated_instruction (26 samples, 0.02%)</title><rect x="34.6" y="357" width="0.2" height="15.0" fill="rgb(208,64,46)" rx="2" ry="2" />
<text  x="37.59" y="367.5" ></text>
</g>
<g >
<title>[newlogd] (14 samples, 0.01%)</title><rect x="21.3" y="357" width="0.1" height="15.0" fill="rgb(222,56,52)" rx="2" ry="2" />
<text  x="24.29" y="367.5" ></text>
</g>
<g >
<title>kvm_apic_accept_pic_intr (14 samples, 0.01%)</title><rect x="38.2" y="293" width="0.1" height="15.0" fill="rgb(248,227,28)" rx="2" ry="2" />
<text  x="41.18" y="303.5" ></text>
</g>
<g >
<title>vfs_readv (16 samples, 0.01%)</title><rect x="31.6" y="405" width="0.2" height="15.0" fill="rgb(241,227,6)" rx="2" ry="2" />
<text  x="34.61" y="415.5" ></text>
</g>
<g >
<title>do_syscall_64 (57 samples, 0.04%)</title><rect x="32.4" y="469" width="0.5" height="15.0" fill="rgb(248,169,24)" rx="2" ry="2" />
<text  x="35.41" y="479.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).huffmanBlock (130 samples, 0.10%)</title><rect x="13.1" y="101" width="1.2" height="15.0" fill="rgb(243,123,3)" rx="2" ry="2" />
<text  x="16.14" y="111.5" ></text>
</g>
<g >
<title>archive/tar.(*regFileReader).Read (279 samples, 0.21%)</title><rect x="13.0" y="213" width="2.6" height="15.0" fill="rgb(243,159,7)" rx="2" ry="2" />
<text  x="16.04" y="223.5" ></text>
</g>
<g >
<title>zfs (50 samples, 0.04%)</title><rect x="1189.5" y="533" width="0.5" height="15.0" fill="rgb(239,188,7)" rx="2" ry="2" />
<text  x="1192.54" y="543.5" ></text>
</g>
<g >
<title>zpl_read_common_iovec (15 samples, 0.01%)</title><rect x="31.6" y="341" width="0.2" height="15.0" fill="rgb(208,17,45)" rx="2" ry="2" />
<text  x="34.62" y="351.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (75 samples, 0.06%)</title><rect x="27.5" y="405" width="0.6" height="15.0" fill="rgb(227,192,9)" rx="2" ry="2" />
<text  x="30.45" y="415.5" ></text>
</g>
<g >
<title>kvm_apic_has_interrupt (49 samples, 0.04%)</title><rect x="37.7" y="309" width="0.4" height="15.0" fill="rgb(249,80,49)" rx="2" ry="2" />
<text  x="40.70" y="319.5" ></text>
</g>
<g >
<title>napi_gro_receive (24 samples, 0.02%)</title><rect x="1176.1" y="309" width="0.2" height="15.0" fill="rgb(228,223,6)" rx="2" ry="2" />
<text  x="1179.08" y="319.5" ></text>
</g>
<g >
<title>apic_has_pending_timer (31 samples, 0.02%)</title><rect x="36.8" y="341" width="0.3" height="15.0" fill="rgb(248,96,48)" rx="2" ry="2" />
<text  x="39.79" y="351.5" ></text>
</g>
<g >
<title>run_ksoftirqd (12 samples, 0.01%)</title><rect x="20.5" y="469" width="0.1" height="15.0" fill="rgb(247,12,27)" rx="2" ry="2" />
<text  x="23.50" y="479.5" ></text>
</g>
<g >
<title>z_wr_int_h (15 samples, 0.01%)</title><rect x="1178.8" y="533" width="0.2" height="15.0" fill="rgb(220,199,31)" rx="2" ry="2" />
<text  x="1181.83" y="543.5" ></text>
</g>
<g >
<title>dp_sync_taskq (25 samples, 0.02%)</title><rect x="18.0" y="533" width="0.2" height="15.0" fill="rgb(206,30,8)" rx="2" ry="2" />
<text  x="20.97" y="543.5" ></text>
</g>
<g >
<title>[zedbox] (89 samples, 0.07%)</title><rect x="1180.0" y="501" width="0.8" height="15.0" fill="rgb(226,91,38)" rx="2" ry="2" />
<text  x="1183.04" y="511.5" ></text>
</g>
<g >
<title>runtime.scang (14 samples, 0.01%)</title><rect x="10.3" y="405" width="0.1" height="15.0" fill="rgb(240,105,24)" rx="2" ry="2" />
<text  x="13.25" y="415.5" ></text>
</g>
<g >
<title>kvm_vcpu_check_block (403 samples, 0.31%)</title><rect x="36.0" y="357" width="3.7" height="15.0" fill="rgb(234,77,31)" rx="2" ry="2" />
<text  x="39.04" y="367.5" ></text>
</g>
<g >
<title>kvm_cpu_has_extint (18 samples, 0.01%)</title><rect x="38.1" y="309" width="0.2" height="15.0" fill="rgb(230,52,2)" rx="2" ry="2" />
<text  x="41.14" y="319.5" ></text>
</g>
<g >
<title>[unknown] (1,072 samples, 0.82%)</title><rect x="23.2" y="517" width="9.7" height="15.0" fill="rgb(225,209,38)" rx="2" ry="2" />
<text  x="26.21" y="527.5" ></text>
</g>
<g >
<title>pgrep (12 samples, 0.01%)</title><rect x="21.7" y="533" width="0.1" height="15.0" fill="rgb(232,150,34)" rx="2" ry="2" />
<text  x="24.72" y="543.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (57 samples, 0.04%)</title><rect x="32.4" y="485" width="0.5" height="15.0" fill="rgb(219,109,13)" rx="2" ry="2" />
<text  x="35.41" y="495.5" ></text>
</g>
<g >
<title>do_futex (18 samples, 0.01%)</title><rect x="1187.3" y="197" width="0.1" height="15.0" fill="rgb(233,12,45)" rx="2" ry="2" />
<text  x="1190.26" y="207.5" ></text>
</g>
<g >
<title>do_pwritev (24 samples, 0.02%)</title><rect x="22.5" y="469" width="0.2" height="15.0" fill="rgb(227,199,14)" rx="2" ry="2" />
<text  x="25.51" y="479.5" ></text>
</g>
<g >
<title>__sched_text_start (16 samples, 0.01%)</title><rect x="28.4" y="373" width="0.2" height="15.0" fill="rgb(228,148,49)" rx="2" ry="2" />
<text  x="31.41" y="383.5" ></text>
</g>
<g >
<title>vfs_write (34 samples, 0.03%)</title><rect x="15.6" y="133" width="0.3" height="15.0" fill="rgb(206,6,8)" rx="2" ry="2" />
<text  x="18.59" y="143.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/services/diff.(*service).Apply (414 samples, 0.32%)</title><rect x="12.9" y="405" width="3.8" height="15.0" fill="rgb(215,11,33)" rx="2" ry="2" />
<text  x="15.93" y="415.5" ></text>
</g>
<g >
<title>cpu_startup_entry (31,082 samples, 23.90%)</title><rect x="41.6" y="485" width="282.0" height="15.0" fill="rgb(254,147,34)" rx="2" ry="2" />
<text  x="44.57" y="495.5" >cpu_startup_entry</text>
</g>
<g >
<title>do_filp_open (12 samples, 0.01%)</title><rect x="16.0" y="133" width="0.1" height="15.0" fill="rgb(226,19,54)" rx="2" ry="2" />
<text  x="19.03" y="143.5" ></text>
</g>
<g >
<title>runtime.markroot (19 samples, 0.01%)</title><rect x="10.3" y="437" width="0.1" height="15.0" fill="rgb(226,203,25)" rx="2" ry="2" />
<text  x="13.25" y="447.5" ></text>
</g>
<g >
<title>[qemu-system-x86_64] (77 samples, 0.06%)</title><rect x="30.7" y="501" width="0.7" height="15.0" fill="rgb(236,193,42)" rx="2" ry="2" />
<text  x="33.68" y="511.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (68 samples, 0.05%)</title><rect x="27.5" y="389" width="0.6" height="15.0" fill="rgb(244,82,16)" rx="2" ry="2" />
<text  x="30.51" y="399.5" ></text>
</g>
<g >
<title>ksys_read (13 samples, 0.01%)</title><rect x="1188.0" y="245" width="0.2" height="15.0" fill="rgb(250,142,10)" rx="2" ry="2" />
<text  x="1191.04" y="255.5" ></text>
</g>
<g >
<title>do_syscall_64 (17 samples, 0.01%)</title><rect x="32.0" y="453" width="0.1" height="15.0" fill="rgb(231,37,16)" rx="2" ry="2" />
<text  x="34.98" y="463.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (38 samples, 0.03%)</title><rect x="26.7" y="389" width="0.4" height="15.0" fill="rgb(237,149,13)" rx="2" ry="2" />
<text  x="29.74" y="399.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/github.com/grpc-ecosystem/go-grpc-prometheus.(*ServerMetrics).StreamServerInterceptor.func1 (15 samples, 0.01%)</title><rect x="12.8" y="453" width="0.1" height="15.0" fill="rgb(244,184,43)" rx="2" ry="2" />
<text  x="15.79" y="463.5" ></text>
</g>
<g >
<title>dmu_read_uio_dbuf (12 samples, 0.01%)</title><rect x="31.6" y="309" width="0.1" height="15.0" fill="rgb(236,209,10)" rx="2" ry="2" />
<text  x="34.63" y="319.5" ></text>
</g>
<g >
<title>finish_task_switch (41 samples, 0.03%)</title><rect x="323.3" y="421" width="0.3" height="15.0" fill="rgb(206,82,44)" rx="2" ry="2" />
<text  x="326.26" y="431.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (19 samples, 0.01%)</title><rect x="1175.6" y="405" width="0.2" height="15.0" fill="rgb(225,152,49)" rx="2" ry="2" />
<text  x="1178.60" y="415.5" ></text>
</g>
<g >
<title>[jq] (59 samples, 0.05%)</title><rect x="19.7" y="501" width="0.6" height="15.0" fill="rgb(250,138,52)" rx="2" ry="2" />
<text  x="22.73" y="511.5" ></text>
</g>
<g >
<title>ksys_read (14 samples, 0.01%)</title><rect x="1187.5" y="213" width="0.1" height="15.0" fill="rgb(228,109,9)" rx="2" ry="2" />
<text  x="1190.49" y="223.5" ></text>
</g>
<g >
<title>do_filp_open (29 samples, 0.02%)</title><rect x="29.2" y="437" width="0.2" height="15.0" fill="rgb(218,141,9)" rx="2" ry="2" />
<text  x="32.17" y="447.5" ></text>
</g>
<g >
<title>thread_generic_wrapper (21 samples, 0.02%)</title><rect x="1177.6" y="485" width="0.2" height="15.0" fill="rgb(237,149,18)" rx="2" ry="2" />
<text  x="1180.65" y="495.5" ></text>
</g>
<g >
<title>kthread (82 samples, 0.06%)</title><rect x="1179.0" y="501" width="0.7" height="15.0" fill="rgb(225,63,0)" rx="2" ry="2" />
<text  x="1181.97" y="511.5" ></text>
</g>
<g >
<title>do_idle (31,081 samples, 23.90%)</title><rect x="41.6" y="469" width="282.0" height="15.0" fill="rgb(250,191,33)" rx="2" ry="2" />
<text  x="44.58" y="479.5" >do_idle</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (36 samples, 0.03%)</title><rect x="17.6" y="501" width="0.3" height="15.0" fill="rgb(249,17,2)" rx="2" ry="2" />
<text  x="20.60" y="511.5" ></text>
</g>
<g >
<title>vcpu_put (16 samples, 0.01%)</title><rect x="40.1" y="373" width="0.2" height="15.0" fill="rgb(251,229,36)" rx="2" ry="2" />
<text  x="43.14" y="383.5" ></text>
</g>
<g >
<title>do_syscall_64 (12 samples, 0.01%)</title><rect x="16.0" y="165" width="0.1" height="15.0" fill="rgb(254,201,53)" rx="2" ry="2" />
<text  x="19.03" y="175.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (16 samples, 0.01%)</title><rect x="1189.7" y="453" width="0.2" height="15.0" fill="rgb(216,54,14)" rx="2" ry="2" />
<text  x="1192.72" y="463.5" ></text>
</g>
<g >
<title>__cpuidle_text_start (31,023 samples, 23.86%)</title><rect x="41.6" y="453" width="281.5" height="15.0" fill="rgb(230,100,21)" rx="2" ry="2" />
<text  x="44.58" y="463.5" >__cpuidle_text_start</text>
</g>
<g >
<title>__srcu_read_lock (42 samples, 0.03%)</title><rect x="36.2" y="341" width="0.3" height="15.0" fill="rgb(213,114,13)" rx="2" ry="2" />
<text  x="39.16" y="351.5" ></text>
</g>
<g >
<title>__fget (92 samples, 0.07%)</title><rect x="24.9" y="405" width="0.9" height="15.0" fill="rgb(234,36,24)" rx="2" ry="2" />
<text  x="27.93" y="415.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).nextBlock (127 samples, 0.10%)</title><rect x="14.3" y="101" width="1.2" height="15.0" fill="rgb(237,144,19)" rx="2" ry="2" />
<text  x="17.34" y="111.5" ></text>
</g>
<g >
<title>do_futex (56 samples, 0.04%)</title><rect x="32.4" y="437" width="0.5" height="15.0" fill="rgb(238,11,42)" rx="2" ry="2" />
<text  x="35.41" y="447.5" ></text>
</g>
<g >
<title>finish_task_switch (106 samples, 0.08%)</title><rect x="1176.6" y="421" width="1.0" height="15.0" fill="rgb(216,123,40)" rx="2" ry="2" />
<text  x="1179.63" y="431.5" ></text>
</g>
<g >
<title>__kvm_set_msr (27 samples, 0.02%)</title><rect x="34.1" y="357" width="0.2" height="15.0" fill="rgb(248,128,11)" rx="2" ry="2" />
<text  x="37.09" y="367.5" ></text>
</g>
<g >
<title>fput_many (14 samples, 0.01%)</title><rect x="28.1" y="405" width="0.2" height="15.0" fill="rgb(236,53,8)" rx="2" ry="2" />
<text  x="31.14" y="415.5" ></text>
</g>
<g >
<title>do_syscall_64 (20 samples, 0.02%)</title><rect x="1188.5" y="309" width="0.2" height="15.0" fill="rgb(205,19,54)" rx="2" ry="2" />
<text  x="1191.54" y="319.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/diff/apply.(*fsApplier).Apply (414 samples, 0.32%)</title><rect x="12.9" y="357" width="3.8" height="15.0" fill="rgb(222,18,40)" rx="2" ry="2" />
<text  x="15.93" y="367.5" ></text>
</g>
<g >
<title>eventfd_write (57 samples, 0.04%)</title><rect x="29.7" y="421" width="0.5" height="15.0" fill="rgb(220,122,19)" rx="2" ry="2" />
<text  x="32.68" y="431.5" ></text>
</g>
<g >
<title>__do_sys_futex (18 samples, 0.01%)</title><rect x="1187.3" y="213" width="0.1" height="15.0" fill="rgb(238,50,21)" rx="2" ry="2" />
<text  x="1190.26" y="223.5" ></text>
</g>
<g >
<title>native_safe_halt (93,958 samples, 72.26%)</title><rect x="323.7" y="437" width="852.6" height="15.0" fill="rgb(254,20,39)" rx="2" ry="2" />
<text  x="326.67" y="447.5" >native_safe_halt</text>
</g>
<g >
<title>blk_done_softirq (14 samples, 0.01%)</title><rect x="1175.9" y="357" width="0.2" height="15.0" fill="rgb(252,59,10)" rx="2" ry="2" />
<text  x="1178.93" y="367.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (19 samples, 0.01%)</title><rect x="1189.1" y="373" width="0.1" height="15.0" fill="rgb(234,34,43)" rx="2" ry="2" />
<text  x="1192.07" y="383.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (24 samples, 0.02%)</title><rect x="22.5" y="421" width="0.2" height="15.0" fill="rgb(208,22,38)" rx="2" ry="2" />
<text  x="25.51" y="431.5" ></text>
</g>
<g >
<title>[zedbox] (698 samples, 0.54%)</title><rect x="1182.9" y="389" width="6.3" height="15.0" fill="rgb(244,184,20)" rx="2" ry="2" />
<text  x="1185.91" y="399.5" ></text>
</g>
<g >
<title>do_syscall_64 (35 samples, 0.03%)</title><rect x="15.6" y="165" width="0.3" height="15.0" fill="rgb(251,207,53)" rx="2" ry="2" />
<text  x="18.58" y="175.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (65 samples, 0.05%)</title><rect x="22.2" y="501" width="0.6" height="15.0" fill="rgb(246,207,28)" rx="2" ry="2" />
<text  x="25.17" y="511.5" ></text>
</g>
<g >
<title>kvm_vcpu_kick (20 samples, 0.02%)</title><rect x="34.1" y="245" width="0.2" height="15.0" fill="rgb(230,186,12)" rx="2" ry="2" />
<text  x="37.12" y="255.5" ></text>
</g>
<g >
<title>[zedbox] (204 samples, 0.16%)</title><rect x="1185.8" y="261" width="1.8" height="15.0" fill="rgb(221,165,29)" rx="2" ry="2" />
<text  x="1188.78" y="271.5" ></text>
</g>
<g >
<title>__fcheck_files (31 samples, 0.02%)</title><rect x="25.5" y="389" width="0.3" height="15.0" fill="rgb(228,220,2)" rx="2" ry="2" />
<text  x="28.47" y="399.5" ></text>
</g>
<g >
<title>[newlogd] (35 samples, 0.03%)</title><rect x="21.2" y="437" width="0.4" height="15.0" fill="rgb(241,137,10)" rx="2" ry="2" />
<text  x="24.24" y="447.5" ></text>
</g>
<g >
<title>[zedbox] (405 samples, 0.31%)</title><rect x="1184.8" y="309" width="3.7" height="15.0" fill="rgb(211,31,47)" rx="2" ry="2" />
<text  x="1187.79" y="319.5" ></text>
</g>
<g >
<title>kthread (15 samples, 0.01%)</title><rect x="1178.8" y="501" width="0.2" height="15.0" fill="rgb(206,95,47)" rx="2" ry="2" />
<text  x="1181.83" y="511.5" ></text>
</g>
<g >
<title>do_syscall_64 (680 samples, 0.52%)</title><rect x="24.1" y="469" width="6.1" height="15.0" fill="rgb(233,85,49)" rx="2" ry="2" />
<text  x="27.07" y="479.5" ></text>
</g>
<g >
<title>path_openat (12 samples, 0.01%)</title><rect x="16.0" y="117" width="0.1" height="15.0" fill="rgb(226,161,14)" rx="2" ry="2" />
<text  x="19.03" y="127.5" ></text>
</g>
<g >
<title>cpu_startup_entry (94,106 samples, 72.37%)</title><rect x="323.6" y="485" width="854.0" height="15.0" fill="rgb(208,202,35)" rx="2" ry="2" />
<text  x="326.63" y="495.5" >cpu_startup_entry</text>
</g>
<g >
<title>irq_exit (19 samples, 0.01%)</title><rect x="1175.6" y="389" width="0.2" height="15.0" fill="rgb(214,154,19)" rx="2" ry="2" />
<text  x="1178.60" y="399.5" ></text>
</g>
<g >
<title>do_iter_read (16 samples, 0.01%)</title><rect x="31.6" y="389" width="0.2" height="15.0" fill="rgb(240,129,38)" rx="2" ry="2" />
<text  x="34.61" y="399.5" ></text>
</g>
<g >
<title>zpl_iter_read (16 samples, 0.01%)</title><rect x="31.6" y="357" width="0.2" height="15.0" fill="rgb(243,125,7)" rx="2" ry="2" />
<text  x="34.61" y="367.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/diff/apply.(*readCounter).Read (278 samples, 0.21%)</title><rect x="13.0" y="197" width="2.6" height="15.0" fill="rgb(213,50,54)" rx="2" ry="2" />
<text  x="16.05" y="207.5" ></text>
</g>
<g >
<title>kvm_fetch_guest_virt (16 samples, 0.01%)</title><rect x="34.7" y="293" width="0.1" height="15.0" fill="rgb(237,129,11)" rx="2" ry="2" />
<text  x="37.67" y="303.5" ></text>
</g>
<g >
<title>abd_copy_off (18 samples, 0.01%)</title><rect x="1178.5" y="405" width="0.1" height="15.0" fill="rgb(223,207,5)" rx="2" ry="2" />
<text  x="1181.48" y="415.5" ></text>
</g>
<g >
<title>set_debugreg (12 samples, 0.01%)</title><rect x="40.2" y="341" width="0.1" height="15.0" fill="rgb(206,7,36)" rx="2" ry="2" />
<text  x="43.16" y="351.5" ></text>
</g>
<g >
<title>kvm_vm_ioctl (43 samples, 0.03%)</title><rect x="40.4" y="405" width="0.4" height="15.0" fill="rgb(244,14,51)" rx="2" ry="2" />
<text  x="43.44" y="415.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (41 samples, 0.03%)</title><rect x="1187.3" y="245" width="0.3" height="15.0" fill="rgb(209,201,2)" rx="2" ry="2" />
<text  x="1190.26" y="255.5" ></text>
</g>
<g >
<title>vdev_mirror_io_start (24 samples, 0.02%)</title><rect x="1179.3" y="437" width="0.3" height="15.0" fill="rgb(224,41,34)" rx="2" ry="2" />
<text  x="1182.35" y="447.5" ></text>
</g>
<g >
<title>kvm_arch_vcpu_ioctl_run (795 samples, 0.61%)</title><rect x="33.2" y="389" width="7.2" height="15.0" fill="rgb(218,60,8)" rx="2" ry="2" />
<text  x="36.22" y="399.5" ></text>
</g>
<g >
<title>[ld-musl-x86_64.so.1] (782 samples, 0.60%)</title><rect x="23.2" y="501" width="7.1" height="15.0" fill="rgb(217,136,48)" rx="2" ry="2" />
<text  x="26.21" y="511.5" ></text>
</g>
<g >
<title>__do_insn_fetch_bytes (18 samples, 0.01%)</title><rect x="34.7" y="309" width="0.1" height="15.0" fill="rgb(236,12,28)" rx="2" ry="2" />
<text  x="37.66" y="319.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (52 samples, 0.04%)</title><rect x="32.5" y="357" width="0.4" height="15.0" fill="rgb(246,10,26)" rx="2" ry="2" />
<text  x="35.45" y="367.5" ></text>
</g>
<g >
<title>[unknown] (79 samples, 0.06%)</title><rect x="10.6" y="501" width="0.8" height="15.0" fill="rgb(213,146,33)" rx="2" ry="2" />
<text  x="13.64" y="511.5" ></text>
</g>
<g >
<title>[newlogd] (22 samples, 0.02%)</title><rect x="21.3" y="389" width="0.2" height="15.0" fill="rgb(212,90,2)" rx="2" ry="2" />
<text  x="24.26" y="399.5" ></text>
</g>
<g >
<title>futex_wait (29 samples, 0.02%)</title><rect x="22.2" y="437" width="0.3" height="15.0" fill="rgb(212,22,5)" rx="2" ry="2" />
<text  x="25.20" y="447.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (24 samples, 0.02%)</title><rect x="1176.1" y="293" width="0.2" height="15.0" fill="rgb(254,62,4)" rx="2" ry="2" />
<text  x="1179.08" y="303.5" ></text>
</g>
<g >
<title>single_task_running (14 samples, 0.01%)</title><rect x="40.0" y="357" width="0.1" height="15.0" fill="rgb(223,172,16)" rx="2" ry="2" />
<text  x="42.96" y="367.5" ></text>
</g>
<g >
<title>[zedbox] (586 samples, 0.45%)</title><rect x="1183.6" y="357" width="5.3" height="15.0" fill="rgb(232,33,38)" rx="2" ry="2" />
<text  x="1186.57" y="367.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (852 samples, 0.66%)</title><rect x="33.2" y="501" width="7.7" height="15.0" fill="rgb(244,79,21)" rx="2" ry="2" />
<text  x="36.17" y="511.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (30 samples, 0.02%)</title><rect x="40.5" y="261" width="0.2" height="15.0" fill="rgb(243,36,20)" rx="2" ry="2" />
<text  x="43.45" y="271.5" ></text>
</g>
<g >
<title>compress/gzip.(*Reader).Read (277 samples, 0.21%)</title><rect x="13.1" y="133" width="2.5" height="15.0" fill="rgb(252,205,18)" rx="2" ry="2" />
<text  x="16.06" y="143.5" ></text>
</g>
<g >
<title>arc_write_ready (17 samples, 0.01%)</title><rect x="1179.1" y="437" width="0.2" height="15.0" fill="rgb(222,79,54)" rx="2" ry="2" />
<text  x="1182.14" y="447.5" ></text>
</g>
<g >
<title>ret_from_fork (15 samples, 0.01%)</title><rect x="1178.8" y="517" width="0.2" height="15.0" fill="rgb(245,221,34)" rx="2" ry="2" />
<text  x="1181.83" y="527.5" ></text>
</g>
<g >
<title>zpl_iter_write (34 samples, 0.03%)</title><rect x="15.6" y="101" width="0.3" height="15.0" fill="rgb(221,213,44)" rx="2" ry="2" />
<text  x="18.59" y="111.5" ></text>
</g>
<g >
<title>vfs_ioctl (16 samples, 0.01%)</title><rect x="1189.7" y="405" width="0.2" height="15.0" fill="rgb(226,127,51)" rx="2" ry="2" />
<text  x="1192.72" y="415.5" ></text>
</g>
<g >
<title>poll_freewait (101 samples, 0.08%)</title><rect x="27.4" y="421" width="1.0" height="15.0" fill="rgb(213,100,53)" rx="2" ry="2" />
<text  x="30.44" y="431.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive.openFile (25 samples, 0.02%)</title><rect x="16.0" y="245" width="0.2" height="15.0" fill="rgb(251,29,40)" rx="2" ry="2" />
<text  x="19.01" y="255.5" ></text>
</g>
<g >
<title>[newlogd] (18 samples, 0.01%)</title><rect x="21.3" y="373" width="0.1" height="15.0" fill="rgb(214,185,25)" rx="2" ry="2" />
<text  x="24.28" y="383.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).huffmanBlock (106 samples, 0.08%)</title><rect x="14.4" y="85" width="1.0" height="15.0" fill="rgb(242,84,32)" rx="2" ry="2" />
<text  x="17.39" y="95.5" ></text>
</g>
<g >
<title>sync_dnodes_task (13 samples, 0.01%)</title><rect x="18.0" y="469" width="0.1" height="15.0" fill="rgb(205,60,24)" rx="2" ry="2" />
<text  x="21.00" y="479.5" ></text>
</g>
<g >
<title>abd_iterate_func2 (18 samples, 0.01%)</title><rect x="1178.5" y="389" width="0.1" height="15.0" fill="rgb(212,187,26)" rx="2" ry="2" />
<text  x="1181.48" y="399.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (16 samples, 0.01%)</title><rect x="1178.3" y="421" width="0.1" height="15.0" fill="rgb(236,15,5)" rx="2" ry="2" />
<text  x="1181.28" y="431.5" ></text>
</g>
<g >
<title>zio_vdev_io_start (26 samples, 0.02%)</title><rect x="1179.3" y="453" width="0.3" height="15.0" fill="rgb(205,127,1)" rx="2" ry="2" />
<text  x="1182.33" y="463.5" ></text>
</g>
<g >
<title>kvm_irq_delivery_to_apic_fast (21 samples, 0.02%)</title><rect x="34.1" y="277" width="0.2" height="15.0" fill="rgb(209,173,27)" rx="2" ry="2" />
<text  x="37.11" y="287.5" ></text>
</g>
<g >
<title>x86_emulate_instruction (24 samples, 0.02%)</title><rect x="34.6" y="341" width="0.2" height="15.0" fill="rgb(239,193,29)" rx="2" ry="2" />
<text  x="37.61" y="351.5" ></text>
</g>
<g >
<title>zio_execute (77 samples, 0.06%)</title><rect x="1179.0" y="469" width="0.7" height="15.0" fill="rgb(213,121,12)" rx="2" ry="2" />
<text  x="1182.01" y="479.5" ></text>
</g>
<g >
<title>qemu-system-x86 (2,119 samples, 1.63%)</title><rect x="21.9" y="533" width="19.3" height="15.0" fill="rgb(238,33,9)" rx="2" ry="2" />
<text  x="24.92" y="543.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/diff/apply.apply.func1 (406 samples, 0.31%)</title><rect x="12.9" y="309" width="3.7" height="15.0" fill="rgb(206,86,48)" rx="2" ry="2" />
<text  x="15.93" y="319.5" ></text>
</g>
<g >
<title>[qemu-system-x86_64] (42 samples, 0.03%)</title><rect x="22.8" y="517" width="0.4" height="15.0" fill="rgb(254,0,37)" rx="2" ry="2" />
<text  x="25.83" y="527.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (16 samples, 0.01%)</title><rect x="31.6" y="373" width="0.2" height="15.0" fill="rgb(211,1,5)" rx="2" ry="2" />
<text  x="34.61" y="383.5" ></text>
</g>
<g >
<title>timekeeping_get_ns (113 samples, 0.09%)</title><rect x="35.0" y="341" width="1.0" height="15.0" fill="rgb(240,227,22)" rx="2" ry="2" />
<text  x="38.01" y="351.5" ></text>
</g>
<g >
<title>kvm_vcpu_kick (37 samples, 0.03%)</title><rect x="40.4" y="309" width="0.4" height="15.0" fill="rgb(240,211,33)" rx="2" ry="2" />
<text  x="43.45" y="319.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/github.com/containerd/continuity/fs.RootPath (18 samples, 0.01%)</title><rect x="16.4" y="261" width="0.1" height="15.0" fill="rgb(230,79,2)" rx="2" ry="2" />
<text  x="19.37" y="271.5" ></text>
</g>
<g >
<title>do_iter_write (24 samples, 0.02%)</title><rect x="22.5" y="437" width="0.2" height="15.0" fill="rgb(227,135,49)" rx="2" ry="2" />
<text  x="25.51" y="447.5" ></text>
</g>
<g >
<title>spa_sync (21 samples, 0.02%)</title><rect x="1177.6" y="453" width="0.2" height="15.0" fill="rgb(247,202,50)" rx="2" ry="2" />
<text  x="1180.65" y="463.5" ></text>
</g>
<g >
<title>[zedbox] (754 samples, 0.58%)</title><rect x="1182.5" y="405" width="6.9" height="15.0" fill="rgb(247,117,42)" rx="2" ry="2" />
<text  x="1185.51" y="415.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/gc/scheduler.(*gcScheduler).run (14 samples, 0.01%)</title><rect x="12.6" y="501" width="0.1" height="15.0" fill="rgb(219,29,53)" rx="2" ry="2" />
<text  x="15.56" y="511.5" ></text>
</g>
<g >
<title>eventfd_signal (47 samples, 0.04%)</title><rect x="33.4" y="309" width="0.4" height="15.0" fill="rgb(233,207,13)" rx="2" ry="2" />
<text  x="36.40" y="319.5" ></text>
</g>
<g >
<title>os.(*File).Write (36 samples, 0.03%)</title><rect x="15.6" y="229" width="0.3" height="15.0" fill="rgb(224,113,39)" rx="2" ry="2" />
<text  x="18.57" y="239.5" ></text>
</g>
<g >
<title>kvm_set_msi (40 samples, 0.03%)</title><rect x="40.4" y="373" width="0.4" height="15.0" fill="rgb(216,23,36)" rx="2" ry="2" />
<text  x="43.45" y="383.5" ></text>
</g>
<g >
<title>__apic_update_ppr (16 samples, 0.01%)</title><rect x="37.9" y="293" width="0.1" height="15.0" fill="rgb(206,44,40)" rx="2" ry="2" />
<text  x="40.88" y="303.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (18 samples, 0.01%)</title><rect x="1187.3" y="133" width="0.1" height="15.0" fill="rgb(222,206,7)" rx="2" ry="2" />
<text  x="1190.26" y="143.5" ></text>
</g>
<g >
<title>[zedbox] (24 samples, 0.02%)</title><rect x="1179.8" y="469" width="0.2" height="15.0" fill="rgb(208,35,34)" rx="2" ry="2" />
<text  x="1182.82" y="479.5" ></text>
</g>
<g >
<title>[jq] (117 samples, 0.09%)</title><rect x="18.6" y="517" width="1.1" height="15.0" fill="rgb(253,172,19)" rx="2" ry="2" />
<text  x="21.63" y="527.5" ></text>
</g>
<g >
<title>runtime.systemstack (41 samples, 0.03%)</title><rect x="10.2" y="485" width="0.4" height="15.0" fill="rgb(227,135,23)" rx="2" ry="2" />
<text  x="13.25" y="495.5" ></text>
</g>
<g >
<title>os.openFileNolog (15 samples, 0.01%)</title><rect x="16.0" y="213" width="0.1" height="15.0" fill="rgb(252,116,3)" rx="2" ry="2" />
<text  x="19.01" y="223.5" ></text>
</g>
<g >
<title>zfs_read (15 samples, 0.01%)</title><rect x="31.6" y="325" width="0.2" height="15.0" fill="rgb(217,8,12)" rx="2" ry="2" />
<text  x="34.62" y="335.5" ></text>
</g>
<g >
<title>ret_from_fork (82 samples, 0.06%)</title><rect x="1179.0" y="517" width="0.7" height="15.0" fill="rgb(251,32,4)" rx="2" ry="2" />
<text  x="1181.97" y="527.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (22 samples, 0.02%)</title><rect x="28.4" y="405" width="0.2" height="15.0" fill="rgb(235,199,27)" rx="2" ry="2" />
<text  x="31.36" y="415.5" ></text>
</g>
<g >
<title>ret_from_fork (19 samples, 0.01%)</title><rect x="20.6" y="517" width="0.2" height="15.0" fill="rgb(210,86,39)" rx="2" ry="2" />
<text  x="23.61" y="527.5" ></text>
</g>
<g >
<title>try_to_wake_up (18 samples, 0.01%)</title><rect x="1187.3" y="149" width="0.1" height="15.0" fill="rgb(224,72,1)" rx="2" ry="2" />
<text  x="1190.26" y="159.5" ></text>
</g>
<g >
<title>ksys_write (67 samples, 0.05%)</title><rect x="29.6" y="453" width="0.6" height="15.0" fill="rgb(228,30,36)" rx="2" ry="2" />
<text  x="32.64" y="463.5" ></text>
</g>
<g >
<title>finish_task_switch (27 samples, 0.02%)</title><rect x="39.7" y="325" width="0.3" height="15.0" fill="rgb(226,218,13)" rx="2" ry="2" />
<text  x="42.71" y="335.5" ></text>
</g>
<g >
<title>[zedbox] (48 samples, 0.04%)</title><rect x="1186.6" y="197" width="0.4" height="15.0" fill="rgb(222,150,6)" rx="2" ry="2" />
<text  x="1189.55" y="207.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive.applyNaive (406 samples, 0.31%)</title><rect x="12.9" y="277" width="3.7" height="15.0" fill="rgb(230,12,4)" rx="2" ry="2" />
<text  x="15.93" y="287.5" ></text>
</g>
<g >
<title>inet_recvmsg (12 samples, 0.01%)</title><rect x="1186.8" y="53" width="0.1" height="15.0" fill="rgb(247,25,46)" rx="2" ry="2" />
<text  x="1189.83" y="63.5" ></text>
</g>
<g >
<title>schedule (17 samples, 0.01%)</title><rect x="28.4" y="389" width="0.2" height="15.0" fill="rgb(231,219,0)" rx="2" ry="2" />
<text  x="31.40" y="399.5" ></text>
</g>
<g >
<title>do_sys_open (42 samples, 0.03%)</title><rect x="29.1" y="453" width="0.4" height="15.0" fill="rgb(222,222,29)" rx="2" ry="2" />
<text  x="32.13" y="463.5" ></text>
</g>
<g >
<title>futex_wake (18 samples, 0.01%)</title><rect x="1187.3" y="181" width="0.1" height="15.0" fill="rgb(252,148,20)" rx="2" ry="2" />
<text  x="1190.26" y="191.5" ></text>
</g>
<g >
<title>crypto/sha256.block (130 samples, 0.10%)</title><rect x="11.4" y="501" width="1.1" height="15.0" fill="rgb(244,17,26)" rx="2" ry="2" />
<text  x="14.36" y="511.5" ></text>
</g>
<g >
<title>__srcu_read_unlock (27 samples, 0.02%)</title><rect x="36.5" y="341" width="0.3" height="15.0" fill="rgb(228,228,3)" rx="2" ry="2" />
<text  x="39.54" y="351.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (20 samples, 0.02%)</title><rect x="34.1" y="213" width="0.2" height="15.0" fill="rgb(229,83,13)" rx="2" ry="2" />
<text  x="37.12" y="223.5" ></text>
</g>
<g >
<title>kvm_vcpu_block (578 samples, 0.44%)</title><rect x="34.8" y="373" width="5.3" height="15.0" fill="rgb(223,4,15)" rx="2" ry="2" />
<text  x="37.84" y="383.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/github.com/grpc-ecosystem/go-grpc-prometheus.(*ServerMetrics).UnaryServerInterceptor.func1 (415 samples, 0.32%)</title><rect x="12.9" y="437" width="3.8" height="15.0" fill="rgb(250,165,29)" rx="2" ry="2" />
<text  x="15.93" y="447.5" ></text>
</g>
<g >
<title>__raw_spin_unlock_irq (41 samples, 0.03%)</title><rect x="323.3" y="405" width="0.3" height="15.0" fill="rgb(241,141,12)" rx="2" ry="2" />
<text  x="326.26" y="415.5" ></text>
</g>
<g >
<title>schedule_idle (43 samples, 0.03%)</title><rect x="323.2" y="453" width="0.4" height="15.0" fill="rgb(228,148,44)" rx="2" ry="2" />
<text  x="326.24" y="463.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (12 samples, 0.01%)</title><rect x="20.5" y="453" width="0.1" height="15.0" fill="rgb(215,31,15)" rx="2" ry="2" />
<text  x="23.50" y="463.5" ></text>
</g>
<g >
<title>dnsmasq (109 samples, 0.08%)</title><rect x="17.0" y="533" width="1.0" height="15.0" fill="rgb(222,196,50)" rx="2" ry="2" />
<text  x="19.98" y="543.5" ></text>
</g>
<g >
<title>vdev_queue_io_done (42 samples, 0.03%)</title><rect x="1178.4" y="437" width="0.4" height="15.0" fill="rgb(209,224,49)" rx="2" ry="2" />
<text  x="1181.45" y="447.5" ></text>
</g>
<g >
<title>zio_done (38 samples, 0.03%)</title><rect x="1178.1" y="453" width="0.3" height="15.0" fill="rgb(232,71,35)" rx="2" ry="2" />
<text  x="1181.08" y="463.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (20 samples, 0.02%)</title><rect x="1188.9" y="357" width="0.2" height="15.0" fill="rgb(249,45,12)" rx="2" ry="2" />
<text  x="1191.88" y="367.5" ></text>
</g>
<g >
<title>ioeventfd_write (47 samples, 0.04%)</title><rect x="33.4" y="325" width="0.4" height="15.0" fill="rgb(229,14,29)" rx="2" ry="2" />
<text  x="36.40" y="335.5" ></text>
</g>
<g >
<title>net_rx_action (29 samples, 0.02%)</title><rect x="1176.1" y="357" width="0.2" height="15.0" fill="rgb(213,161,36)" rx="2" ry="2" />
<text  x="1179.05" y="367.5" ></text>
</g>
<g >
<title>__do_sys_ppoll (517 samples, 0.40%)</title><rect x="24.1" y="453" width="4.7" height="15.0" fill="rgb(240,205,29)" rx="2" ry="2" />
<text  x="27.12" y="463.5" ></text>
</g>
<g >
<title>zpl_iter_write (24 samples, 0.02%)</title><rect x="22.5" y="405" width="0.2" height="15.0" fill="rgb(217,191,1)" rx="2" ry="2" />
<text  x="25.51" y="415.5" ></text>
</g>
<g >
<title>ip6tables (20 samples, 0.02%)</title><rect x="18.2" y="533" width="0.2" height="15.0" fill="rgb(241,177,13)" rx="2" ry="2" />
<text  x="21.22" y="543.5" ></text>
</g>
<g >
<title>bufio.(*Reader).ReadByte (23 samples, 0.02%)</title><rect x="14.1" y="69" width="0.2" height="15.0" fill="rgb(240,62,26)" rx="2" ry="2" />
<text  x="17.06" y="79.5" ></text>
</g>
<g >
<title>zio_nowait (19 samples, 0.01%)</title><rect x="1179.4" y="421" width="0.1" height="15.0" fill="rgb(216,50,0)" rx="2" ry="2" />
<text  x="1182.36" y="431.5" ></text>
</g>
<g >
<title>abd_copy_from_buf_off_cb (13 samples, 0.01%)</title><rect x="1179.1" y="389" width="0.2" height="15.0" fill="rgb(220,10,20)" rx="2" ry="2" />
<text  x="1182.14" y="399.5" ></text>
</g>
<g >
<title>do_syscall_64 (12 samples, 0.01%)</title><rect x="1186.8" y="133" width="0.1" height="15.0" fill="rgb(239,210,11)" rx="2" ry="2" />
<text  x="1189.83" y="143.5" ></text>
</g>
<g >
<title>vmx_vcpu_load (12 samples, 0.01%)</title><rect x="39.8" y="293" width="0.1" height="15.0" fill="rgb(212,181,18)" rx="2" ry="2" />
<text  x="42.83" y="303.5" ></text>
</g>
<g >
<title>zio_write_compress (16 samples, 0.01%)</title><rect x="1179.6" y="453" width="0.1" height="15.0" fill="rgb(213,117,26)" rx="2" ry="2" />
<text  x="1182.56" y="463.5" ></text>
</g>
<g >
<title>fstatat (17 samples, 0.01%)</title><rect x="32.0" y="485" width="0.1" height="15.0" fill="rgb(247,10,26)" rx="2" ry="2" />
<text  x="34.98" y="495.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/api/services/diff/v1._Diff_Apply_Handler (415 samples, 0.32%)</title><rect x="12.9" y="453" width="3.8" height="15.0" fill="rgb(243,202,46)" rx="2" ry="2" />
<text  x="15.93" y="463.5" ></text>
</g>
<g >
<title>[ld-musl-x86_64.so.1] (16 samples, 0.01%)</title><rect x="31.6" y="469" width="0.2" height="15.0" fill="rgb(224,182,23)" rx="2" ry="2" />
<text  x="34.61" y="479.5" ></text>
</g>
<g >
<title>vdev_queue_io (12 samples, 0.01%)</title><rect x="1179.4" y="389" width="0.1" height="15.0" fill="rgb(244,188,30)" rx="2" ry="2" />
<text  x="1182.42" y="399.5" ></text>
</g>
<g >
<title>containerd (684 samples, 0.53%)</title><rect x="10.6" y="533" width="6.3" height="15.0" fill="rgb(231,78,28)" rx="2" ry="2" />
<text  x="13.64" y="543.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).huffSym (73 samples, 0.06%)</title><rect x="13.6" y="85" width="0.7" height="15.0" fill="rgb(238,38,34)" rx="2" ry="2" />
<text  x="16.60" y="95.5" ></text>
</g>
<g >
<title>__raw_spin_unlock_irq (55 samples, 0.04%)</title><rect x="29.7" y="405" width="0.5" height="15.0" fill="rgb(233,162,27)" rx="2" ry="2" />
<text  x="32.69" y="415.5" ></text>
</g>
<g >
<title>[zedbox] (643 samples, 0.49%)</title><rect x="1183.2" y="373" width="5.9" height="15.0" fill="rgb(212,216,28)" rx="2" ry="2" />
<text  x="1186.23" y="383.5" ></text>
</g>
<g >
<title>kvm_skip_emulated_instruction (29 samples, 0.02%)</title><rect x="34.6" y="373" width="0.2" height="15.0" fill="rgb(207,83,5)" rx="2" ry="2" />
<text  x="37.57" y="383.5" ></text>
</g>
<g >
<title>[zedbox] (21 samples, 0.02%)</title><rect x="1179.8" y="421" width="0.2" height="15.0" fill="rgb(230,58,20)" rx="2" ry="2" />
<text  x="1182.85" y="431.5" ></text>
</g>
<g >
<title>kvm_set_msr_common (26 samples, 0.02%)</title><rect x="34.1" y="325" width="0.2" height="15.0" fill="rgb(238,135,11)" rx="2" ry="2" />
<text  x="37.10" y="335.5" ></text>
</g>
<g >
<title>vfs_read (12 samples, 0.01%)</title><rect x="1186.8" y="101" width="0.1" height="15.0" fill="rgb(212,190,18)" rx="2" ry="2" />
<text  x="1189.83" y="111.5" ></text>
</g>
<g >
<title>dmu_read_uio_dnode (12 samples, 0.01%)</title><rect x="31.6" y="293" width="0.1" height="15.0" fill="rgb(211,142,13)" rx="2" ry="2" />
<text  x="34.63" y="303.5" ></text>
</g>
<g >
<title>handle_ept_misconfig (52 samples, 0.04%)</title><rect x="33.4" y="373" width="0.4" height="15.0" fill="rgb(219,126,35)" rx="2" ry="2" />
<text  x="36.38" y="383.5" ></text>
</g>
<g >
<title>__apic_accept_irq (20 samples, 0.02%)</title><rect x="34.1" y="261" width="0.2" height="15.0" fill="rgb(240,135,44)" rx="2" ry="2" />
<text  x="37.12" y="271.5" ></text>
</g>
<g >
<title>[unknown] (114 samples, 0.09%)</title><rect x="1179.8" y="517" width="1.1" height="15.0" fill="rgb(221,175,0)" rx="2" ry="2" />
<text  x="1182.82" y="527.5" ></text>
</g>
<g >
<title>__sched_text_start (41 samples, 0.03%)</title><rect x="323.3" y="437" width="0.3" height="15.0" fill="rgb(242,148,53)" rx="2" ry="2" />
<text  x="326.26" y="447.5" ></text>
</g>
<g >
<title>ktime_get (125 samples, 0.10%)</title><rect x="34.9" y="357" width="1.1" height="15.0" fill="rgb(246,130,9)" rx="2" ry="2" />
<text  x="37.90" y="367.5" ></text>
</g>
<g >
<title>do_syscall_64 (20 samples, 0.02%)</title><rect x="1188.9" y="341" width="0.2" height="15.0" fill="rgb(231,175,40)" rx="2" ry="2" />
<text  x="1191.88" y="351.5" ></text>
</g>
<g >
<title>zio_taskq_dispatch (16 samples, 0.01%)</title><rect x="1178.3" y="437" width="0.1" height="15.0" fill="rgb(254,212,45)" rx="2" ry="2" />
<text  x="1181.28" y="447.5" ></text>
</g>
<g >
<title>__pollwait (45 samples, 0.03%)</title><rect x="26.3" y="405" width="0.4" height="15.0" fill="rgb(253,26,43)" rx="2" ry="2" />
<text  x="29.28" y="415.5" ></text>
</g>
<g >
<title>zio_vdev_io_start (19 samples, 0.01%)</title><rect x="1179.4" y="405" width="0.1" height="15.0" fill="rgb(231,173,0)" rx="2" ry="2" />
<text  x="1182.36" y="415.5" ></text>
</g>
<g >
<title>zio_compress_data (15 samples, 0.01%)</title><rect x="1179.6" y="437" width="0.1" height="15.0" fill="rgb(247,53,50)" rx="2" ry="2" />
<text  x="1182.57" y="447.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (27 samples, 0.02%)</title><rect x="1176.3" y="453" width="0.3" height="15.0" fill="rgb(236,142,12)" rx="2" ry="2" />
<text  x="1179.34" y="463.5" ></text>
</g>
<g >
<title>scsi_io_completion (14 samples, 0.01%)</title><rect x="1175.9" y="341" width="0.2" height="15.0" fill="rgb(236,178,8)" rx="2" ry="2" />
<text  x="1178.93" y="351.5" ></text>
</g>
<g >
<title>vmx_set_msr (27 samples, 0.02%)</title><rect x="34.1" y="341" width="0.2" height="15.0" fill="rgb(229,156,34)" rx="2" ry="2" />
<text  x="37.09" y="351.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/services/content/contentserver.(*service).Write (15 samples, 0.01%)</title><rect x="12.8" y="421" width="0.1" height="15.0" fill="rgb(240,40,48)" rx="2" ry="2" />
<text  x="15.79" y="431.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/diff/walking/plugin.(*diffPlugin).Apply (414 samples, 0.32%)</title><rect x="12.9" y="373" width="3.8" height="15.0" fill="rgb(217,110,1)" rx="2" ry="2" />
<text  x="15.93" y="383.5" ></text>
</g>
<g >
<title>[zedbox] (447 samples, 0.34%)</title><rect x="1184.5" y="325" width="4.0" height="15.0" fill="rgb(216,214,0)" rx="2" ry="2" />
<text  x="1187.48" y="335.5" ></text>
</g>
<g >
<title>ksys_write (34 samples, 0.03%)</title><rect x="15.6" y="149" width="0.3" height="15.0" fill="rgb(231,89,26)" rx="2" ry="2" />
<text  x="18.59" y="159.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (35 samples, 0.03%)</title><rect x="15.6" y="181" width="0.3" height="15.0" fill="rgb(206,76,54)" rx="2" ry="2" />
<text  x="18.58" y="191.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (23 samples, 0.02%)</title><rect x="1187.6" y="261" width="0.2" height="15.0" fill="rgb(239,108,12)" rx="2" ry="2" />
<text  x="1190.63" y="271.5" ></text>
</g>
<g >
<title>taskq_thread (15 samples, 0.01%)</title><rect x="1178.8" y="485" width="0.2" height="15.0" fill="rgb(238,35,15)" rx="2" ry="2" />
<text  x="1181.83" y="495.5" ></text>
</g>
<g >
<title>do_syscall_64 (19 samples, 0.01%)</title><rect x="1189.1" y="357" width="0.1" height="15.0" fill="rgb(246,68,2)" rx="2" ry="2" />
<text  x="1192.07" y="367.5" ></text>
</g>
<g >
<title>ksys_read (12 samples, 0.01%)</title><rect x="1187.7" y="229" width="0.1" height="15.0" fill="rgb(213,164,17)" rx="2" ry="2" />
<text  x="1190.71" y="239.5" ></text>
</g>
<g >
<title>sem_post (62 samples, 0.05%)</title><rect x="32.4" y="501" width="0.5" height="15.0" fill="rgb(205,143,15)" rx="2" ry="2" />
<text  x="35.37" y="511.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (12 samples, 0.01%)</title><rect x="20.5" y="485" width="0.1" height="15.0" fill="rgb(235,112,25)" rx="2" ry="2" />
<text  x="23.50" y="495.5" ></text>
</g>
<g >
<title>jq (195 samples, 0.15%)</title><rect x="18.6" y="533" width="1.8" height="15.0" fill="rgb(219,185,2)" rx="2" ry="2" />
<text  x="21.63" y="543.5" ></text>
</g>
<g >
<title>schedule (29 samples, 0.02%)</title><rect x="39.7" y="357" width="0.3" height="15.0" fill="rgb(218,94,35)" rx="2" ry="2" />
<text  x="42.69" y="367.5" ></text>
</g>
<g >
<title>do_preadv (16 samples, 0.01%)</title><rect x="31.6" y="421" width="0.2" height="15.0" fill="rgb(242,202,17)" rx="2" ry="2" />
<text  x="34.61" y="431.5" ></text>
</g>
<g >
<title>__raw_spin_unlock_irq (106 samples, 0.08%)</title><rect x="1176.6" y="405" width="1.0" height="15.0" fill="rgb(222,83,38)" rx="2" ry="2" />
<text  x="1179.63" y="415.5" ></text>
</g>
<g >
<title>swapper (125,190 samples, 96.28%)</title><rect x="41.6" y="533" width="1136.0" height="15.0" fill="rgb(221,115,41)" rx="2" ry="2" />
<text  x="44.55" y="543.5" >swapper</text>
</g>
<g >
<title>virtnet_poll (28 samples, 0.02%)</title><rect x="1176.1" y="341" width="0.2" height="15.0" fill="rgb(215,134,52)" rx="2" ry="2" />
<text  x="1179.06" y="351.5" ></text>
</g>
<g >
<title>runtime.gcDrain (41 samples, 0.03%)</title><rect x="10.2" y="453" width="0.4" height="15.0" fill="rgb(234,47,45)" rx="2" ry="2" />
<text  x="13.25" y="463.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/diff.(*compressedProcessor).Read (277 samples, 0.21%)</title><rect x="13.1" y="165" width="2.5" height="15.0" fill="rgb(254,9,18)" rx="2" ry="2" />
<text  x="16.06" y="175.5" ></text>
</g>
<g >
<title>do_sys_poll (511 samples, 0.39%)</title><rect x="24.1" y="437" width="4.7" height="15.0" fill="rgb(245,192,31)" rx="2" ry="2" />
<text  x="27.12" y="447.5" ></text>
</g>
<g >
<title>wake_up_q (53 samples, 0.04%)</title><rect x="32.4" y="405" width="0.5" height="15.0" fill="rgb(251,130,49)" rx="2" ry="2" />
<text  x="35.44" y="415.5" ></text>
</g>
<g >
<title>kthreadd (19 samples, 0.01%)</title><rect x="20.6" y="533" width="0.2" height="15.0" fill="rgb(241,184,10)" rx="2" ry="2" />
<text  x="23.61" y="543.5" ></text>
</g>
<g >
<title>start_kernel (31,082 samples, 23.90%)</title><rect x="41.6" y="501" width="282.0" height="15.0" fill="rgb(247,161,1)" rx="2" ry="2" />
<text  x="44.57" y="511.5" >start_kernel</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.01%)</title><rect x="1187.1" y="229" width="0.2" height="15.0" fill="rgb(241,203,5)" rx="2" ry="2" />
<text  x="1190.12" y="239.5" ></text>
</g>
<g >
<title>[ld-musl-x86_64.so.1] (94 samples, 0.07%)</title><rect x="21.9" y="517" width="0.9" height="15.0" fill="rgb(206,182,5)" rx="2" ry="2" />
<text  x="24.94" y="527.5" ></text>
</g>
<g >
<title>[unknown] (68 samples, 0.05%)</title><rect x="19.7" y="517" width="0.6" height="15.0" fill="rgb(212,23,15)" rx="2" ry="2" />
<text  x="22.73" y="527.5" ></text>
</g>
<g >
<title>new_sync_write (34 samples, 0.03%)</title><rect x="15.6" y="117" width="0.3" height="15.0" fill="rgb(219,23,8)" rx="2" ry="2" />
<text  x="18.59" y="127.5" ></text>
</g>
<g >
<title>[zedbox] (952 samples, 0.73%)</title><rect x="1180.9" y="485" width="8.6" height="15.0" fill="rgb(229,197,19)" rx="2" ry="2" />
<text  x="1183.89" y="495.5" ></text>
</g>
<g >
<title>ioctl (866 samples, 0.67%)</title><rect x="33.0" y="517" width="7.9" height="15.0" fill="rgb(236,167,25)" rx="2" ry="2" />
<text  x="36.04" y="527.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.01%)</title><rect x="1186.8" y="149" width="0.1" height="15.0" fill="rgb(212,87,11)" rx="2" ry="2" />
<text  x="1189.83" y="159.5" ></text>
</g>
<g >
<title>[unknown] (32 samples, 0.02%)</title><rect x="1189.6" y="517" width="0.3" height="15.0" fill="rgb(227,132,13)" rx="2" ry="2" />
<text  x="1192.61" y="527.5" ></text>
</g>
<g >
<title>[unknown] (52 samples, 0.04%)</title><rect x="10.1" y="517" width="0.5" height="15.0" fill="rgb(222,105,46)" rx="2" ry="2" />
<text  x="13.15" y="527.5" ></text>
</g>
<g >
<title>kthread (96 samples, 0.07%)</title><rect x="1178.0" y="501" width="0.8" height="15.0" fill="rgb(247,57,12)" rx="2" ry="2" />
<text  x="1180.96" y="511.5" ></text>
</g>
<g >
<title>vfs_writev (24 samples, 0.02%)</title><rect x="22.5" y="453" width="0.2" height="15.0" fill="rgb(244,159,28)" rx="2" ry="2" />
<text  x="25.51" y="463.5" ></text>
</g>
<g >
<title>zio_vdev_io_done (42 samples, 0.03%)</title><rect x="1178.4" y="453" width="0.4" height="15.0" fill="rgb(219,90,11)" rx="2" ry="2" />
<text  x="1181.45" y="463.5" ></text>
</g>
<g >
<title>[newlogd] (37 samples, 0.03%)</title><rect x="21.2" y="517" width="0.4" height="15.0" fill="rgb(210,27,1)" rx="2" ry="2" />
<text  x="24.23" y="527.5" ></text>
</g>
<g >
<title>kvm_arch_vcpu_load (13 samples, 0.01%)</title><rect x="39.8" y="309" width="0.1" height="15.0" fill="rgb(236,191,33)" rx="2" ry="2" />
<text  x="42.82" y="319.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/google.golang.org/grpc.(*Server).processStreamingRPC (15 samples, 0.01%)</title><rect x="12.8" y="469" width="0.1" height="15.0" fill="rgb(234,55,51)" rx="2" ry="2" />
<text  x="15.79" y="479.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive.createTarFile (368 samples, 0.28%)</title><rect x="13.0" y="261" width="3.4" height="15.0" fill="rgb(224,220,39)" rx="2" ry="2" />
<text  x="16.01" y="271.5" ></text>
</g>
<g >
<title>memmove (13 samples, 0.01%)</title><rect x="41.0" y="517" width="0.1" height="15.0" fill="rgb(236,69,54)" rx="2" ry="2" />
<text  x="44.02" y="527.5" ></text>
</g>
<g >
<title>z_wr_int (96 samples, 0.07%)</title><rect x="1178.0" y="533" width="0.8" height="15.0" fill="rgb(229,220,24)" rx="2" ry="2" />
<text  x="1180.96" y="543.5" ></text>
</g>
<g >
<title>do_syscall_64 (62 samples, 0.05%)</title><rect x="22.2" y="485" width="0.5" height="15.0" fill="rgb(242,43,19)" rx="2" ry="2" />
<text  x="25.17" y="495.5" ></text>
</g>
<g >
<title>all (130,031 samples, 100%)</title><rect x="10.0" y="549" width="1180.0" height="15.0" fill="rgb(245,209,14)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>syscall.Syscall (36 samples, 0.03%)</title><rect x="15.6" y="197" width="0.3" height="15.0" fill="rgb(224,126,18)" rx="2" ry="2" />
<text  x="18.57" y="207.5" ></text>
</g>
<g >
<title>[zedbox] (23 samples, 0.02%)</title><rect x="1179.8" y="437" width="0.2" height="15.0" fill="rgb(211,128,8)" rx="2" ry="2" />
<text  x="1182.83" y="447.5" ></text>
</g>
<g >
<title>tcp_recvmsg (12 samples, 0.01%)</title><rect x="1186.8" y="37" width="0.1" height="15.0" fill="rgb(215,215,39)" rx="2" ry="2" />
<text  x="1189.83" y="47.5" ></text>
</g>
<g >
<title>try_to_wake_up (52 samples, 0.04%)</title><rect x="32.5" y="389" width="0.4" height="15.0" fill="rgb(249,89,29)" rx="2" ry="2" />
<text  x="35.45" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (20 samples, 0.02%)</title><rect x="1188.5" y="325" width="0.2" height="15.0" fill="rgb(216,175,44)" rx="2" ry="2" />
<text  x="1191.54" y="335.5" ></text>
</g>
<g >
<title>[unknown] (14 samples, 0.01%)</title><rect x="31.8" y="469" width="0.1" height="15.0" fill="rgb(219,98,16)" rx="2" ry="2" />
<text  x="34.81" y="479.5" ></text>
</g>
<g >
<title>zio_execute (82 samples, 0.06%)</title><rect x="1178.1" y="469" width="0.7" height="15.0" fill="rgb(220,41,45)" rx="2" ry="2" />
<text  x="1181.08" y="479.5" ></text>
</g>
<g >
<title>bufio.(*Reader).ReadByte (21 samples, 0.02%)</title><rect x="15.1" y="53" width="0.2" height="15.0" fill="rgb(207,92,6)" rx="2" ry="2" />
<text  x="18.14" y="63.5" ></text>
</g>
<g >
<title>z_wr_iss (82 samples, 0.06%)</title><rect x="1179.0" y="533" width="0.7" height="15.0" fill="rgb(252,70,34)" rx="2" ry="2" />
<text  x="1181.97" y="543.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker.func2 (41 samples, 0.03%)</title><rect x="10.2" y="469" width="0.4" height="15.0" fill="rgb(214,22,21)" rx="2" ry="2" />
<text  x="13.25" y="479.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (47 samples, 0.04%)</title><rect x="33.4" y="293" width="0.4" height="15.0" fill="rgb(216,90,40)" rx="2" ry="2" />
<text  x="36.40" y="303.5" ></text>
</g>
<g >
<title>arc_write_done (12 samples, 0.01%)</title><rect x="1178.1" y="437" width="0.1" height="15.0" fill="rgb(252,29,20)" rx="2" ry="2" />
<text  x="1181.12" y="447.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).Read (275 samples, 0.21%)</title><rect x="13.1" y="117" width="2.5" height="15.0" fill="rgb(215,155,33)" rx="2" ry="2" />
<text  x="16.06" y="127.5" ></text>
</g>
<g >
<title>runtime.systemstack (34 samples, 0.03%)</title><rect x="11.0" y="485" width="0.3" height="15.0" fill="rgb(245,7,41)" rx="2" ry="2" />
<text  x="13.97" y="495.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/diff/apply.apply (414 samples, 0.32%)</title><rect x="12.9" y="341" width="3.8" height="15.0" fill="rgb(207,186,11)" rx="2" ry="2" />
<text  x="15.93" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.01%)</title><rect x="32.0" y="469" width="0.1" height="15.0" fill="rgb(246,105,54)" rx="2" ry="2" />
<text  x="34.98" y="479.5" ></text>
</g>
<g >
<title>ksys_ioctl (844 samples, 0.65%)</title><rect x="33.2" y="453" width="7.6" height="15.0" fill="rgb(237,71,13)" rx="2" ry="2" />
<text  x="36.18" y="463.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (19 samples, 0.01%)</title><rect x="1175.6" y="373" width="0.2" height="15.0" fill="rgb(207,81,37)" rx="2" ry="2" />
<text  x="1178.60" y="383.5" ></text>
</g>
<g >
<title>ksys_ioctl (16 samples, 0.01%)</title><rect x="1189.7" y="437" width="0.2" height="15.0" fill="rgb(217,134,50)" rx="2" ry="2" />
<text  x="1192.72" y="447.5" ></text>
</g>
<g >
<title>scsi_end_request (14 samples, 0.01%)</title><rect x="1175.9" y="325" width="0.2" height="15.0" fill="rgb(245,61,51)" rx="2" ry="2" />
<text  x="1178.93" y="335.5" ></text>
</g>
<g >
<title>vfs_write (63 samples, 0.05%)</title><rect x="29.7" y="437" width="0.5" height="15.0" fill="rgb(241,150,4)" rx="2" ry="2" />
<text  x="32.67" y="447.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (44 samples, 0.03%)</title><rect x="26.7" y="405" width="0.4" height="15.0" fill="rgb(253,12,2)" rx="2" ry="2" />
<text  x="29.69" y="415.5" ></text>
</g>
<g >
<title>runtime.sysmon (15 samples, 0.01%)</title><rect x="10.8" y="485" width="0.2" height="15.0" fill="rgb(236,185,49)" rx="2" ry="2" />
<text  x="13.83" y="495.5" ></text>
</g>
<g >
<title>do_vfs_ioctl (16 samples, 0.01%)</title><rect x="1189.7" y="421" width="0.2" height="15.0" fill="rgb(252,17,46)" rx="2" ry="2" />
<text  x="1192.72" y="431.5" ></text>
</g>
<g >
<title>__sched_text_start (29 samples, 0.02%)</title><rect x="39.7" y="341" width="0.3" height="15.0" fill="rgb(206,196,48)" rx="2" ry="2" />
<text  x="42.69" y="351.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/github.com/containerd/continuity/fs.walkLinks (16 samples, 0.01%)</title><rect x="16.4" y="229" width="0.1" height="15.0" fill="rgb(206,32,15)" rx="2" ry="2" />
<text  x="19.38" y="239.5" ></text>
</g>
<g >
<title>kvm_lapic_reg_write (25 samples, 0.02%)</title><rect x="34.1" y="309" width="0.2" height="15.0" fill="rgb(207,225,43)" rx="2" ry="2" />
<text  x="37.10" y="319.5" ></text>
</g>
<g >
<title>[zedbox] (813 samples, 0.63%)</title><rect x="1182.1" y="421" width="7.4" height="15.0" fill="rgb(240,148,16)" rx="2" ry="2" />
<text  x="1185.10" y="431.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/google.golang.org/grpc.(*Server).handleStream (441 samples, 0.34%)</title><rect x="12.8" y="485" width="4.0" height="15.0" fill="rgb(210,153,52)" rx="2" ry="2" />
<text  x="15.79" y="495.5" ></text>
</g>
<g >
<title>[newlogd] (29 samples, 0.02%)</title><rect x="21.2" y="405" width="0.3" height="15.0" fill="rgb(232,56,50)" rx="2" ry="2" />
<text  x="24.24" y="415.5" ></text>
</g>
<g >
<title>zpl_write_common_iovec (24 samples, 0.02%)</title><rect x="22.5" y="389" width="0.2" height="15.0" fill="rgb(213,207,15)" rx="2" ry="2" />
<text  x="25.51" y="399.5" ></text>
</g>
<g >
<title>kvm_cpu_has_interrupt (89 samples, 0.07%)</title><rect x="37.6" y="325" width="0.8" height="15.0" fill="rgb(210,89,40)" rx="2" ry="2" />
<text  x="40.55" y="335.5" ></text>
</g>
<g >
<title>[zedbox] (957 samples, 0.74%)</title><rect x="1180.9" y="517" width="8.6" height="15.0" fill="rgb(246,214,48)" rx="2" ry="2" />
<text  x="1183.85" y="527.5" ></text>
</g>
<g >
<title>do_syscall_64 (14 samples, 0.01%)</title><rect x="1187.1" y="213" width="0.2" height="15.0" fill="rgb(243,70,15)" rx="2" ry="2" />
<text  x="1190.12" y="223.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/services/diff.(*local).Apply (414 samples, 0.32%)</title><rect x="12.9" y="389" width="3.8" height="15.0" fill="rgb(214,216,1)" rx="2" ry="2" />
<text  x="15.93" y="399.5" ></text>
</g>
<g >
<title>__do_sys_newfstatat (16 samples, 0.01%)</title><rect x="32.0" y="437" width="0.1" height="15.0" fill="rgb(219,152,23)" rx="2" ry="2" />
<text  x="34.98" y="447.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.01%)</title><rect x="1188.7" y="341" width="0.2" height="15.0" fill="rgb(230,123,54)" rx="2" ry="2" />
<text  x="1191.72" y="351.5" ></text>
</g>
<g >
<title>[zedbox] (35 samples, 0.03%)</title><rect x="1186.6" y="181" width="0.3" height="15.0" fill="rgb(230,24,51)" rx="2" ry="2" />
<text  x="1189.62" y="191.5" ></text>
</g>
<g >
<title>kvm_vcpu_wake_up (32 samples, 0.02%)</title><rect x="40.4" y="293" width="0.3" height="15.0" fill="rgb(234,22,29)" rx="2" ry="2" />
<text  x="43.45" y="303.5" ></text>
</g>
<g >
<title>__do_sys_futex (56 samples, 0.04%)</title><rect x="32.4" y="453" width="0.5" height="15.0" fill="rgb(211,198,6)" rx="2" ry="2" />
<text  x="35.41" y="463.5" ></text>
</g>
<g >
<title>__do_sys_futex (35 samples, 0.03%)</title><rect x="22.2" y="469" width="0.3" height="15.0" fill="rgb(244,113,19)" rx="2" ry="2" />
<text  x="25.17" y="479.5" ></text>
</g>
<g >
<title>ret_from_fork (96 samples, 0.07%)</title><rect x="1178.0" y="517" width="0.8" height="15.0" fill="rgb(242,76,9)" rx="2" ry="2" />
<text  x="1180.96" y="527.5" ></text>
</g>
<g >
<title>[zedbox] (141 samples, 0.11%)</title><rect x="1186.0" y="245" width="1.3" height="15.0" fill="rgb(215,176,52)" rx="2" ry="2" />
<text  x="1188.98" y="255.5" ></text>
</g>
<g >
<title>kvm_vcpu_wake_up (20 samples, 0.02%)</title><rect x="34.1" y="229" width="0.2" height="15.0" fill="rgb(251,225,25)" rx="2" ry="2" />
<text  x="37.12" y="239.5" ></text>
</g>
<g >
<title>path_openat (29 samples, 0.02%)</title><rect x="29.2" y="421" width="0.2" height="15.0" fill="rgb(208,181,12)" rx="2" ry="2" />
<text  x="32.17" y="431.5" ></text>
</g>
<g >
<title>kvm_irq_delivery_to_apic (21 samples, 0.02%)</title><rect x="34.1" y="293" width="0.2" height="15.0" fill="rgb(212,160,13)" rx="2" ry="2" />
<text  x="37.11" y="303.5" ></text>
</g>
<g >
<title>[zedbox] (853 samples, 0.66%)</title><rect x="1181.8" y="437" width="7.7" height="15.0" fill="rgb(240,176,8)" rx="2" ry="2" />
<text  x="1184.76" y="447.5" ></text>
</g>
<g >
<title>zio_ready (20 samples, 0.02%)</title><rect x="1179.1" y="453" width="0.2" height="15.0" fill="rgb(232,4,30)" rx="2" ry="2" />
<text  x="1182.14" y="463.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive.copyBuffered (315 samples, 0.24%)</title><rect x="13.0" y="245" width="2.9" height="15.0" fill="rgb(216,22,2)" rx="2" ry="2" />
<text  x="16.04" y="255.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (41 samples, 0.03%)</title><rect x="323.3" y="389" width="0.3" height="15.0" fill="rgb(234,162,39)" rx="2" ry="2" />
<text  x="326.26" y="399.5" ></text>
</g>
<g >
<title>[newlogd] (36 samples, 0.03%)</title><rect x="21.2" y="453" width="0.4" height="15.0" fill="rgb(206,173,29)" rx="2" ry="2" />
<text  x="24.23" y="463.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (32 samples, 0.02%)</title><rect x="1188.2" y="293" width="0.3" height="15.0" fill="rgb(231,36,42)" rx="2" ry="2" />
<text  x="1191.18" y="303.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (844 samples, 0.65%)</title><rect x="33.2" y="469" width="7.6" height="15.0" fill="rgb(223,85,10)" rx="2" ry="2" />
<text  x="36.18" y="479.5" ></text>
</g>
<g >
<title>io.(*teeReader).Read (278 samples, 0.21%)</title><rect x="13.0" y="181" width="2.6" height="15.0" fill="rgb(208,120,35)" rx="2" ry="2" />
<text  x="16.05" y="191.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (36 samples, 0.03%)</title><rect x="1187.8" y="277" width="0.4" height="15.0" fill="rgb(210,159,24)" rx="2" ry="2" />
<text  x="1190.84" y="287.5" ></text>
</g>
<g >
<title>runtime.usleep (12 samples, 0.01%)</title><rect x="10.9" y="469" width="0.1" height="15.0" fill="rgb(233,54,7)" rx="2" ry="2" />
<text  x="13.86" y="479.5" ></text>
</g>
<g >
<title>containerd-shim (63 samples, 0.05%)</title><rect x="10.1" y="533" width="0.5" height="15.0" fill="rgb(212,154,13)" rx="2" ry="2" />
<text  x="13.07" y="543.5" ></text>
</g>
<g >
<title>[zedbox] (260 samples, 0.20%)</title><rect x="1185.5" y="277" width="2.3" height="15.0" fill="rgb(226,136,0)" rx="2" ry="2" />
<text  x="1188.48" y="287.5" ></text>
</g>
<g >
<title>zfs_write (34 samples, 0.03%)</title><rect x="15.6" y="69" width="0.3" height="15.0" fill="rgb(208,125,53)" rx="2" ry="2" />
<text  x="18.59" y="79.5" ></text>
</g>
<g >
<title>syscall.Syscall6 (13 samples, 0.01%)</title><rect x="16.0" y="197" width="0.1" height="15.0" fill="rgb(252,105,6)" rx="2" ry="2" />
<text  x="19.03" y="207.5" ></text>
</g>
<g >
<title>[newlogd] (37 samples, 0.03%)</title><rect x="21.2" y="485" width="0.4" height="15.0" fill="rgb(233,69,0)" rx="2" ry="2" />
<text  x="24.23" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (687 samples, 0.53%)</title><rect x="24.1" y="485" width="6.2" height="15.0" fill="rgb(235,49,46)" rx="2" ry="2" />
<text  x="27.07" y="495.5" ></text>
</g>
<g >
<title>secondary_startup_64 (125,188 samples, 96.28%)</title><rect x="41.6" y="517" width="1136.0" height="15.0" fill="rgb(219,206,54)" rx="2" ry="2" />
<text  x="44.57" y="527.5" >secondary_startup_64</text>
</g>
<g >
<title>runtime.goexit (473 samples, 0.36%)</title><rect x="12.6" y="517" width="4.3" height="15.0" fill="rgb(208,15,34)" rx="2" ry="2" />
<text  x="15.56" y="527.5" ></text>
</g>
<g >
<title>wake_up_q (18 samples, 0.01%)</title><rect x="1187.3" y="165" width="0.1" height="15.0" fill="rgb(227,11,30)" rx="2" ry="2" />
<text  x="1190.26" y="175.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (17 samples, 0.01%)</title><rect x="22.2" y="421" width="0.2" height="15.0" fill="rgb(238,58,15)" rx="2" ry="2" />
<text  x="25.24" y="431.5" ></text>
</g>
<g >
<title>abd_iterate_func (13 samples, 0.01%)</title><rect x="1179.1" y="405" width="0.2" height="15.0" fill="rgb(254,187,40)" rx="2" ry="2" />
<text  x="1182.14" y="415.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/github.com/containerd/continuity/fs.walkLinks (17 samples, 0.01%)</title><rect x="16.4" y="245" width="0.1" height="15.0" fill="rgb(231,152,37)" rx="2" ry="2" />
<text  x="19.37" y="255.5" ></text>
</g>
<g >
<title>eventfd_poll (138 samples, 0.11%)</title><rect x="25.9" y="421" width="1.2" height="15.0" fill="rgb(231,12,16)" rx="2" ry="2" />
<text  x="28.88" y="431.5" ></text>
</g>
<g >
<title>do_syscall_64 (847 samples, 0.65%)</title><rect x="33.2" y="485" width="7.7" height="15.0" fill="rgb(232,166,8)" rx="2" ry="2" />
<text  x="36.17" y="495.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (52 samples, 0.04%)</title><rect x="32.5" y="373" width="0.4" height="15.0" fill="rgb(219,81,18)" rx="2" ry="2" />
<text  x="35.45" y="383.5" ></text>
</g>
<g >
<title>ret_from_fork (25 samples, 0.02%)</title><rect x="18.0" y="517" width="0.2" height="15.0" fill="rgb(250,153,32)" rx="2" ry="2" />
<text  x="20.97" y="527.5" ></text>
</g>
<g >
<title>[zedbox] (24 samples, 0.02%)</title><rect x="1179.8" y="453" width="0.2" height="15.0" fill="rgb(254,198,18)" rx="2" ry="2" />
<text  x="1182.82" y="463.5" ></text>
</g>
<g >
<title>runtime.gcDrain (31 samples, 0.02%)</title><rect x="11.0" y="453" width="0.3" height="15.0" fill="rgb(205,122,14)" rx="2" ry="2" />
<text  x="13.97" y="463.5" ></text>
</g>
<g >
<title>dsl_pool_sync (12 samples, 0.01%)</title><rect x="1177.6" y="437" width="0.2" height="15.0" fill="rgb(233,81,21)" rx="2" ry="2" />
<text  x="1180.65" y="447.5" ></text>
</g>
<g >
<title>do_syscall_64 (21 samples, 0.02%)</title><rect x="1187.6" y="245" width="0.2" height="15.0" fill="rgb(220,12,43)" rx="2" ry="2" />
<text  x="1190.63" y="255.5" ></text>
</g>
<g >
<title>sock_read_iter (12 samples, 0.01%)</title><rect x="1186.8" y="69" width="0.1" height="15.0" fill="rgb(235,147,11)" rx="2" ry="2" />
<text  x="1189.83" y="79.5" ></text>
</g>
<g >
<title>__apic_accept_irq (38 samples, 0.03%)</title><rect x="40.4" y="325" width="0.4" height="15.0" fill="rgb(211,104,26)" rx="2" ry="2" />
<text  x="43.45" y="335.5" ></text>
</g>
<g >
<title>[unknown] (36 samples, 0.03%)</title><rect x="31.6" y="485" width="0.3" height="15.0" fill="rgb(209,144,12)" rx="2" ry="2" />
<text  x="34.61" y="495.5" ></text>
</g>
<g >
<title>abd_copy_from_buf_off (13 samples, 0.01%)</title><rect x="1179.1" y="421" width="0.2" height="15.0" fill="rgb(218,210,21)" rx="2" ry="2" />
<text  x="1182.14" y="431.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).readHuffman (12 samples, 0.01%)</title><rect x="15.4" y="85" width="0.1" height="15.0" fill="rgb(222,227,9)" rx="2" ry="2" />
<text  x="18.36" y="95.5" ></text>
</g>
<g >
<title>kvm_io_bus_write (52 samples, 0.04%)</title><rect x="33.4" y="357" width="0.4" height="15.0" fill="rgb(205,9,8)" rx="2" ry="2" />
<text  x="36.38" y="367.5" ></text>
</g>
<g >
<title>taskq_thread (82 samples, 0.06%)</title><rect x="1179.0" y="485" width="0.7" height="15.0" fill="rgb(253,159,9)" rx="2" ry="2" />
<text  x="1181.97" y="495.5" ></text>
</g>
<g >
<title>do_syscall_64 (36 samples, 0.03%)</title><rect x="17.6" y="485" width="0.3" height="15.0" fill="rgb(245,80,6)" rx="2" ry="2" />
<text  x="20.60" y="495.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (56 samples, 0.04%)</title><rect x="1175.8" y="373" width="0.5" height="15.0" fill="rgb(227,217,23)" rx="2" ry="2" />
<text  x="1178.81" y="383.5" ></text>
</g>
<g >
<title>os.OpenFile (15 samples, 0.01%)</title><rect x="16.0" y="229" width="0.1" height="15.0" fill="rgb(231,62,27)" rx="2" ry="2" />
<text  x="19.01" y="239.5" ></text>
</g>
<g >
<title>kvm_mmu_page_fault (12 samples, 0.01%)</title><rect x="34.5" y="373" width="0.1" height="15.0" fill="rgb(232,217,25)" rx="2" ry="2" />
<text  x="37.47" y="383.5" ></text>
</g>
<g >
<title>x86_decode_insn (19 samples, 0.01%)</title><rect x="34.7" y="325" width="0.1" height="15.0" fill="rgb(239,0,23)" rx="2" ry="2" />
<text  x="37.66" y="335.5" ></text>
</g>
<g >
<title>kvm_emulate_wrmsr (27 samples, 0.02%)</title><rect x="34.1" y="373" width="0.2" height="15.0" fill="rgb(226,103,36)" rx="2" ry="2" />
<text  x="37.09" y="383.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (20 samples, 0.02%)</title><rect x="34.1" y="197" width="0.2" height="15.0" fill="rgb(247,218,41)" rx="2" ry="2" />
<text  x="37.12" y="207.5" ></text>
</g>
<g >
<title>kvm_irq_delivery_to_apic_fast (40 samples, 0.03%)</title><rect x="40.4" y="341" width="0.4" height="15.0" fill="rgb(235,134,12)" rx="2" ry="2" />
<text  x="43.45" y="351.5" ></text>
</g>
<g >
<title>vdev_queue_io_to_issue (24 samples, 0.02%)</title><rect x="1178.5" y="421" width="0.2" height="15.0" fill="rgb(205,92,44)" rx="2" ry="2" />
<text  x="1181.46" y="431.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive.Apply (406 samples, 0.31%)</title><rect x="12.9" y="293" width="3.7" height="15.0" fill="rgb(224,133,8)" rx="2" ry="2" />
<text  x="15.93" y="303.5" ></text>
</g>
<g >
<title>native_safe_halt (31,020 samples, 23.86%)</title><rect x="41.6" y="437" width="281.5" height="15.0" fill="rgb(238,62,19)" rx="2" ry="2" />
<text  x="44.61" y="447.5" >native_safe_halt</text>
</g>
<g >
<title>[zedbox] (13 samples, 0.01%)</title><rect x="1186.7" y="149" width="0.1" height="15.0" fill="rgb(227,69,0)" rx="2" ry="2" />
<text  x="1189.71" y="159.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/api/services/diff/v1._Diff_Apply_Handler.func1 (414 samples, 0.32%)</title><rect x="12.9" y="421" width="3.8" height="15.0" fill="rgb(242,205,1)" rx="2" ry="2" />
<text  x="15.93" y="431.5" ></text>
</g>
<g >
<title>[zedbox] (946 samples, 0.73%)</title><rect x="1180.9" y="469" width="8.6" height="15.0" fill="rgb(232,202,0)" rx="2" ry="2" />
<text  x="1183.94" y="479.5" ></text>
</g>
<g >
<title>txg_sync_thread (21 samples, 0.02%)</title><rect x="1177.6" y="469" width="0.2" height="15.0" fill="rgb(254,4,53)" rx="2" ry="2" />
<text  x="1180.65" y="479.5" ></text>
</g>
<g >
<title>runtime.scanobject (21 samples, 0.02%)</title><rect x="10.4" y="437" width="0.2" height="15.0" fill="rgb(231,203,3)" rx="2" ry="2" />
<text  x="13.43" y="447.5" ></text>
</g>
<g >
<title>ret_from_intr (56 samples, 0.04%)</title><rect x="1175.8" y="421" width="0.5" height="15.0" fill="rgb(213,46,5)" rx="2" ry="2" />
<text  x="1178.81" y="431.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (29 samples, 0.02%)</title><rect x="17.7" y="469" width="0.2" height="15.0" fill="rgb(240,186,21)" rx="2" ry="2" />
<text  x="20.66" y="479.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.01%)</title><rect x="16.0" y="181" width="0.1" height="15.0" fill="rgb(233,75,41)" rx="2" ry="2" />
<text  x="19.03" y="191.5" ></text>
</g>
<g >
<title>zfsdev_ioctl (16 samples, 0.01%)</title><rect x="1189.7" y="389" width="0.2" height="15.0" fill="rgb(214,214,52)" rx="2" ry="2" />
<text  x="1192.72" y="399.5" ></text>
</g>
<g >
<title>memlogd (17 samples, 0.01%)</title><rect x="21.0" y="533" width="0.2" height="15.0" fill="rgb(245,106,45)" rx="2" ry="2" />
<text  x="24.01" y="543.5" ></text>
</g>
<g >
<title>archive/tar.(*Reader).Read (279 samples, 0.21%)</title><rect x="13.0" y="229" width="2.6" height="15.0" fill="rgb(245,4,34)" rx="2" ry="2" />
<text  x="16.04" y="239.5" ></text>
</g>
<g >
<title>taskq_thread (25 samples, 0.02%)</title><rect x="18.0" y="485" width="0.2" height="15.0" fill="rgb(209,69,48)" rx="2" ry="2" />
<text  x="20.97" y="495.5" ></text>
</g>
<g >
<title>do_sys_open (12 samples, 0.01%)</title><rect x="16.0" y="149" width="0.1" height="15.0" fill="rgb(233,164,34)" rx="2" ry="2" />
<text  x="19.03" y="159.5" ></text>
</g>
<g >
<title>ksoftirqd/3 (12 samples, 0.01%)</title><rect x="20.5" y="533" width="0.1" height="15.0" fill="rgb(244,153,40)" rx="2" ry="2" />
<text  x="23.50" y="543.5" ></text>
</g>
<g >
<title>ksys_read (14 samples, 0.01%)</title><rect x="29.5" y="453" width="0.1" height="15.0" fill="rgb(207,141,21)" rx="2" ry="2" />
<text  x="32.51" y="463.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.01%)</title><rect x="1189.4" y="405" width="0.1" height="15.0" fill="rgb(214,168,29)" rx="2" ry="2" />
<text  x="1192.36" y="415.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.01%)</title><rect x="31.6" y="453" width="0.2" height="15.0" fill="rgb(237,150,4)" rx="2" ry="2" />
<text  x="34.61" y="463.5" ></text>
</g>
<g >
<title>zpl_write_common_iovec (34 samples, 0.03%)</title><rect x="15.6" y="85" width="0.3" height="15.0" fill="rgb(213,132,35)" rx="2" ry="2" />
<text  x="18.59" y="95.5" ></text>
</g>
<g >
<title>[unknown] (209 samples, 0.16%)</title><rect x="10.6" y="517" width="1.9" height="15.0" fill="rgb(231,177,2)" rx="2" ry="2" />
<text  x="13.64" y="527.5" ></text>
</g>
<g >
<title>ksys_read (12 samples, 0.01%)</title><rect x="1186.8" y="117" width="0.1" height="15.0" fill="rgb(227,17,0)" rx="2" ry="2" />
<text  x="1189.83" y="127.5" ></text>
</g>
<g >
<title>kvm_arch_vcpu_put (14 samples, 0.01%)</title><rect x="40.1" y="357" width="0.2" height="15.0" fill="rgb(252,84,23)" rx="2" ry="2" />
<text  x="43.14" y="367.5" ></text>
</g>
<g >
<title>__fget_light (105 samples, 0.08%)</title><rect x="24.8" y="421" width="1.0" height="15.0" fill="rgb(252,76,35)" rx="2" ry="2" />
<text  x="27.81" y="431.5" ></text>
</g>
<g >
<title>test_bit (12 samples, 0.01%)</title><rect x="38.4" y="325" width="0.1" height="15.0" fill="rgb(239,176,41)" rx="2" ry="2" />
<text  x="41.39" y="335.5" ></text>
</g>
<g >
<title>kthread (12 samples, 0.01%)</title><rect x="20.5" y="501" width="0.1" height="15.0" fill="rgb(245,188,2)" rx="2" ry="2" />
<text  x="23.50" y="511.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (47 samples, 0.04%)</title><rect x="33.4" y="277" width="0.4" height="15.0" fill="rgb(246,120,11)" rx="2" ry="2" />
<text  x="36.40" y="287.5" ></text>
</g>
<g >
<title>poll_schedule_timeout.constprop.9 (22 samples, 0.02%)</title><rect x="28.4" y="421" width="0.2" height="15.0" fill="rgb(235,157,0)" rx="2" ry="2" />
<text  x="31.36" y="431.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker.func2 (33 samples, 0.03%)</title><rect x="11.0" y="469" width="0.3" height="15.0" fill="rgb(243,48,27)" rx="2" ry="2" />
<text  x="13.97" y="479.5" ></text>
</g>
<g >
<title>__kvm_io_bus_write (52 samples, 0.04%)</title><rect x="33.4" y="341" width="0.4" height="15.0" fill="rgb(235,173,33)" rx="2" ry="2" />
<text  x="36.38" y="351.5" ></text>
</g>
<g >
<title>finish_task_switch (16 samples, 0.01%)</title><rect x="28.4" y="357" width="0.2" height="15.0" fill="rgb(234,159,40)" rx="2" ry="2" />
<text  x="31.41" y="367.5" ></text>
</g>
<g >
<title>[zedbox] (954 samples, 0.73%)</title><rect x="1180.9" y="501" width="8.6" height="15.0" fill="rgb(218,213,38)" rx="2" ry="2" />
<text  x="1183.87" y="511.5" ></text>
</g>
<g >
<title>__sched_text_start (108 samples, 0.08%)</title><rect x="1176.6" y="437" width="1.0" height="15.0" fill="rgb(217,40,33)" rx="2" ry="2" />
<text  x="1179.61" y="447.5" ></text>
</g>
<g >
<title>vmx_interrupt_allowed (112 samples, 0.09%)</title><rect x="38.5" y="325" width="1.0" height="15.0" fill="rgb(244,55,36)" rx="2" ry="2" />
<text  x="41.50" y="335.5" ></text>
</g>
<g >
<title>[newlogd] (31 samples, 0.02%)</title><rect x="21.2" y="421" width="0.3" height="15.0" fill="rgb(236,164,12)" rx="2" ry="2" />
<text  x="24.24" y="431.5" ></text>
</g>
<g >
<title>[newlogd] (37 samples, 0.03%)</title><rect x="21.2" y="469" width="0.4" height="15.0" fill="rgb(244,4,51)" rx="2" ry="2" />
<text  x="24.23" y="479.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive/compression.(*readCloserWrapper).Read (277 samples, 0.21%)</title><rect x="13.1" y="149" width="2.5" height="15.0" fill="rgb(250,183,1)" rx="2" ry="2" />
<text  x="16.06" y="159.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (13 samples, 0.01%)</title><rect x="1175.8" y="357" width="0.1" height="15.0" fill="rgb(247,30,10)" rx="2" ry="2" />
<text  x="1178.81" y="367.5" ></text>
</g>
<g >
<title>do_syscall_64 (18 samples, 0.01%)</title><rect x="1188.7" y="325" width="0.2" height="15.0" fill="rgb(236,156,27)" rx="2" ry="2" />
<text  x="1191.72" y="335.5" ></text>
</g>
<g >
<title>do_futex (31 samples, 0.02%)</title><rect x="22.2" y="453" width="0.3" height="15.0" fill="rgb(234,107,27)" rx="2" ry="2" />
<text  x="25.18" y="463.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (16 samples, 0.01%)</title><rect x="1178.3" y="405" width="0.1" height="15.0" fill="rgb(208,15,49)" rx="2" ry="2" />
<text  x="1181.28" y="415.5" ></text>
</g>
<g >
<title>zedbox (1,071 samples, 0.82%)</title><rect x="1179.8" y="533" width="9.7" height="15.0" fill="rgb(223,115,21)" rx="2" ry="2" />
<text  x="1182.82" y="543.5" ></text>
</g>
<g >
<title>[unknown] (87 samples, 0.07%)</title><rect x="31.4" y="501" width="0.8" height="15.0" fill="rgb(219,130,2)" rx="2" ry="2" />
<text  x="34.38" y="511.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/api/services/content/v1._Content_Write_Handler (15 samples, 0.01%)</title><rect x="12.8" y="437" width="0.1" height="15.0" fill="rgb(220,123,46)" rx="2" ry="2" />
<text  x="15.79" y="447.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (106 samples, 0.08%)</title><rect x="1176.6" y="389" width="1.0" height="15.0" fill="rgb(211,123,15)" rx="2" ry="2" />
<text  x="1179.63" y="399.5" ></text>
</g>
<g >
<title>txg_sync (21 samples, 0.02%)</title><rect x="1177.6" y="533" width="0.2" height="15.0" fill="rgb(248,217,27)" rx="2" ry="2" />
<text  x="1180.65" y="543.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).huffSym (62 samples, 0.05%)</title><rect x="14.8" y="69" width="0.5" height="15.0" fill="rgb(223,73,54)" rx="2" ry="2" />
<text  x="17.76" y="79.5" ></text>
</g>
<g >
<title>vfs_statx (16 samples, 0.01%)</title><rect x="32.0" y="421" width="0.1" height="15.0" fill="rgb(233,40,16)" rx="2" ry="2" />
<text  x="34.98" y="431.5" ></text>
</g>
<g >
<title>do_idle (94,106 samples, 72.37%)</title><rect x="323.6" y="469" width="854.0" height="15.0" fill="rgb(239,171,3)" rx="2" ry="2" />
<text  x="326.63" y="479.5" >do_idle</text>
</g>
<g >
<title>do_syscall_64 (16 samples, 0.01%)</title><rect x="31.6" y="437" width="0.2" height="15.0" fill="rgb(210,151,24)" rx="2" ry="2" />
<text  x="34.61" y="447.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/google.golang.org/grpc.(*Server).processUnaryRPC (425 samples, 0.33%)</title><rect x="12.9" y="469" width="3.9" height="15.0" fill="rgb(230,88,20)" rx="2" ry="2" />
<text  x="15.92" y="479.5" ></text>
</g>
<g >
<title>[zedbox] (347 samples, 0.27%)</title><rect x="1185.0" y="293" width="3.2" height="15.0" fill="rgb(237,94,25)" rx="2" ry="2" />
<text  x="1188.03" y="303.5" ></text>
</g>
<g >
<title>[unknown] (52 samples, 0.04%)</title><rect x="10.1" y="501" width="0.5" height="15.0" fill="rgb(231,102,47)" rx="2" ry="2" />
<text  x="13.15" y="511.5" ></text>
</g>
<g >
<title>do_syscall_64 (16 samples, 0.01%)</title><rect x="1189.7" y="469" width="0.2" height="15.0" fill="rgb(253,189,52)" rx="2" ry="2" />
<text  x="1192.72" y="479.5" ></text>
</g>
<g >
<title>[libglib-2.0.so.0.6400.6] (41 samples, 0.03%)</title><rect x="30.3" y="501" width="0.4" height="15.0" fill="rgb(214,222,45)" rx="2" ry="2" />
<text  x="33.31" y="511.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/mount.WithTempMount (414 samples, 0.32%)</title><rect x="12.9" y="325" width="3.8" height="15.0" fill="rgb(241,64,10)" rx="2" ry="2" />
<text  x="15.93" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.01%)</title><rect x="1189.7" y="485" width="0.2" height="15.0" fill="rgb(237,177,54)" rx="2" ry="2" />
<text  x="1192.72" y="495.5" ></text>
</g>
<g >
<title>newlogd (47 samples, 0.04%)</title><rect x="21.2" y="533" width="0.5" height="15.0" fill="rgb(241,88,53)" rx="2" ry="2" />
<text  x="24.23" y="543.5" ></text>
</g>
<g >
<title>zfs_write (24 samples, 0.02%)</title><rect x="22.5" y="373" width="0.2" height="15.0" fill="rgb(253,183,10)" rx="2" ry="2" />
<text  x="25.51" y="383.5" ></text>
</g>
<g >
<title>do_syscall_64 (41 samples, 0.03%)</title><rect x="1187.3" y="229" width="0.3" height="15.0" fill="rgb(215,165,18)" rx="2" ry="2" />
<text  x="1190.26" y="239.5" ></text>
</g>
<g >
<title>[ld-musl-x86_64.so.1] (104 samples, 0.08%)</title><rect x="17.0" y="517" width="0.9" height="15.0" fill="rgb(222,178,28)" rx="2" ry="2" />
<text  x="19.98" y="527.5" ></text>
</g>
<g >
<title>[newlogd] (37 samples, 0.03%)</title><rect x="21.2" y="501" width="0.4" height="15.0" fill="rgb(241,137,8)" rx="2" ry="2" />
<text  x="24.23" y="511.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/google.golang.org/grpc.(*Server).serveStreams.func1.1 (441 samples, 0.34%)</title><rect x="12.8" y="501" width="4.0" height="15.0" fill="rgb(225,28,37)" rx="2" ry="2" />
<text  x="15.79" y="511.5" ></text>
</g>
<g >
<title>[unknown] (24 samples, 0.02%)</title><rect x="1179.8" y="501" width="0.2" height="15.0" fill="rgb(210,44,31)" rx="2" ry="2" />
<text  x="1182.82" y="511.5" ></text>
</g>
<g >
<title>iptables (25 samples, 0.02%)</title><rect x="18.4" y="533" width="0.2" height="15.0" fill="rgb(251,219,10)" rx="2" ry="2" />
<text  x="21.40" y="543.5" ></text>
</g>
<g >
<title>vfs_read (12 samples, 0.01%)</title><rect x="1187.7" y="213" width="0.1" height="15.0" fill="rgb(238,100,46)" rx="2" ry="2" />
<text  x="1190.71" y="223.5" ></text>
</g>
<g >
<title>kthread (21 samples, 0.02%)</title><rect x="1177.6" y="501" width="0.2" height="15.0" fill="rgb(241,104,52)" rx="2" ry="2" />
<text  x="1180.65" y="511.5" ></text>
</g>
<g >
<title>apic_enabled (19 samples, 0.01%)</title><rect x="36.9" y="325" width="0.2" height="15.0" fill="rgb(247,148,42)" rx="2" ry="2" />
<text  x="39.90" y="335.5" ></text>
</g>
<g >
<title>[zedbox] (66 samples, 0.05%)</title><rect x="1186.4" y="213" width="0.6" height="15.0" fill="rgb(233,186,45)" rx="2" ry="2" />
<text  x="1189.42" y="223.5" ></text>
</g>
<g >
<title>[zedbox] (28 samples, 0.02%)</title><rect x="1186.7" y="165" width="0.2" height="15.0" fill="rgb(243,161,25)" rx="2" ry="2" />
<text  x="1189.69" y="175.5" ></text>
</g>
<g >
<title>native_set_debugreg (12 samples, 0.01%)</title><rect x="40.2" y="325" width="0.1" height="15.0" fill="rgb(206,150,51)" rx="2" ry="2" />
<text  x="43.16" y="335.5" ></text>
</g>
<g >
<title>read_tsc (68 samples, 0.05%)</title><rect x="35.4" y="325" width="0.6" height="15.0" fill="rgb(229,96,10)" rx="2" ry="2" />
<text  x="38.39" y="335.5" ></text>
</g>
<g >
<title>irq_exit (56 samples, 0.04%)</title><rect x="1175.8" y="389" width="0.5" height="15.0" fill="rgb(240,157,19)" rx="2" ry="2" />
<text  x="1178.81" y="399.5" ></text>
</g>
<g >
<title>ioctl (16 samples, 0.01%)</title><rect x="1189.7" y="501" width="0.2" height="15.0" fill="rgb(223,37,52)" rx="2" ry="2" />
<text  x="1192.72" y="511.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (19 samples, 0.01%)</title><rect x="1175.6" y="421" width="0.2" height="15.0" fill="rgb(245,8,49)" rx="2" ry="2" />
<text  x="1178.60" y="431.5" ></text>
</g>
<g >
<title>new_sync_read (12 samples, 0.01%)</title><rect x="1186.8" y="85" width="0.1" height="15.0" fill="rgb(214,66,28)" rx="2" ry="2" />
<text  x="1189.83" y="95.5" ></text>
</g>
<g >
<title>[zedbox] (934 samples, 0.72%)</title><rect x="1181.0" y="453" width="8.5" height="15.0" fill="rgb(235,194,32)" rx="2" ry="2" />
<text  x="1184.04" y="463.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (16 samples, 0.01%)</title><rect x="28.4" y="325" width="0.2" height="15.0" fill="rgb(205,123,31)" rx="2" ry="2" />
<text  x="31.41" y="335.5" ></text>
</g>
<g >
<title>start_secondary (94,106 samples, 72.37%)</title><rect x="323.6" y="501" width="854.0" height="15.0" fill="rgb(253,131,44)" rx="2" ry="2" />
<text  x="326.63" y="511.5" >start_secondary</text>
</g>
<g >
<title>do_IRQ (56 samples, 0.04%)</title><rect x="1175.8" y="405" width="0.5" height="15.0" fill="rgb(253,183,14)" rx="2" ry="2" />
<text  x="1178.81" y="415.5" ></text>
</g>
<g >
<title>do_syscall_64 (29 samples, 0.02%)</title><rect x="1188.2" y="277" width="0.2" height="15.0" fill="rgb(235,43,27)" rx="2" ry="2" />
<text  x="1191.18" y="287.5" ></text>
</g>
<g >
<title>__raw_spin_unlock_irq (16 samples, 0.01%)</title><rect x="28.4" y="341" width="0.2" height="15.0" fill="rgb(252,20,11)" rx="2" ry="2" />
<text  x="31.41" y="351.5" ></text>
</g>
<g >
<title>__cpuidle_text_start (93,959 samples, 72.26%)</title><rect x="323.7" y="453" width="852.6" height="15.0" fill="rgb(230,188,11)" rx="2" ry="2" />
<text  x="326.66" y="463.5" >__cpuidle_text_start</text>
</g>
<g >
<title>ret_from_fork (21 samples, 0.02%)</title><rect x="1177.6" y="517" width="0.2" height="15.0" fill="rgb(247,161,48)" rx="2" ry="2" />
<text  x="1180.65" y="527.5" ></text>
</g>
<g >
<title>[zedbox] (508 samples, 0.39%)</title><rect x="1184.1" y="341" width="4.6" height="15.0" fill="rgb(233,202,5)" rx="2" ry="2" />
<text  x="1187.11" y="351.5" ></text>
</g>
<g >
<title>fput_many (31 samples, 0.02%)</title><rect x="27.2" y="421" width="0.2" height="15.0" fill="rgb(240,229,45)" rx="2" ry="2" />
<text  x="30.16" y="431.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (18 samples, 0.01%)</title><rect x="1187.3" y="117" width="0.1" height="15.0" fill="rgb(249,153,34)" rx="2" ry="2" />
<text  x="1190.26" y="127.5" ></text>
</g>
<g >
<title>vfs_read (13 samples, 0.01%)</title><rect x="1188.0" y="229" width="0.2" height="15.0" fill="rgb(213,107,19)" rx="2" ry="2" />
<text  x="1191.04" y="239.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (24 samples, 0.02%)</title><rect x="28.9" y="453" width="0.2" height="15.0" fill="rgb(205,15,31)" rx="2" ry="2" />
<text  x="31.86" y="463.5" ></text>
</g>
</g>
</svg>
