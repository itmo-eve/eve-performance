<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="582" onload="init(evt)" viewBox="0 0 1200 582" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="582.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="565" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="565" > </text>
<g id="frames">
<g >
<title>proc_pid_status (12 samples, 0.01%)</title><rect x="1188.0" y="165" width="0.1" height="15.0" fill="rgb(244,114,3)" rx="2" ry="2" />
<text  x="1191.00" y="175.5" ></text>
</g>
<g >
<title>do_filp_open (21 samples, 0.02%)</title><rect x="15.9" y="117" width="0.2" height="15.0" fill="rgb(226,10,54)" rx="2" ry="2" />
<text  x="18.94" y="127.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/github.com/grpc-ecosystem/go-grpc-prometheus.(*ServerMetrics).StreamServerInterceptor.func1 (19 samples, 0.01%)</title><rect x="12.6" y="437" width="0.2" height="15.0" fill="rgb(246,206,14)" rx="2" ry="2" />
<text  x="15.59" y="447.5" ></text>
</g>
<g >
<title>futex_wake (47 samples, 0.04%)</title><rect x="31.1" y="405" width="0.4" height="15.0" fill="rgb(251,142,31)" rx="2" ry="2" />
<text  x="34.06" y="415.5" ></text>
</g>
<g >
<title>[memlogd] (14 samples, 0.01%)</title><rect x="20.5" y="501" width="0.1" height="15.0" fill="rgb(235,180,46)" rx="2" ry="2" />
<text  x="23.45" y="511.5" ></text>
</g>
<g >
<title>do_IRQ (11 samples, 0.01%)</title><rect x="1181.3" y="453" width="0.1" height="15.0" fill="rgb(210,88,51)" rx="2" ry="2" />
<text  x="1184.27" y="463.5" ></text>
</g>
<g >
<title>kvm_send_userspace_msi (18 samples, 0.01%)</title><rect x="39.2" y="373" width="0.2" height="15.0" fill="rgb(230,114,52)" rx="2" ry="2" />
<text  x="42.19" y="383.5" ></text>
</g>
<g >
<title>do_syscall_64 (31 samples, 0.02%)</title><rect x="15.5" y="149" width="0.3" height="15.0" fill="rgb(223,21,50)" rx="2" ry="2" />
<text  x="18.53" y="159.5" ></text>
</g>
<g >
<title>proc_single_show (14 samples, 0.01%)</title><rect x="1188.0" y="181" width="0.1" height="15.0" fill="rgb(240,107,52)" rx="2" ry="2" />
<text  x="1190.98" y="191.5" ></text>
</g>
<g >
<title>read_tsc (73 samples, 0.06%)</title><rect x="33.6" y="309" width="0.7" height="15.0" fill="rgb(211,163,30)" rx="2" ry="2" />
<text  x="36.59" y="319.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (13 samples, 0.01%)</title><rect x="27.6" y="309" width="0.1" height="15.0" fill="rgb(235,198,29)" rx="2" ry="2" />
<text  x="30.61" y="319.5" ></text>
</g>
<g >
<title>run_rebalance_domains (22 samples, 0.02%)</title><rect x="1176.3" y="341" width="0.2" height="15.0" fill="rgb(251,126,44)" rx="2" ry="2" />
<text  x="1179.29" y="351.5" ></text>
</g>
<g >
<title>[zedbox] (603 samples, 0.47%)</title><rect x="1183.5" y="357" width="5.5" height="15.0" fill="rgb(218,65,16)" rx="2" ry="2" />
<text  x="1186.53" y="367.5" ></text>
</g>
<g >
<title>[qemu-system-x86_64] (75 samples, 0.06%)</title><rect x="29.5" y="485" width="0.7" height="15.0" fill="rgb(209,6,40)" rx="2" ry="2" />
<text  x="32.49" y="495.5" ></text>
</g>
<g >
<title>[zedbox] (13 samples, 0.01%)</title><rect x="1186.9" y="117" width="0.1" height="15.0" fill="rgb(237,147,8)" rx="2" ry="2" />
<text  x="1189.87" y="127.5" ></text>
</g>
<g >
<title>[zedbox] (20 samples, 0.02%)</title><rect x="1180.4" y="437" width="0.2" height="15.0" fill="rgb(212,220,25)" rx="2" ry="2" />
<text  x="1183.38" y="447.5" ></text>
</g>
<g >
<title>ret_from_fork (15 samples, 0.01%)</title><rect x="1180.2" y="501" width="0.2" height="15.0" fill="rgb(251,87,34)" rx="2" ry="2" />
<text  x="1183.23" y="511.5" ></text>
</g>
<g >
<title>do_syscall_64 (11 samples, 0.01%)</title><rect x="1189.8" y="453" width="0.1" height="15.0" fill="rgb(205,157,3)" rx="2" ry="2" />
<text  x="1192.81" y="463.5" ></text>
</g>
<g >
<title>zio_vdev_io_start (13 samples, 0.01%)</title><rect x="1179.9" y="389" width="0.1" height="15.0" fill="rgb(244,57,23)" rx="2" ry="2" />
<text  x="1182.89" y="399.5" ></text>
</g>
<g >
<title>ret_from_fork (26 samples, 0.02%)</title><rect x="1178.1" y="501" width="0.2" height="15.0" fill="rgb(208,98,44)" rx="2" ry="2" />
<text  x="1181.11" y="511.5" ></text>
</g>
<g >
<title>[newlogd] (34 samples, 0.03%)</title><rect x="20.8" y="437" width="0.3" height="15.0" fill="rgb(254,194,20)" rx="2" ry="2" />
<text  x="23.75" y="447.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/github.com/containerd/continuity/fs.walkLinks (14 samples, 0.01%)</title><rect x="16.4" y="197" width="0.1" height="15.0" fill="rgb(228,209,45)" rx="2" ry="2" />
<text  x="19.40" y="207.5" ></text>
</g>
<g >
<title>start_kernel (30,971 samples, 23.90%)</title><rect x="40.1" y="485" width="282.0" height="15.0" fill="rgb(249,100,29)" rx="2" ry="2" />
<text  x="43.06" y="495.5" >start_kernel</text>
</g>
<g >
<title>[ld-musl-x86_64.so.1] (89 samples, 0.07%)</title><rect x="21.4" y="501" width="0.8" height="15.0" fill="rgb(219,23,31)" rx="2" ry="2" />
<text  x="24.35" y="511.5" ></text>
</g>
<g >
<title>[zedbox] (815 samples, 0.63%)</title><rect x="1182.2" y="421" width="7.4" height="15.0" fill="rgb(230,28,31)" rx="2" ry="2" />
<text  x="1185.16" y="431.5" ></text>
</g>
<g >
<title>zpl_iter_write (17 samples, 0.01%)</title><rect x="1189.2" y="277" width="0.1" height="15.0" fill="rgb(219,53,21)" rx="2" ry="2" />
<text  x="1192.16" y="287.5" ></text>
</g>
<g >
<title>blk_update_request (12 samples, 0.01%)</title><rect x="1176.8" y="293" width="0.1" height="15.0" fill="rgb(232,205,39)" rx="2" ry="2" />
<text  x="1179.77" y="303.5" ></text>
</g>
<g >
<title>[qemu-system-x86_64] (14 samples, 0.01%)</title><rect x="30.3" y="469" width="0.1" height="15.0" fill="rgb(219,82,28)" rx="2" ry="2" />
<text  x="33.30" y="479.5" ></text>
</g>
<g >
<title>archive/tar.(*Reader).Read (282 samples, 0.22%)</title><rect x="13.0" y="213" width="2.5" height="15.0" fill="rgb(229,65,36)" rx="2" ry="2" />
<text  x="15.95" y="223.5" ></text>
</g>
<g >
<title>taskq_thread (77 samples, 0.06%)</title><rect x="1179.5" y="469" width="0.7" height="15.0" fill="rgb(232,40,42)" rx="2" ry="2" />
<text  x="1182.53" y="479.5" ></text>
</g>
<g >
<title>[zedbox] (889 samples, 0.69%)</title><rect x="1181.5" y="437" width="8.1" height="15.0" fill="rgb(215,168,11)" rx="2" ry="2" />
<text  x="1184.50" y="447.5" ></text>
</g>
<g >
<title>[memlogd] (14 samples, 0.01%)</title><rect x="20.5" y="469" width="0.1" height="15.0" fill="rgb(237,33,40)" rx="2" ry="2" />
<text  x="23.45" y="479.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (29 samples, 0.02%)</title><rect x="28.1" y="437" width="0.3" height="15.0" fill="rgb(207,49,1)" rx="2" ry="2" />
<text  x="31.10" y="447.5" ></text>
</g>
<g >
<title>__raw_spin_unlock_irq (17 samples, 0.01%)</title><rect x="21.7" y="341" width="0.1" height="15.0" fill="rgb(222,199,0)" rx="2" ry="2" />
<text  x="24.67" y="351.5" ></text>
</g>
<g >
<title>native_safe_halt (93,888 samples, 72.45%)</title><rect x="322.1" y="421" width="854.9" height="15.0" fill="rgb(226,74,12)" rx="2" ry="2" />
<text  x="325.10" y="431.5" >native_safe_halt</text>
</g>
<g >
<title>github.com/containerd/containerd/archive.applyNaive (417 samples, 0.32%)</title><rect x="12.8" y="261" width="3.8" height="15.0" fill="rgb(249,92,34)" rx="2" ry="2" />
<text  x="15.79" y="271.5" ></text>
</g>
<g >
<title>syscall.Syscall6 (14 samples, 0.01%)</title><rect x="16.2" y="213" width="0.1" height="15.0" fill="rgb(237,201,41)" rx="2" ry="2" />
<text  x="19.18" y="223.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.01%)</title><rect x="1189.4" y="389" width="0.1" height="15.0" fill="rgb(250,81,54)" rx="2" ry="2" />
<text  x="1192.39" y="399.5" ></text>
</g>
<g >
<title>[newlogd] (21 samples, 0.02%)</title><rect x="20.8" y="389" width="0.2" height="15.0" fill="rgb(229,14,43)" rx="2" ry="2" />
<text  x="23.77" y="399.5" ></text>
</g>
<g >
<title>[qemu-system-x86_64] (35 samples, 0.03%)</title><rect x="22.2" y="501" width="0.3" height="15.0" fill="rgb(209,164,7)" rx="2" ry="2" />
<text  x="25.20" y="511.5" ></text>
</g>
<g >
<title>do_syscall_64 (35 samples, 0.03%)</title><rect x="1187.8" y="245" width="0.3" height="15.0" fill="rgb(249,68,27)" rx="2" ry="2" />
<text  x="1190.79" y="255.5" ></text>
</g>
<g >
<title>kthreadd (14 samples, 0.01%)</title><rect x="20.3" y="517" width="0.1" height="15.0" fill="rgb(243,66,11)" rx="2" ry="2" />
<text  x="23.25" y="527.5" ></text>
</g>
<g >
<title>ioeventfd_write (39 samples, 0.03%)</title><rect x="32.0" y="309" width="0.3" height="15.0" fill="rgb(218,208,5)" rx="2" ry="2" />
<text  x="34.99" y="319.5" ></text>
</g>
<g >
<title>virtnet_poll (11 samples, 0.01%)</title><rect x="1176.9" y="325" width="0.1" height="15.0" fill="rgb(216,196,14)" rx="2" ry="2" />
<text  x="1179.88" y="335.5" ></text>
</g>
<g >
<title>kvm_set_msi (18 samples, 0.01%)</title><rect x="39.2" y="357" width="0.2" height="15.0" fill="rgb(243,38,17)" rx="2" ry="2" />
<text  x="42.19" y="367.5" ></text>
</g>
<g >
<title>dnode_sync (12 samples, 0.01%)</title><rect x="17.9" y="437" width="0.1" height="15.0" fill="rgb(210,50,31)" rx="2" ry="2" />
<text  x="20.86" y="447.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (11 samples, 0.01%)</title><rect x="38.6" y="277" width="0.1" height="15.0" fill="rgb(225,36,7)" rx="2" ry="2" />
<text  x="41.58" y="287.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (52 samples, 0.04%)</title><rect x="26.7" y="373" width="0.5" height="15.0" fill="rgb(230,67,29)" rx="2" ry="2" />
<text  x="29.74" y="383.5" ></text>
</g>
<g >
<title>vfs_ioctl (830 samples, 0.64%)</title><rect x="31.8" y="405" width="7.6" height="15.0" fill="rgb(231,183,5)" rx="2" ry="2" />
<text  x="34.80" y="415.5" ></text>
</g>
<g >
<title>seq_read (14 samples, 0.01%)</title><rect x="1188.0" y="197" width="0.1" height="15.0" fill="rgb(253,86,0)" rx="2" ry="2" />
<text  x="1190.98" y="207.5" ></text>
</g>
<g >
<title>ksys_write (17 samples, 0.01%)</title><rect x="1189.2" y="325" width="0.1" height="15.0" fill="rgb(209,51,3)" rx="2" ry="2" />
<text  x="1192.16" y="335.5" ></text>
</g>
<g >
<title>zio_ready (16 samples, 0.01%)</title><rect x="1179.7" y="437" width="0.1" height="15.0" fill="rgb(227,23,7)" rx="2" ry="2" />
<text  x="1182.70" y="447.5" ></text>
</g>
<g >
<title>[newlogd] (24 samples, 0.02%)</title><rect x="20.8" y="405" width="0.2" height="15.0" fill="rgb(248,141,32)" rx="2" ry="2" />
<text  x="23.76" y="415.5" ></text>
</g>
<g >
<title>kvm_vm_ioctl (18 samples, 0.01%)</title><rect x="39.2" y="389" width="0.2" height="15.0" fill="rgb(207,165,48)" rx="2" ry="2" />
<text  x="42.19" y="399.5" ></text>
</g>
<g >
<title>bufio.(*Reader).ReadByte (15 samples, 0.01%)</title><rect x="14.2" y="53" width="0.1" height="15.0" fill="rgb(222,139,11)" rx="2" ry="2" />
<text  x="17.15" y="63.5" ></text>
</g>
<g >
<title>rebalance_domains (13 samples, 0.01%)</title><rect x="1176.2" y="341" width="0.1" height="15.0" fill="rgb(229,95,16)" rx="2" ry="2" />
<text  x="1179.17" y="351.5" ></text>
</g>
<g >
<title>eventfd_poll (143 samples, 0.11%)</title><rect x="25.1" y="405" width="1.3" height="15.0" fill="rgb(221,102,30)" rx="2" ry="2" />
<text  x="28.09" y="415.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/github.com/grpc-ecosystem/go-grpc-prometheus.(*ServerMetrics).UnaryServerInterceptor.func1 (423 samples, 0.33%)</title><rect x="12.8" y="421" width="3.8" height="15.0" fill="rgb(243,211,26)" rx="2" ry="2" />
<text  x="15.79" y="431.5" ></text>
</g>
<g >
<title>sem_post (52 samples, 0.04%)</title><rect x="31.0" y="485" width="0.5" height="15.0" fill="rgb(253,212,20)" rx="2" ry="2" />
<text  x="34.03" y="495.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/mount.WithTempMount (423 samples, 0.33%)</title><rect x="12.8" y="309" width="3.8" height="15.0" fill="rgb(253,120,33)" rx="2" ry="2" />
<text  x="15.79" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (24 samples, 0.02%)</title><rect x="1187.4" y="229" width="0.2" height="15.0" fill="rgb(244,122,26)" rx="2" ry="2" />
<text  x="1190.38" y="239.5" ></text>
</g>
<g >
<title>__fget (97 samples, 0.07%)</title><rect x="24.1" y="389" width="0.9" height="15.0" fill="rgb(252,138,33)" rx="2" ry="2" />
<text  x="27.12" y="399.5" ></text>
</g>
<g >
<title>[unknown] (21 samples, 0.02%)</title><rect x="10.1" y="501" width="0.2" height="15.0" fill="rgb(218,75,54)" rx="2" ry="2" />
<text  x="13.14" y="511.5" ></text>
</g>
<g >
<title>memlogd (24 samples, 0.02%)</title><rect x="20.5" y="517" width="0.2" height="15.0" fill="rgb(253,62,19)" rx="2" ry="2" />
<text  x="23.45" y="527.5" ></text>
</g>
<g >
<title>__srcu_read_unlock (16 samples, 0.01%)</title><rect x="34.9" y="325" width="0.1" height="15.0" fill="rgb(243,224,16)" rx="2" ry="2" />
<text  x="37.88" y="335.5" ></text>
</g>
<g >
<title>[ld-musl-x86_64.so.1] (105 samples, 0.08%)</title><rect x="16.9" y="501" width="0.9" height="15.0" fill="rgb(221,218,7)" rx="2" ry="2" />
<text  x="19.87" y="511.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).nextBlock (117 samples, 0.09%)</title><rect x="14.4" y="85" width="1.0" height="15.0" fill="rgb(248,154,46)" rx="2" ry="2" />
<text  x="17.35" y="95.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.01%)</title><rect x="1189.8" y="469" width="0.1" height="15.0" fill="rgb(251,16,6)" rx="2" ry="2" />
<text  x="1192.81" y="479.5" ></text>
</g>
<g >
<title>arc_write_ready (15 samples, 0.01%)</title><rect x="1179.7" y="421" width="0.1" height="15.0" fill="rgb(224,65,51)" rx="2" ry="2" />
<text  x="1182.70" y="431.5" ></text>
</g>
<g >
<title>kthread (91 samples, 0.07%)</title><rect x="1178.6" y="485" width="0.9" height="15.0" fill="rgb(215,43,1)" rx="2" ry="2" />
<text  x="1181.64" y="495.5" ></text>
</g>
<g >
<title>[zedbox] (383 samples, 0.30%)</title><rect x="1184.9" y="293" width="3.5" height="15.0" fill="rgb(243,128,18)" rx="2" ry="2" />
<text  x="1187.93" y="303.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/golang.org/x/net/http2.(*Framer).ReadFrame (11 samples, 0.01%)</title><rect x="12.5" y="437" width="0.1" height="15.0" fill="rgb(254,27,17)" rx="2" ry="2" />
<text  x="15.48" y="447.5" ></text>
</g>
<g >
<title>do_syscall_64 (14 samples, 0.01%)</title><rect x="1187.6" y="229" width="0.1" height="15.0" fill="rgb(246,144,42)" rx="2" ry="2" />
<text  x="1190.61" y="239.5" ></text>
</g>
<g >
<title>[zedbox] (905 samples, 0.70%)</title><rect x="1181.4" y="501" width="8.2" height="15.0" fill="rgb(232,37,48)" rx="2" ry="2" />
<text  x="1184.37" y="511.5" ></text>
</g>
<g >
<title>vmx_get_cpl (21 samples, 0.02%)</title><rect x="33.0" y="261" width="0.2" height="15.0" fill="rgb(232,154,19)" rx="2" ry="2" />
<text  x="35.99" y="271.5" ></text>
</g>
<g >
<title>kvm_vcpu_kick (14 samples, 0.01%)</title><rect x="39.2" y="293" width="0.1" height="15.0" fill="rgb(218,47,21)" rx="2" ry="2" />
<text  x="42.21" y="303.5" ></text>
</g>
<g >
<title>x86_decode_insn (32 samples, 0.02%)</title><rect x="32.9" y="309" width="0.3" height="15.0" fill="rgb(219,122,45)" rx="2" ry="2" />
<text  x="35.90" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (29 samples, 0.02%)</title><rect x="17.6" y="485" width="0.2" height="15.0" fill="rgb(219,122,21)" rx="2" ry="2" />
<text  x="20.57" y="495.5" ></text>
</g>
<g >
<title>kvm_vcpu_wake_up (12 samples, 0.01%)</title><rect x="39.2" y="277" width="0.1" height="15.0" fill="rgb(220,220,34)" rx="2" ry="2" />
<text  x="42.21" y="287.5" ></text>
</g>
<g >
<title>vdev_queue_io_to_issue (16 samples, 0.01%)</title><rect x="1179.2" y="405" width="0.1" height="15.0" fill="rgb(214,206,12)" rx="2" ry="2" />
<text  x="1182.16" y="415.5" ></text>
</g>
<g >
<title>do_syscall_64 (13 samples, 0.01%)</title><rect x="16.2" y="181" width="0.1" height="15.0" fill="rgb(221,227,47)" rx="2" ry="2" />
<text  x="19.18" y="191.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (22 samples, 0.02%)</title><rect x="1176.3" y="293" width="0.2" height="15.0" fill="rgb(231,71,53)" rx="2" ry="2" />
<text  x="1179.29" y="303.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/services/diff.(*service).Apply (423 samples, 0.33%)</title><rect x="12.8" y="389" width="3.8" height="15.0" fill="rgb(249,120,11)" rx="2" ry="2" />
<text  x="15.79" y="399.5" ></text>
</g>
<g >
<title>apic_has_interrupt_for_ppr (16 samples, 0.01%)</title><rect x="36.4" y="277" width="0.2" height="15.0" fill="rgb(215,151,53)" rx="2" ry="2" />
<text  x="39.41" y="287.5" ></text>
</g>
<g >
<title>zpl_write_common_iovec (30 samples, 0.02%)</title><rect x="15.5" y="69" width="0.3" height="15.0" fill="rgb(252,32,35)" rx="2" ry="2" />
<text  x="18.54" y="79.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (29 samples, 0.02%)</title><rect x="321.8" y="373" width="0.3" height="15.0" fill="rgb(236,69,19)" rx="2" ry="2" />
<text  x="324.79" y="383.5" ></text>
</g>
<g >
<title>__do_sys_futex (11 samples, 0.01%)</title><rect x="1180.4" y="325" width="0.1" height="15.0" fill="rgb(244,105,2)" rx="2" ry="2" />
<text  x="1183.39" y="335.5" ></text>
</g>
<g >
<title>do_sys_open (37 samples, 0.03%)</title><rect x="28.4" y="437" width="0.3" height="15.0" fill="rgb(213,94,54)" rx="2" ry="2" />
<text  x="31.40" y="447.5" ></text>
</g>
<g >
<title>[zedbox] (12 samples, 0.01%)</title><rect x="1180.4" y="373" width="0.1" height="15.0" fill="rgb(241,98,39)" rx="2" ry="2" />
<text  x="1183.38" y="383.5" ></text>
</g>
<g >
<title>all (129,594 samples, 100%)</title><rect x="10.0" y="533" width="1180.0" height="15.0" fill="rgb(242,75,46)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (12 samples, 0.01%)</title><rect x="29.1" y="453" width="0.1" height="15.0" fill="rgb(230,22,24)" rx="2" ry="2" />
<text  x="32.06" y="463.5" ></text>
</g>
<g >
<title>poll_schedule_timeout.constprop.9 (23 samples, 0.02%)</title><rect x="27.5" y="405" width="0.2" height="15.0" fill="rgb(228,79,54)" rx="2" ry="2" />
<text  x="30.52" y="415.5" ></text>
</g>
<g >
<title>receive_buf (11 samples, 0.01%)</title><rect x="1181.3" y="373" width="0.1" height="15.0" fill="rgb(250,183,32)" rx="2" ry="2" />
<text  x="1184.27" y="383.5" ></text>
</g>
<g >
<title>fput_many (32 samples, 0.02%)</title><rect x="26.4" y="405" width="0.3" height="15.0" fill="rgb(222,172,25)" rx="2" ry="2" />
<text  x="29.40" y="415.5" ></text>
</g>
<g >
<title>archive/tar.(*regFileReader).Read (282 samples, 0.22%)</title><rect x="13.0" y="197" width="2.5" height="15.0" fill="rgb(207,65,2)" rx="2" ry="2" />
<text  x="15.95" y="207.5" ></text>
</g>
<g >
<title>zfs_write (28 samples, 0.02%)</title><rect x="21.9" y="357" width="0.2" height="15.0" fill="rgb(211,27,50)" rx="2" ry="2" />
<text  x="24.87" y="367.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/api/services/content/v1._Content_Write_Handler (19 samples, 0.01%)</title><rect x="12.6" y="421" width="0.2" height="15.0" fill="rgb(212,222,17)" rx="2" ry="2" />
<text  x="15.59" y="431.5" ></text>
</g>
<g >
<title>irq_exit (11 samples, 0.01%)</title><rect x="321.6" y="373" width="0.1" height="15.0" fill="rgb(221,79,47)" rx="2" ry="2" />
<text  x="324.57" y="383.5" ></text>
</g>
<g >
<title>do_syscall_64 (50 samples, 0.04%)</title><rect x="31.1" y="453" width="0.4" height="15.0" fill="rgb(227,42,44)" rx="2" ry="2" />
<text  x="34.05" y="463.5" ></text>
</g>
<g >
<title>kvm_skip_emulated_instruction (39 samples, 0.03%)</title><rect x="32.8" y="357" width="0.4" height="15.0" fill="rgb(233,22,45)" rx="2" ry="2" />
<text  x="35.84" y="367.5" ></text>
</g>
<g >
<title>__kvm_set_msr (14 samples, 0.01%)</title><rect x="32.4" y="341" width="0.2" height="15.0" fill="rgb(224,111,41)" rx="2" ry="2" />
<text  x="35.44" y="351.5" ></text>
</g>
<g >
<title>net_rx_action (11 samples, 0.01%)</title><rect x="1176.9" y="341" width="0.1" height="15.0" fill="rgb(235,51,22)" rx="2" ry="2" />
<text  x="1179.88" y="351.5" ></text>
</g>
<g >
<title>new_sync_write (30 samples, 0.02%)</title><rect x="15.5" y="101" width="0.3" height="15.0" fill="rgb(249,125,45)" rx="2" ry="2" />
<text  x="18.54" y="111.5" ></text>
</g>
<g >
<title>zio_vdev_io_done (34 samples, 0.03%)</title><rect x="1179.2" y="437" width="0.3" height="15.0" fill="rgb(217,64,45)" rx="2" ry="2" />
<text  x="1182.16" y="447.5" ></text>
</g>
<g >
<title>do_filp_open (30 samples, 0.02%)</title><rect x="28.4" y="421" width="0.3" height="15.0" fill="rgb(252,46,26)" rx="2" ry="2" />
<text  x="31.43" y="431.5" ></text>
</g>
<g >
<title>__x64_sys_fchownat (13 samples, 0.01%)</title><rect x="16.2" y="165" width="0.1" height="15.0" fill="rgb(230,8,24)" rx="2" ry="2" />
<text  x="19.18" y="175.5" ></text>
</g>
<g >
<title>__apic_update_ppr (27 samples, 0.02%)</title><rect x="36.2" y="277" width="0.2" height="15.0" fill="rgb(229,128,44)" rx="2" ry="2" />
<text  x="39.17" y="287.5" ></text>
</g>
<g >
<title>path_lookupat.isra.37 (13 samples, 0.01%)</title><rect x="28.5" y="389" width="0.1" height="15.0" fill="rgb(247,105,21)" rx="2" ry="2" />
<text  x="31.53" y="399.5" ></text>
</g>
<g >
<title>schedule (20 samples, 0.02%)</title><rect x="21.6" y="389" width="0.2" height="15.0" fill="rgb(220,212,38)" rx="2" ry="2" />
<text  x="24.65" y="399.5" ></text>
</g>
<g >
<title>virtnet_poll (11 samples, 0.01%)</title><rect x="1181.3" y="389" width="0.1" height="15.0" fill="rgb(227,14,20)" rx="2" ry="2" />
<text  x="1184.27" y="399.5" ></text>
</g>
<g >
<title>[unknown] (17 samples, 0.01%)</title><rect x="30.4" y="469" width="0.2" height="15.0" fill="rgb(229,118,32)" rx="2" ry="2" />
<text  x="33.42" y="479.5" ></text>
</g>
<g >
<title>timekeeping_get_ns (112 samples, 0.09%)</title><rect x="33.3" y="325" width="1.0" height="15.0" fill="rgb(215,104,53)" rx="2" ry="2" />
<text  x="36.29" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (33 samples, 0.03%)</title><rect x="1189.0" y="357" width="0.3" height="15.0" fill="rgb(249,66,54)" rx="2" ry="2" />
<text  x="1192.02" y="367.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (84 samples, 0.06%)</title><rect x="1175.9" y="389" width="0.8" height="15.0" fill="rgb(253,42,54)" rx="2" ry="2" />
<text  x="1178.92" y="399.5" ></text>
</g>
<g >
<title>__srcu_read_lock (39 samples, 0.03%)</title><rect x="34.5" y="325" width="0.4" height="15.0" fill="rgb(247,59,4)" rx="2" ry="2" />
<text  x="37.53" y="335.5" ></text>
</g>
<g >
<title>vmx_interrupt_allowed (143 samples, 0.11%)</title><rect x="37.0" y="309" width="1.3" height="15.0" fill="rgb(231,206,42)" rx="2" ry="2" />
<text  x="40.00" y="319.5" ></text>
</g>
<g >
<title>__sched_text_start (86 samples, 0.07%)</title><rect x="1177.2" y="421" width="0.8" height="15.0" fill="rgb(223,148,10)" rx="2" ry="2" />
<text  x="1180.22" y="431.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (11 samples, 0.01%)</title><rect x="39.2" y="245" width="0.1" height="15.0" fill="rgb(236,227,37)" rx="2" ry="2" />
<text  x="42.22" y="255.5" ></text>
</g>
<g >
<title>ksys_ioctl (832 samples, 0.64%)</title><rect x="31.8" y="437" width="7.6" height="15.0" fill="rgb(227,169,8)" rx="2" ry="2" />
<text  x="34.78" y="447.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.01%)</title><rect x="1187.6" y="245" width="0.2" height="15.0" fill="rgb(222,206,38)" rx="2" ry="2" />
<text  x="1190.61" y="255.5" ></text>
</g>
<g >
<title>[zedbox] (905 samples, 0.70%)</title><rect x="1181.4" y="485" width="8.2" height="15.0" fill="rgb(222,1,53)" rx="2" ry="2" />
<text  x="1184.37" y="495.5" ></text>
</g>
<g >
<title>do_futex (33 samples, 0.03%)</title><rect x="21.6" y="437" width="0.3" height="15.0" fill="rgb(235,196,16)" rx="2" ry="2" />
<text  x="24.56" y="447.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (11 samples, 0.01%)</title><rect x="321.6" y="405" width="0.1" height="15.0" fill="rgb(236,112,22)" rx="2" ry="2" />
<text  x="324.57" y="415.5" ></text>
</g>
<g >
<title>[ld-musl-x86_64.so.1] (730 samples, 0.56%)</title><rect x="22.5" y="485" width="6.7" height="15.0" fill="rgb(224,213,14)" rx="2" ry="2" />
<text  x="25.52" y="495.5" ></text>
</g>
<g >
<title>ret_from_intr (11 samples, 0.01%)</title><rect x="1181.3" y="469" width="0.1" height="15.0" fill="rgb(210,148,14)" rx="2" ry="2" />
<text  x="1184.27" y="479.5" ></text>
</g>
<g >
<title>[unknown] (994 samples, 0.77%)</title><rect x="22.5" y="501" width="9.1" height="15.0" fill="rgb(250,124,19)" rx="2" ry="2" />
<text  x="25.52" y="511.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rax (13 samples, 0.01%)</title><rect x="31.7" y="485" width="0.1" height="15.0" fill="rgb(230,126,25)" rx="2" ry="2" />
<text  x="34.66" y="495.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/google.golang.org/grpc.(*Server).serveStreams (12 samples, 0.01%)</title><rect x="12.5" y="469" width="0.1" height="15.0" fill="rgb(236,54,30)" rx="2" ry="2" />
<text  x="15.48" y="479.5" ></text>
</g>
<g >
<title>[newlogd] (36 samples, 0.03%)</title><rect x="20.7" y="469" width="0.4" height="15.0" fill="rgb(207,167,30)" rx="2" ry="2" />
<text  x="23.74" y="479.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (84 samples, 0.06%)</title><rect x="1175.9" y="405" width="0.8" height="15.0" fill="rgb(207,47,21)" rx="2" ry="2" />
<text  x="1178.92" y="415.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/google.golang.org/grpc.(*Server).handleStream (454 samples, 0.35%)</title><rect x="12.6" y="469" width="4.1" height="15.0" fill="rgb(245,180,8)" rx="2" ry="2" />
<text  x="15.59" y="479.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/diff.(*compressedProcessor).Read (281 samples, 0.22%)</title><rect x="13.0" y="149" width="2.5" height="15.0" fill="rgb(253,132,49)" rx="2" ry="2" />
<text  x="15.96" y="159.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (66 samples, 0.05%)</title><rect x="21.6" y="485" width="0.6" height="15.0" fill="rgb(206,159,50)" rx="2" ry="2" />
<text  x="24.55" y="495.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (29 samples, 0.02%)</title><rect x="21.6" y="405" width="0.2" height="15.0" fill="rgb(249,168,53)" rx="2" ry="2" />
<text  x="24.56" y="415.5" ></text>
</g>
<g >
<title>kvm_arch_vcpu_ioctl_run (809 samples, 0.62%)</title><rect x="31.8" y="373" width="7.4" height="15.0" fill="rgb(228,172,11)" rx="2" ry="2" />
<text  x="34.82" y="383.5" ></text>
</g>
<g >
<title>do_syscall_64 (29 samples, 0.02%)</title><rect x="17.6" y="469" width="0.2" height="15.0" fill="rgb(214,11,11)" rx="2" ry="2" />
<text  x="20.57" y="479.5" ></text>
</g>
<g >
<title>zfsdev_ioctl (11 samples, 0.01%)</title><rect x="1189.8" y="373" width="0.1" height="15.0" fill="rgb(250,175,34)" rx="2" ry="2" />
<text  x="1192.81" y="383.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (832 samples, 0.64%)</title><rect x="31.8" y="453" width="7.6" height="15.0" fill="rgb(226,158,24)" rx="2" ry="2" />
<text  x="34.78" y="463.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/diff/walking/plugin.(*diffPlugin).Apply (423 samples, 0.33%)</title><rect x="12.8" y="357" width="3.8" height="15.0" fill="rgb(221,147,54)" rx="2" ry="2" />
<text  x="15.79" y="367.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive/compression.(*readCloserWrapper).Read (281 samples, 0.22%)</title><rect x="13.0" y="133" width="2.5" height="15.0" fill="rgb(236,67,27)" rx="2" ry="2" />
<text  x="15.96" y="143.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (17 samples, 0.01%)</title><rect x="21.7" y="325" width="0.1" height="15.0" fill="rgb(236,10,45)" rx="2" ry="2" />
<text  x="24.67" y="335.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).huffSym (73 samples, 0.06%)</title><rect x="13.6" y="69" width="0.7" height="15.0" fill="rgb(219,138,31)" rx="2" ry="2" />
<text  x="16.62" y="79.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.01%)</title><rect x="16.2" y="197" width="0.1" height="15.0" fill="rgb(220,109,27)" rx="2" ry="2" />
<text  x="19.18" y="207.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).Read (281 samples, 0.22%)</title><rect x="13.0" y="101" width="2.5" height="15.0" fill="rgb(224,118,28)" rx="2" ry="2" />
<text  x="15.96" y="111.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).huffmanBlock (97 samples, 0.07%)</title><rect x="14.4" y="69" width="0.9" height="15.0" fill="rgb(223,126,54)" rx="2" ry="2" />
<text  x="17.41" y="79.5" ></text>
</g>
<g >
<title>sync_dnodes_task (12 samples, 0.01%)</title><rect x="17.9" y="453" width="0.1" height="15.0" fill="rgb(219,31,4)" rx="2" ry="2" />
<text  x="20.86" y="463.5" ></text>
</g>
<g >
<title>[zedbox] (20 samples, 0.02%)</title><rect x="1180.4" y="469" width="0.2" height="15.0" fill="rgb(217,190,44)" rx="2" ry="2" />
<text  x="1183.38" y="479.5" ></text>
</g>
<g >
<title>eventfd_signal (38 samples, 0.03%)</title><rect x="32.0" y="293" width="0.3" height="15.0" fill="rgb(226,39,23)" rx="2" ry="2" />
<text  x="35.00" y="303.5" ></text>
</g>
<g >
<title>jq (191 samples, 0.15%)</title><rect x="18.4" y="517" width="1.7" height="15.0" fill="rgb(219,189,9)" rx="2" ry="2" />
<text  x="21.40" y="527.5" ></text>
</g>
<g >
<title>z_wr_iss_h (15 samples, 0.01%)</title><rect x="1180.2" y="517" width="0.2" height="15.0" fill="rgb(221,48,30)" rx="2" ry="2" />
<text  x="1183.23" y="527.5" ></text>
</g>
<g >
<title>[jq] (121 samples, 0.09%)</title><rect x="18.4" y="501" width="1.1" height="15.0" fill="rgb(242,83,16)" rx="2" ry="2" />
<text  x="21.40" y="511.5" ></text>
</g>
<g >
<title>skip_emulated_instruction (39 samples, 0.03%)</title><rect x="32.8" y="341" width="0.4" height="15.0" fill="rgb(247,59,53)" rx="2" ry="2" />
<text  x="35.84" y="351.5" ></text>
</g>
<g >
<title>runtime.gcDrain (37 samples, 0.03%)</title><rect x="10.7" y="437" width="0.3" height="15.0" fill="rgb(216,95,21)" rx="2" ry="2" />
<text  x="13.70" y="447.5" ></text>
</g>
<g >
<title>zpl_create (19 samples, 0.01%)</title><rect x="16.0" y="85" width="0.1" height="15.0" fill="rgb(225,54,39)" rx="2" ry="2" />
<text  x="18.95" y="95.5" ></text>
</g>
<g >
<title>kernel_thread (11 samples, 0.01%)</title><rect x="20.3" y="469" width="0.1" height="15.0" fill="rgb(254,65,52)" rx="2" ry="2" />
<text  x="23.28" y="479.5" ></text>
</g>
<g >
<title>[newlogd] (37 samples, 0.03%)</title><rect x="20.7" y="501" width="0.4" height="15.0" fill="rgb(250,144,12)" rx="2" ry="2" />
<text  x="23.73" y="511.5" ></text>
</g>
<g >
<title>zfs_create (18 samples, 0.01%)</title><rect x="16.0" y="69" width="0.1" height="15.0" fill="rgb(250,110,52)" rx="2" ry="2" />
<text  x="18.96" y="79.5" ></text>
</g>
<g >
<title>ksys_ioctl (11 samples, 0.01%)</title><rect x="1189.8" y="421" width="0.1" height="15.0" fill="rgb(209,77,44)" rx="2" ry="2" />
<text  x="1192.81" y="431.5" ></text>
</g>
<g >
<title>fput_many (18 samples, 0.01%)</title><rect x="27.2" y="389" width="0.2" height="15.0" fill="rgb(230,105,22)" rx="2" ry="2" />
<text  x="30.24" y="399.5" ></text>
</g>
<g >
<title>dnsmasq (107 samples, 0.08%)</title><rect x="16.9" y="517" width="0.9" height="15.0" fill="rgb(216,155,15)" rx="2" ry="2" />
<text  x="19.87" y="527.5" ></text>
</g>
<g >
<title>ioctl (856 samples, 0.66%)</title><rect x="31.6" y="501" width="7.8" height="15.0" fill="rgb(207,3,53)" rx="2" ry="2" />
<text  x="34.62" y="511.5" ></text>
</g>
<g >
<title>handle_ept_misconfig (42 samples, 0.03%)</title><rect x="32.0" y="357" width="0.4" height="15.0" fill="rgb(205,177,22)" rx="2" ry="2" />
<text  x="34.98" y="367.5" ></text>
</g>
<g >
<title>__fcheck_files (25 samples, 0.02%)</title><rect x="24.8" y="373" width="0.2" height="15.0" fill="rgb(248,87,45)" rx="2" ry="2" />
<text  x="27.78" y="383.5" ></text>
</g>
<g >
<title>[zedbox] (903 samples, 0.70%)</title><rect x="1181.4" y="469" width="8.2" height="15.0" fill="rgb(219,31,11)" rx="2" ry="2" />
<text  x="1184.38" y="479.5" ></text>
</g>
<g >
<title>kvm_mmu_page_fault (11 samples, 0.01%)</title><rect x="32.7" y="357" width="0.1" height="15.0" fill="rgb(224,172,32)" rx="2" ry="2" />
<text  x="35.73" y="367.5" ></text>
</g>
<g >
<title>poll_freewait (91 samples, 0.07%)</title><rect x="26.7" y="405" width="0.8" height="15.0" fill="rgb(243,26,25)" rx="2" ry="2" />
<text  x="29.69" y="415.5" ></text>
</g>
<g >
<title>vmx_set_msr (14 samples, 0.01%)</title><rect x="32.4" y="325" width="0.2" height="15.0" fill="rgb(212,33,48)" rx="2" ry="2" />
<text  x="35.44" y="335.5" ></text>
</g>
<g >
<title>[zedbox] (99 samples, 0.08%)</title><rect x="1186.3" y="213" width="0.9" height="15.0" fill="rgb(233,168,45)" rx="2" ry="2" />
<text  x="1189.32" y="223.5" ></text>
</g>
<g >
<title>irq_exit (11 samples, 0.01%)</title><rect x="1181.3" y="437" width="0.1" height="15.0" fill="rgb(254,48,27)" rx="2" ry="2" />
<text  x="1184.27" y="447.5" ></text>
</g>
<g >
<title>wwan-init.sh (16 samples, 0.01%)</title><rect x="1178.4" y="517" width="0.2" height="15.0" fill="rgb(254,35,34)" rx="2" ry="2" />
<text  x="1181.45" y="527.5" ></text>
</g>
<g >
<title>[memlogd] (12 samples, 0.01%)</title><rect x="20.5" y="437" width="0.1" height="15.0" fill="rgb(240,198,19)" rx="2" ry="2" />
<text  x="23.47" y="447.5" ></text>
</g>
<g >
<title>iptables (24 samples, 0.02%)</title><rect x="18.2" y="517" width="0.2" height="15.0" fill="rgb(246,157,2)" rx="2" ry="2" />
<text  x="21.19" y="527.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (11 samples, 0.01%)</title><rect x="321.6" y="389" width="0.1" height="15.0" fill="rgb(207,3,28)" rx="2" ry="2" />
<text  x="324.57" y="399.5" ></text>
</g>
<g >
<title>[jq] (58 samples, 0.04%)</title><rect x="19.5" y="485" width="0.5" height="15.0" fill="rgb(233,185,7)" rx="2" ry="2" />
<text  x="22.52" y="495.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/diff/apply.apply (423 samples, 0.33%)</title><rect x="12.8" y="325" width="3.8" height="15.0" fill="rgb(235,204,36)" rx="2" ry="2" />
<text  x="15.79" y="335.5" ></text>
</g>
<g >
<title>do_task_stat (11 samples, 0.01%)</title><rect x="1187.1" y="101" width="0.1" height="15.0" fill="rgb(216,18,15)" rx="2" ry="2" />
<text  x="1190.11" y="111.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).huffSym (52 samples, 0.04%)</title><rect x="14.8" y="53" width="0.4" height="15.0" fill="rgb(224,2,26)" rx="2" ry="2" />
<text  x="17.76" y="63.5" ></text>
</g>
<g >
<title>blk_done_softirq (15 samples, 0.01%)</title><rect x="1176.7" y="341" width="0.2" height="15.0" fill="rgb(243,3,30)" rx="2" ry="2" />
<text  x="1179.74" y="351.5" ></text>
</g>
<g >
<title>runtime.systemstack (38 samples, 0.03%)</title><rect x="10.7" y="469" width="0.3" height="15.0" fill="rgb(220,180,44)" rx="2" ry="2" />
<text  x="13.70" y="479.5" ></text>
</g>
<g >
<title>kthread (26 samples, 0.02%)</title><rect x="1178.1" y="485" width="0.2" height="15.0" fill="rgb(248,125,19)" rx="2" ry="2" />
<text  x="1181.11" y="495.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (22 samples, 0.02%)</title><rect x="1177.0" y="437" width="0.2" height="15.0" fill="rgb(214,113,19)" rx="2" ry="2" />
<text  x="1179.99" y="447.5" ></text>
</g>
<g >
<title>__do_sys_futex (34 samples, 0.03%)</title><rect x="21.6" y="453" width="0.3" height="15.0" fill="rgb(245,13,12)" rx="2" ry="2" />
<text  x="24.55" y="463.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/services/diff.(*local).Apply (423 samples, 0.33%)</title><rect x="12.8" y="373" width="3.8" height="15.0" fill="rgb(238,21,54)" rx="2" ry="2" />
<text  x="15.79" y="383.5" ></text>
</g>
<g >
<title>ksys_write (30 samples, 0.02%)</title><rect x="15.5" y="133" width="0.3" height="15.0" fill="rgb(226,143,39)" rx="2" ry="2" />
<text  x="18.54" y="143.5" ></text>
</g>
<g >
<title>os.Lchown (14 samples, 0.01%)</title><rect x="16.2" y="229" width="0.1" height="15.0" fill="rgb(230,79,36)" rx="2" ry="2" />
<text  x="19.18" y="239.5" ></text>
</g>
<g >
<title>do_sys_open (21 samples, 0.02%)</title><rect x="15.9" y="133" width="0.2" height="15.0" fill="rgb(238,165,2)" rx="2" ry="2" />
<text  x="18.94" y="143.5" ></text>
</g>
<g >
<title>napi_gro_receive (11 samples, 0.01%)</title><rect x="1181.3" y="357" width="0.1" height="15.0" fill="rgb(211,9,29)" rx="2" ry="2" />
<text  x="1184.27" y="367.5" ></text>
</g>
<g >
<title>[zedbox] (26 samples, 0.02%)</title><rect x="1186.8" y="149" width="0.3" height="15.0" fill="rgb(252,214,0)" rx="2" ry="2" />
<text  x="1189.82" y="159.5" ></text>
</g>
<g >
<title>[zedbox] (318 samples, 0.25%)</title><rect x="1185.2" y="277" width="2.9" height="15.0" fill="rgb(248,125,16)" rx="2" ry="2" />
<text  x="1188.23" y="287.5" ></text>
</g>
<g >
<title>vmx_read_guest_seg_ar (21 samples, 0.02%)</title><rect x="33.0" y="245" width="0.2" height="15.0" fill="rgb(234,39,46)" rx="2" ry="2" />
<text  x="35.99" y="255.5" ></text>
</g>
<g >
<title>kvm_io_bus_write (42 samples, 0.03%)</title><rect x="32.0" y="341" width="0.4" height="15.0" fill="rgb(248,1,36)" rx="2" ry="2" />
<text  x="34.98" y="351.5" ></text>
</g>
<g >
<title>do_syscall_64 (632 samples, 0.49%)</title><rect x="23.3" y="453" width="5.8" height="15.0" fill="rgb(233,83,6)" rx="2" ry="2" />
<text  x="26.30" y="463.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (47 samples, 0.04%)</title><rect x="25.9" y="373" width="0.4" height="15.0" fill="rgb(212,141,3)" rx="2" ry="2" />
<text  x="28.90" y="383.5" ></text>
</g>
<g >
<title>[zedbox] (66 samples, 0.05%)</title><rect x="1186.5" y="197" width="0.6" height="15.0" fill="rgb(210,58,43)" rx="2" ry="2" />
<text  x="1189.48" y="207.5" ></text>
</g>
<g >
<title>ip6tables (13 samples, 0.01%)</title><rect x="18.0" y="517" width="0.2" height="15.0" fill="rgb(217,36,24)" rx="2" ry="2" />
<text  x="21.05" y="527.5" ></text>
</g>
<g >
<title>[zedbox] (667 samples, 0.51%)</title><rect x="1183.2" y="373" width="6.1" height="15.0" fill="rgb(207,156,50)" rx="2" ry="2" />
<text  x="1186.24" y="383.5" ></text>
</g>
<g >
<title>do_syscall_64 (23 samples, 0.02%)</title><rect x="1187.4" y="213" width="0.2" height="15.0" fill="rgb(253,95,35)" rx="2" ry="2" />
<text  x="1190.38" y="223.5" ></text>
</g>
<g >
<title>zpl_write_common_iovec (17 samples, 0.01%)</title><rect x="1189.2" y="261" width="0.1" height="15.0" fill="rgb(235,36,35)" rx="2" ry="2" />
<text  x="1192.16" y="271.5" ></text>
</g>
<g >
<title>zfs_write (17 samples, 0.01%)</title><rect x="1189.2" y="245" width="0.1" height="15.0" fill="rgb(249,12,27)" rx="2" ry="2" />
<text  x="1192.16" y="255.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive.Apply (417 samples, 0.32%)</title><rect x="12.8" y="277" width="3.8" height="15.0" fill="rgb(207,59,36)" rx="2" ry="2" />
<text  x="15.79" y="287.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (42 samples, 0.03%)</title><rect x="31.1" y="341" width="0.4" height="15.0" fill="rgb(254,136,34)" rx="2" ry="2" />
<text  x="34.11" y="351.5" ></text>
</g>
<g >
<title>vfs_read (14 samples, 0.01%)</title><rect x="1188.0" y="213" width="0.1" height="15.0" fill="rgb(224,46,12)" rx="2" ry="2" />
<text  x="1190.98" y="223.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (51 samples, 0.04%)</title><rect x="25.9" y="389" width="0.4" height="15.0" fill="rgb(239,43,29)" rx="2" ry="2" />
<text  x="28.86" y="399.5" ></text>
</g>
<g >
<title>vfs_write (30 samples, 0.02%)</title><rect x="15.5" y="117" width="0.3" height="15.0" fill="rgb(231,135,39)" rx="2" ry="2" />
<text  x="18.54" y="127.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.01%)</title><rect x="21.1" y="485" width="0.2" height="15.0" fill="rgb(246,220,43)" rx="2" ry="2" />
<text  x="24.14" y="495.5" ></text>
</g>
<g >
<title>__do_sys_futex (48 samples, 0.04%)</title><rect x="31.1" y="437" width="0.4" height="15.0" fill="rgb(247,195,39)" rx="2" ry="2" />
<text  x="34.05" y="447.5" ></text>
</g>
<g >
<title>do_syscall_64 (21 samples, 0.02%)</title><rect x="15.9" y="149" width="0.2" height="15.0" fill="rgb(242,83,15)" rx="2" ry="2" />
<text  x="18.94" y="159.5" ></text>
</g>
<g >
<title>do_vfs_ioctl (11 samples, 0.01%)</title><rect x="1189.8" y="405" width="0.1" height="15.0" fill="rgb(239,27,47)" rx="2" ry="2" />
<text  x="1192.81" y="415.5" ></text>
</g>
<g >
<title>zfs_write (30 samples, 0.02%)</title><rect x="15.5" y="53" width="0.3" height="15.0" fill="rgb(232,221,8)" rx="2" ry="2" />
<text  x="18.54" y="63.5" ></text>
</g>
<g >
<title>zio_done (41 samples, 0.03%)</title><rect x="1178.8" y="437" width="0.4" height="15.0" fill="rgb(244,59,46)" rx="2" ry="2" />
<text  x="1181.78" y="447.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/diff/apply.apply.func1 (417 samples, 0.32%)</title><rect x="12.8" y="293" width="3.8" height="15.0" fill="rgb(249,119,3)" rx="2" ry="2" />
<text  x="15.79" y="303.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/services/content/contentserver.(*service).Write (19 samples, 0.01%)</title><rect x="12.6" y="405" width="0.2" height="15.0" fill="rgb(238,113,33)" rx="2" ry="2" />
<text  x="15.59" y="415.5" ></text>
</g>
<g >
<title>__raw_spin_unlock_irq (22 samples, 0.02%)</title><rect x="28.8" y="389" width="0.2" height="15.0" fill="rgb(246,95,50)" rx="2" ry="2" />
<text  x="31.82" y="399.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (20 samples, 0.02%)</title><rect x="1175.9" y="341" width="0.2" height="15.0" fill="rgb(241,145,49)" rx="2" ry="2" />
<text  x="1178.93" y="351.5" ></text>
</g>
<g >
<title>vfs_read (11 samples, 0.01%)</title><rect x="1187.1" y="149" width="0.1" height="15.0" fill="rgb(234,207,26)" rx="2" ry="2" />
<text  x="1190.11" y="159.5" ></text>
</g>
<g >
<title>taskq_thread (15 samples, 0.01%)</title><rect x="1180.2" y="469" width="0.2" height="15.0" fill="rgb(249,79,4)" rx="2" ry="2" />
<text  x="1183.23" y="479.5" ></text>
</g>
<g >
<title>test_bit (18 samples, 0.01%)</title><rect x="36.8" y="309" width="0.2" height="15.0" fill="rgb(236,157,6)" rx="2" ry="2" />
<text  x="39.83" y="319.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (11 samples, 0.01%)</title><rect x="1181.3" y="421" width="0.1" height="15.0" fill="rgb(225,43,38)" rx="2" ry="2" />
<text  x="1184.27" y="431.5" ></text>
</g>
<g >
<title>kvm_irq_delivery_to_apic (18 samples, 0.01%)</title><rect x="39.2" y="341" width="0.2" height="15.0" fill="rgb(222,142,39)" rx="2" ry="2" />
<text  x="42.19" y="351.5" ></text>
</g>
<g >
<title>[memlogd] (11 samples, 0.01%)</title><rect x="20.5" y="357" width="0.1" height="15.0" fill="rgb(241,76,20)" rx="2" ry="2" />
<text  x="23.48" y="367.5" ></text>
</g>
<g >
<title>__sched_text_start (24 samples, 0.02%)</title><rect x="38.6" y="325" width="0.2" height="15.0" fill="rgb(223,218,45)" rx="2" ry="2" />
<text  x="41.56" y="335.5" ></text>
</g>
<g >
<title>do_syscall_64 (22 samples, 0.02%)</title><rect x="1188.7" y="309" width="0.2" height="15.0" fill="rgb(218,35,34)" rx="2" ry="2" />
<text  x="1191.65" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (16 samples, 0.01%)</title><rect x="1187.2" y="197" width="0.2" height="15.0" fill="rgb(225,175,21)" rx="2" ry="2" />
<text  x="1190.22" y="207.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/github.com/containerd/continuity/fs.walkLinks (13 samples, 0.01%)</title><rect x="16.4" y="181" width="0.1" height="15.0" fill="rgb(211,32,48)" rx="2" ry="2" />
<text  x="19.41" y="191.5" ></text>
</g>
<g >
<title>os.(*File).Write (32 samples, 0.02%)</title><rect x="15.5" y="213" width="0.3" height="15.0" fill="rgb(245,154,11)" rx="2" ry="2" />
<text  x="18.52" y="223.5" ></text>
</g>
<g >
<title>runtime.goexit (495 samples, 0.38%)</title><rect x="12.3" y="501" width="4.5" height="15.0" fill="rgb(244,25,28)" rx="2" ry="2" />
<text  x="15.27" y="511.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/diff/apply.(*readCounter).Read (282 samples, 0.22%)</title><rect x="13.0" y="181" width="2.5" height="15.0" fill="rgb(252,126,21)" rx="2" ry="2" />
<text  x="15.95" y="191.5" ></text>
</g>
<g >
<title>kvm_cpu_has_extint (20 samples, 0.02%)</title><rect x="36.6" y="293" width="0.2" height="15.0" fill="rgb(250,103,9)" rx="2" ry="2" />
<text  x="39.58" y="303.5" ></text>
</g>
<g >
<title>vfs_write (26 samples, 0.02%)</title><rect x="28.8" y="421" width="0.3" height="15.0" fill="rgb(226,135,54)" rx="2" ry="2" />
<text  x="31.82" y="431.5" ></text>
</g>
<g >
<title>kvm_set_msr_common (13 samples, 0.01%)</title><rect x="32.5" y="309" width="0.1" height="15.0" fill="rgb(235,195,40)" rx="2" ry="2" />
<text  x="35.45" y="319.5" ></text>
</g>
<g >
<title>proc_single_show (11 samples, 0.01%)</title><rect x="1187.1" y="117" width="0.1" height="15.0" fill="rgb(238,171,27)" rx="2" ry="2" />
<text  x="1190.11" y="127.5" ></text>
</g>
<g >
<title>swapper (124,980 samples, 96.44%)</title><rect x="40.0" y="517" width="1138.0" height="15.0" fill="rgb(222,73,12)" rx="2" ry="2" />
<text  x="43.05" y="527.5" >swapper</text>
</g>
<g >
<title>do_syscall_64 (28 samples, 0.02%)</title><rect x="1188.1" y="261" width="0.3" height="15.0" fill="rgb(225,113,28)" rx="2" ry="2" />
<text  x="1191.12" y="271.5" ></text>
</g>
<g >
<title>runtime.scanobject (27 samples, 0.02%)</title><rect x="10.8" y="421" width="0.2" height="15.0" fill="rgb(223,126,21)" rx="2" ry="2" />
<text  x="13.79" y="431.5" ></text>
</g>
<g >
<title>zio_compress_data (13 samples, 0.01%)</title><rect x="1180.1" y="421" width="0.1" height="15.0" fill="rgb(222,54,24)" rx="2" ry="2" />
<text  x="1183.10" y="431.5" ></text>
</g>
<g >
<title>[unknown] (21 samples, 0.02%)</title><rect x="1189.7" y="501" width="0.2" height="15.0" fill="rgb(236,77,41)" rx="2" ry="2" />
<text  x="1192.72" y="511.5" ></text>
</g>
<g >
<title>[unknown] (91 samples, 0.07%)</title><rect x="10.4" y="485" width="0.8" height="15.0" fill="rgb(210,86,40)" rx="2" ry="2" />
<text  x="13.37" y="495.5" ></text>
</g>
<g >
<title>thread_generic_wrapper (26 samples, 0.02%)</title><rect x="1178.1" y="469" width="0.2" height="15.0" fill="rgb(208,225,26)" rx="2" ry="2" />
<text  x="1181.11" y="479.5" ></text>
</g>
<g >
<title>do_pwritev (29 samples, 0.02%)</title><rect x="21.9" y="453" width="0.2" height="15.0" fill="rgb(216,143,22)" rx="2" ry="2" />
<text  x="24.86" y="463.5" ></text>
</g>
<g >
<title>os.openFileNolog (24 samples, 0.02%)</title><rect x="15.9" y="197" width="0.2" height="15.0" fill="rgb(238,110,16)" rx="2" ry="2" />
<text  x="18.91" y="207.5" ></text>
</g>
<g >
<title>irq_exit (31 samples, 0.02%)</title><rect x="1176.7" y="373" width="0.3" height="15.0" fill="rgb(243,143,45)" rx="2" ry="2" />
<text  x="1179.70" y="383.5" ></text>
</g>
<g >
<title>do_syscall_64 (63 samples, 0.05%)</title><rect x="21.6" y="469" width="0.5" height="15.0" fill="rgb(246,210,22)" rx="2" ry="2" />
<text  x="24.55" y="479.5" ></text>
</g>
<g >
<title>cpu_startup_entry (94,008 samples, 72.54%)</title><rect x="322.1" y="469" width="855.9" height="15.0" fill="rgb(247,69,25)" rx="2" ry="2" />
<text  x="325.06" y="479.5" >cpu_startup_entry</text>
</g>
<g >
<title>kvm_arch_vcpu_runnable (320 samples, 0.25%)</title><rect x="35.4" y="325" width="2.9" height="15.0" fill="rgb(233,171,45)" rx="2" ry="2" />
<text  x="38.39" y="335.5" ></text>
</g>
<g >
<title>ret_from_fork (77 samples, 0.06%)</title><rect x="1179.5" y="501" width="0.7" height="15.0" fill="rgb(246,184,42)" rx="2" ry="2" />
<text  x="1182.53" y="511.5" ></text>
</g>
<g >
<title>[newlogd] (35 samples, 0.03%)</title><rect x="20.7" y="453" width="0.4" height="15.0" fill="rgb(221,160,27)" rx="2" ry="2" />
<text  x="23.74" y="463.5" ></text>
</g>
<g >
<title>kvm_arch_vcpu_load (11 samples, 0.01%)</title><rect x="38.7" y="293" width="0.1" height="15.0" fill="rgb(243,165,2)" rx="2" ry="2" />
<text  x="41.68" y="303.5" ></text>
</g>
<g >
<title>[zedbox] (555 samples, 0.43%)</title><rect x="1183.8" y="341" width="5.1" height="15.0" fill="rgb(233,59,50)" rx="2" ry="2" />
<text  x="1186.81" y="351.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (11 samples, 0.01%)</title><rect x="321.6" y="357" width="0.1" height="15.0" fill="rgb(219,89,13)" rx="2" ry="2" />
<text  x="324.57" y="367.5" ></text>
</g>
<g >
<title>[ld-musl-x86_64.so.1] (14 samples, 0.01%)</title><rect x="21.1" y="501" width="0.2" height="15.0" fill="rgb(219,194,47)" rx="2" ry="2" />
<text  x="24.13" y="511.5" ></text>
</g>
<g >
<title>[zedbox] (15 samples, 0.01%)</title><rect x="1186.8" y="133" width="0.2" height="15.0" fill="rgb(221,80,10)" rx="2" ry="2" />
<text  x="1189.85" y="143.5" ></text>
</g>
<g >
<title>vmx_vcpu_load (11 samples, 0.01%)</title><rect x="38.7" y="277" width="0.1" height="15.0" fill="rgb(244,150,28)" rx="2" ry="2" />
<text  x="41.68" y="287.5" ></text>
</g>
<g >
<title>do_iter_write (29 samples, 0.02%)</title><rect x="21.9" y="421" width="0.2" height="15.0" fill="rgb(236,60,35)" rx="2" ry="2" />
<text  x="24.86" y="431.5" ></text>
</g>
<g >
<title>prb_retire_rx_blk_timer_expired (12 samples, 0.01%)</title><rect x="1176.6" y="293" width="0.1" height="15.0" fill="rgb(233,136,36)" rx="2" ry="2" />
<text  x="1179.57" y="303.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (37 samples, 0.03%)</title><rect x="32.0" y="261" width="0.3" height="15.0" fill="rgb(251,206,39)" rx="2" ry="2" />
<text  x="35.01" y="271.5" ></text>
</g>
<g >
<title>task_work_run (12 samples, 0.01%)</title><rect x="29.1" y="437" width="0.1" height="15.0" fill="rgb(210,213,42)" rx="2" ry="2" />
<text  x="32.06" y="447.5" ></text>
</g>
<g >
<title>[zedbox] (12 samples, 0.01%)</title><rect x="1180.4" y="389" width="0.1" height="15.0" fill="rgb(239,0,42)" rx="2" ry="2" />
<text  x="1183.38" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.01%)</title><rect x="1188.5" y="309" width="0.1" height="15.0" fill="rgb(230,43,22)" rx="2" ry="2" />
<text  x="1191.48" y="319.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).huffmanBlock (148 samples, 0.11%)</title><rect x="13.0" y="85" width="1.3" height="15.0" fill="rgb(234,46,41)" rx="2" ry="2" />
<text  x="15.99" y="95.5" ></text>
</g>
<g >
<title>zedbox (1,014 samples, 0.78%)</title><rect x="1180.4" y="517" width="9.2" height="15.0" fill="rgb(230,226,54)" rx="2" ry="2" />
<text  x="1183.38" y="527.5" ></text>
</g>
<g >
<title>zio_nowait (13 samples, 0.01%)</title><rect x="1179.9" y="405" width="0.1" height="15.0" fill="rgb(218,222,13)" rx="2" ry="2" />
<text  x="1182.89" y="415.5" ></text>
</g>
<g >
<title>txg_sync_thread (26 samples, 0.02%)</title><rect x="1178.1" y="453" width="0.2" height="15.0" fill="rgb(252,61,25)" rx="2" ry="2" />
<text  x="1181.11" y="463.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (56 samples, 0.04%)</title><rect x="26.7" y="389" width="0.5" height="15.0" fill="rgb(217,23,38)" rx="2" ry="2" />
<text  x="29.71" y="399.5" ></text>
</g>
<g >
<title>zio_vdev_io_start (21 samples, 0.02%)</title><rect x="1179.9" y="437" width="0.2" height="15.0" fill="rgb(231,27,25)" rx="2" ry="2" />
<text  x="1182.87" y="447.5" ></text>
</g>
<g >
<title>kvm_apic_has_interrupt (68 samples, 0.05%)</title><rect x="36.0" y="293" width="0.6" height="15.0" fill="rgb(214,54,12)" rx="2" ry="2" />
<text  x="38.96" y="303.5" ></text>
</g>
<g >
<title>__sched_text_start (17 samples, 0.01%)</title><rect x="27.6" y="357" width="0.1" height="15.0" fill="rgb(241,77,19)" rx="2" ry="2" />
<text  x="30.57" y="367.5" ></text>
</g>
<g >
<title>do_futex (48 samples, 0.04%)</title><rect x="31.1" y="421" width="0.4" height="15.0" fill="rgb(219,191,33)" rx="2" ry="2" />
<text  x="34.05" y="431.5" ></text>
</g>
<g >
<title>__do_sys_futex (11 samples, 0.01%)</title><rect x="10.5" y="405" width="0.1" height="15.0" fill="rgb(222,66,12)" rx="2" ry="2" />
<text  x="13.47" y="415.5" ></text>
</g>
<g >
<title>secondary_startup_64 (124,979 samples, 96.44%)</title><rect x="40.1" y="501" width="1137.9" height="15.0" fill="rgb(252,191,48)" rx="2" ry="2" />
<text  x="43.06" y="511.5" >secondary_startup_64</text>
</g>
<g >
<title>net_rx_action (11 samples, 0.01%)</title><rect x="1181.3" y="405" width="0.1" height="15.0" fill="rgb(226,126,6)" rx="2" ry="2" />
<text  x="1184.27" y="415.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (14 samples, 0.01%)</title><rect x="1179.0" y="405" width="0.1" height="15.0" fill="rgb(207,213,27)" rx="2" ry="2" />
<text  x="1182.01" y="415.5" ></text>
</g>
<g >
<title>memmove (17 samples, 0.01%)</title><rect x="39.5" y="501" width="0.2" height="15.0" fill="rgb(229,166,29)" rx="2" ry="2" />
<text  x="42.54" y="511.5" ></text>
</g>
<g >
<title>pgrep (14 samples, 0.01%)</title><rect x="21.1" y="517" width="0.2" height="15.0" fill="rgb(226,173,50)" rx="2" ry="2" />
<text  x="24.13" y="527.5" ></text>
</g>
<g >
<title>do_vfs_ioctl (830 samples, 0.64%)</title><rect x="31.8" y="421" width="7.6" height="15.0" fill="rgb(245,67,11)" rx="2" ry="2" />
<text  x="34.80" y="431.5" ></text>
</g>
<g >
<title>[unknown] (20 samples, 0.02%)</title><rect x="1180.4" y="485" width="0.2" height="15.0" fill="rgb(252,32,48)" rx="2" ry="2" />
<text  x="1183.38" y="495.5" ></text>
</g>
<g >
<title>[zedbox] (47 samples, 0.04%)</title><rect x="1186.6" y="181" width="0.5" height="15.0" fill="rgb(214,160,6)" rx="2" ry="2" />
<text  x="1189.64" y="191.5" ></text>
</g>
<g >
<title>[zedbox] (33 samples, 0.03%)</title><rect x="1186.8" y="165" width="0.3" height="15.0" fill="rgb(206,227,0)" rx="2" ry="2" />
<text  x="1189.76" y="175.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/diff/apply.(*fsApplier).Apply (423 samples, 0.33%)</title><rect x="12.8" y="341" width="3.8" height="15.0" fill="rgb(212,41,29)" rx="2" ry="2" />
<text  x="15.79" y="351.5" ></text>
</g>
<g >
<title>vdev_disk_io_start (14 samples, 0.01%)</title><rect x="1179.3" y="373" width="0.2" height="15.0" fill="rgb(220,195,18)" rx="2" ry="2" />
<text  x="1182.34" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.01%)</title><rect x="1180.4" y="357" width="0.1" height="15.0" fill="rgb(252,48,22)" rx="2" ry="2" />
<text  x="1183.39" y="367.5" ></text>
</g>
<g >
<title>do_syscall_64 (15 samples, 0.01%)</title><rect x="1187.1" y="181" width="0.1" height="15.0" fill="rgb(246,216,1)" rx="2" ry="2" />
<text  x="1190.08" y="191.5" ></text>
</g>
<g >
<title>[zedbox] (181 samples, 0.14%)</title><rect x="1186.0" y="245" width="1.6" height="15.0" fill="rgb(208,199,19)" rx="2" ry="2" />
<text  x="1188.96" y="255.5" ></text>
</g>
<g >
<title>finish_task_switch (17 samples, 0.01%)</title><rect x="27.6" y="341" width="0.1" height="15.0" fill="rgb(205,204,1)" rx="2" ry="2" />
<text  x="30.57" y="351.5" ></text>
</g>
<g >
<title>scsi_end_request (15 samples, 0.01%)</title><rect x="1176.7" y="309" width="0.2" height="15.0" fill="rgb(210,80,50)" rx="2" ry="2" />
<text  x="1179.74" y="319.5" ></text>
</g>
<g >
<title>[newlogd] (33 samples, 0.03%)</title><rect x="20.8" y="421" width="0.3" height="15.0" fill="rgb(238,38,38)" rx="2" ry="2" />
<text  x="23.76" y="431.5" ></text>
</g>
<g >
<title>run_timer_softirq (22 samples, 0.02%)</title><rect x="1176.5" y="341" width="0.2" height="15.0" fill="rgb(219,65,39)" rx="2" ry="2" />
<text  x="1179.49" y="351.5" ></text>
</g>
<g >
<title>__do_insn_fetch_bytes (29 samples, 0.02%)</title><rect x="32.9" y="293" width="0.3" height="15.0" fill="rgb(248,210,29)" rx="2" ry="2" />
<text  x="35.93" y="303.5" ></text>
</g>
<g >
<title>update_blocked_averages (22 samples, 0.02%)</title><rect x="1176.3" y="325" width="0.2" height="15.0" fill="rgb(221,133,33)" rx="2" ry="2" />
<text  x="1179.29" y="335.5" ></text>
</g>
<g >
<title>[zedbox] (20 samples, 0.02%)</title><rect x="1180.4" y="421" width="0.2" height="15.0" fill="rgb(242,209,17)" rx="2" ry="2" />
<text  x="1183.38" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.01%)</title><rect x="1187.2" y="213" width="0.2" height="15.0" fill="rgb(212,54,10)" rx="2" ry="2" />
<text  x="1190.22" y="223.5" ></text>
</g>
<g >
<title>irq_exit (84 samples, 0.06%)</title><rect x="1175.9" y="373" width="0.8" height="15.0" fill="rgb(238,135,49)" rx="2" ry="2" />
<text  x="1178.92" y="383.5" ></text>
</g>
<g >
<title>__raw_spin_unlock_irq (81 samples, 0.06%)</title><rect x="1177.2" y="389" width="0.8" height="15.0" fill="rgb(243,89,12)" rx="2" ry="2" />
<text  x="1180.24" y="399.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (81 samples, 0.06%)</title><rect x="1177.2" y="373" width="0.8" height="15.0" fill="rgb(232,142,20)" rx="2" ry="2" />
<text  x="1180.24" y="383.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (15 samples, 0.01%)</title><rect x="10.5" y="469" width="0.1" height="15.0" fill="rgb(228,13,28)" rx="2" ry="2" />
<text  x="13.46" y="479.5" ></text>
</g>
<g >
<title>do_syscall_64 (17 samples, 0.01%)</title><rect x="1188.9" y="325" width="0.1" height="15.0" fill="rgb(228,171,23)" rx="2" ry="2" />
<text  x="1191.86" y="335.5" ></text>
</g>
<g >
<title>spa_sync (23 samples, 0.02%)</title><rect x="1178.1" y="437" width="0.2" height="15.0" fill="rgb(210,20,44)" rx="2" ry="2" />
<text  x="1181.14" y="447.5" ></text>
</g>
<g >
<title>vdev_queue_io_done (34 samples, 0.03%)</title><rect x="1179.2" y="421" width="0.3" height="15.0" fill="rgb(234,114,43)" rx="2" ry="2" />
<text  x="1182.16" y="431.5" ></text>
</g>
<g >
<title>runtime.futex (15 samples, 0.01%)</title><rect x="10.5" y="453" width="0.1" height="15.0" fill="rgb(208,80,35)" rx="2" ry="2" />
<text  x="13.46" y="463.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker.func2 (37 samples, 0.03%)</title><rect x="10.7" y="453" width="0.3" height="15.0" fill="rgb(246,14,20)" rx="2" ry="2" />
<text  x="13.70" y="463.5" ></text>
</g>
<g >
<title>containerd (703 samples, 0.54%)</title><rect x="10.4" y="517" width="6.4" height="15.0" fill="rgb(230,40,14)" rx="2" ry="2" />
<text  x="13.37" y="527.5" ></text>
</g>
<g >
<title>finish_task_switch (29 samples, 0.02%)</title><rect x="321.8" y="405" width="0.3" height="15.0" fill="rgb(227,96,41)" rx="2" ry="2" />
<text  x="324.79" y="415.5" ></text>
</g>
<g >
<title>__pollwait (48 samples, 0.04%)</title><rect x="25.4" y="389" width="0.5" height="15.0" fill="rgb(206,220,36)" rx="2" ry="2" />
<text  x="28.42" y="399.5" ></text>
</g>
<g >
<title>ksys_read (15 samples, 0.01%)</title><rect x="1188.0" y="229" width="0.1" height="15.0" fill="rgb(239,210,44)" rx="2" ry="2" />
<text  x="1190.97" y="239.5" ></text>
</g>
<g >
<title>vfs_write (17 samples, 0.01%)</title><rect x="1189.2" y="309" width="0.1" height="15.0" fill="rgb(253,81,33)" rx="2" ry="2" />
<text  x="1192.16" y="319.5" ></text>
</g>
<g >
<title>apic_has_pending_timer (39 samples, 0.03%)</title><rect x="35.0" y="325" width="0.4" height="15.0" fill="rgb(215,116,48)" rx="2" ry="2" />
<text  x="38.03" y="335.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/github.com/containerd/continuity/fs.walkLinks (18 samples, 0.01%)</title><rect x="16.4" y="213" width="0.1" height="15.0" fill="rgb(245,166,11)" rx="2" ry="2" />
<text  x="19.36" y="223.5" ></text>
</g>
<g >
<title>zio_vdev_io_start (14 samples, 0.01%)</title><rect x="1179.3" y="389" width="0.2" height="15.0" fill="rgb(237,220,24)" rx="2" ry="2" />
<text  x="1182.34" y="399.5" ></text>
</g>
<g >
<title>txg_sync (26 samples, 0.02%)</title><rect x="1178.1" y="517" width="0.2" height="15.0" fill="rgb(212,213,41)" rx="2" ry="2" />
<text  x="1181.11" y="527.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.01%)</title><rect x="1187.1" y="197" width="0.1" height="15.0" fill="rgb(236,179,2)" rx="2" ry="2" />
<text  x="1190.08" y="207.5" ></text>
</g>
<g >
<title>ksys_write (29 samples, 0.02%)</title><rect x="28.8" y="437" width="0.3" height="15.0" fill="rgb(251,225,14)" rx="2" ry="2" />
<text  x="31.79" y="447.5" ></text>
</g>
<g >
<title>[zedbox] (418 samples, 0.32%)</title><rect x="1184.7" y="309" width="3.8" height="15.0" fill="rgb(237,168,46)" rx="2" ry="2" />
<text  x="1187.67" y="319.5" ></text>
</g>
<g >
<title>kthreadd (11 samples, 0.01%)</title><rect x="20.3" y="485" width="0.1" height="15.0" fill="rgb(232,87,4)" rx="2" ry="2" />
<text  x="23.28" y="495.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (37 samples, 0.03%)</title><rect x="32.0" y="277" width="0.3" height="15.0" fill="rgb(234,219,35)" rx="2" ry="2" />
<text  x="35.01" y="287.5" ></text>
</g>
<g >
<title>ret_from_fork (14 samples, 0.01%)</title><rect x="20.3" y="501" width="0.1" height="15.0" fill="rgb(251,128,10)" rx="2" ry="2" />
<text  x="23.25" y="511.5" ></text>
</g>
<g >
<title>do_IRQ (31 samples, 0.02%)</title><rect x="1176.7" y="389" width="0.3" height="15.0" fill="rgb(212,70,9)" rx="2" ry="2" />
<text  x="1179.70" y="399.5" ></text>
</g>
<g >
<title>__raw_spin_unlock_irq (13 samples, 0.01%)</title><rect x="27.6" y="325" width="0.1" height="15.0" fill="rgb(207,68,34)" rx="2" ry="2" />
<text  x="30.61" y="335.5" ></text>
</g>
<g >
<title>zio_execute (75 samples, 0.06%)</title><rect x="1178.8" y="453" width="0.7" height="15.0" fill="rgb(224,145,0)" rx="2" ry="2" />
<text  x="1181.78" y="463.5" ></text>
</g>
<g >
<title>try_to_wake_up (42 samples, 0.03%)</title><rect x="31.1" y="373" width="0.4" height="15.0" fill="rgb(238,116,8)" rx="2" ry="2" />
<text  x="34.11" y="383.5" ></text>
</g>
<g >
<title>newlogd (40 samples, 0.03%)</title><rect x="20.7" y="517" width="0.4" height="15.0" fill="rgb(226,108,3)" rx="2" ry="2" />
<text  x="23.73" y="527.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Write (32 samples, 0.02%)</title><rect x="15.5" y="197" width="0.3" height="15.0" fill="rgb(219,206,43)" rx="2" ry="2" />
<text  x="18.52" y="207.5" ></text>
</g>
<g >
<title>__cpuidle_text_start (93,889 samples, 72.45%)</title><rect x="322.1" y="437" width="854.9" height="15.0" fill="rgb(254,217,34)" rx="2" ry="2" />
<text  x="325.09" y="447.5" >__cpuidle_text_start</text>
</g>
<g >
<title>zio_execute (74 samples, 0.06%)</title><rect x="1179.6" y="453" width="0.6" height="15.0" fill="rgb(231,71,18)" rx="2" ry="2" />
<text  x="1182.56" y="463.5" ></text>
</g>
<g >
<title>[zedbox] (898 samples, 0.69%)</title><rect x="1181.4" y="453" width="8.2" height="15.0" fill="rgb(238,153,46)" rx="2" ry="2" />
<text  x="1184.42" y="463.5" ></text>
</g>
<g >
<title>kvm_cpu_has_interrupt (115 samples, 0.09%)</title><rect x="35.7" y="309" width="1.1" height="15.0" fill="rgb(217,111,38)" rx="2" ry="2" />
<text  x="38.74" y="319.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/google.golang.org/grpc.(*Server).serveStreams.func1.1 (454 samples, 0.35%)</title><rect x="12.6" y="485" width="4.1" height="15.0" fill="rgb(221,226,36)" rx="2" ry="2" />
<text  x="15.59" y="495.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (11 samples, 0.01%)</title><rect x="1181.3" y="341" width="0.1" height="15.0" fill="rgb(213,213,27)" rx="2" ry="2" />
<text  x="1184.27" y="351.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (28 samples, 0.02%)</title><rect x="21.9" y="405" width="0.2" height="15.0" fill="rgb(238,52,2)" rx="2" ry="2" />
<text  x="24.87" y="415.5" ></text>
</g>
<g >
<title>do_idle (94,008 samples, 72.54%)</title><rect x="322.1" y="453" width="855.9" height="15.0" fill="rgb(216,38,19)" rx="2" ry="2" />
<text  x="325.06" y="463.5" >do_idle</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.01%)</title><rect x="1188.9" y="341" width="0.1" height="15.0" fill="rgb(248,174,34)" rx="2" ry="2" />
<text  x="1191.86" y="351.5" ></text>
</g>
<g >
<title>compress/gzip.(*Reader).Read (281 samples, 0.22%)</title><rect x="13.0" y="117" width="2.5" height="15.0" fill="rgb(216,114,6)" rx="2" ry="2" />
<text  x="15.96" y="127.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (37 samples, 0.03%)</title><rect x="1187.8" y="261" width="0.3" height="15.0" fill="rgb(244,53,23)" rx="2" ry="2" />
<text  x="1190.79" y="271.5" ></text>
</g>
<g >
<title>kthread (77 samples, 0.06%)</title><rect x="1179.5" y="485" width="0.7" height="15.0" fill="rgb(217,155,21)" rx="2" ry="2" />
<text  x="1182.53" y="495.5" ></text>
</g>
<g >
<title>schedule_idle (88 samples, 0.07%)</title><rect x="1177.2" y="437" width="0.8" height="15.0" fill="rgb(225,128,8)" rx="2" ry="2" />
<text  x="1180.21" y="447.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (32 samples, 0.02%)</title><rect x="1188.1" y="277" width="0.3" height="15.0" fill="rgb(207,16,16)" rx="2" ry="2" />
<text  x="1191.12" y="287.5" ></text>
</g>
<g >
<title>zio_nowait (14 samples, 0.01%)</title><rect x="1179.3" y="405" width="0.2" height="15.0" fill="rgb(247,76,28)" rx="2" ry="2" />
<text  x="1182.34" y="415.5" ></text>
</g>
<g >
<title>[zedbox] (777 samples, 0.60%)</title><rect x="1182.4" y="405" width="7.1" height="15.0" fill="rgb(228,224,1)" rx="2" ry="2" />
<text  x="1185.44" y="415.5" ></text>
</g>
<g >
<title>zpl_iter_write (30 samples, 0.02%)</title><rect x="15.5" y="85" width="0.3" height="15.0" fill="rgb(239,9,8)" rx="2" ry="2" />
<text  x="18.54" y="95.5" ></text>
</g>
<g >
<title>dp_sync_taskq (18 samples, 0.01%)</title><rect x="17.8" y="517" width="0.2" height="15.0" fill="rgb(246,223,25)" rx="2" ry="2" />
<text  x="20.85" y="527.5" ></text>
</g>
<g >
<title>[zedbox] (20 samples, 0.02%)</title><rect x="1180.4" y="453" width="0.2" height="15.0" fill="rgb(206,144,24)" rx="2" ry="2" />
<text  x="1183.38" y="463.5" ></text>
</g>
<g >
<title>schedule (17 samples, 0.01%)</title><rect x="27.6" y="373" width="0.1" height="15.0" fill="rgb(253,76,51)" rx="2" ry="2" />
<text  x="30.57" y="383.5" ></text>
</g>
<g >
<title>eventfd_write (22 samples, 0.02%)</title><rect x="28.8" y="405" width="0.2" height="15.0" fill="rgb(245,226,48)" rx="2" ry="2" />
<text  x="31.82" y="415.5" ></text>
</g>
<g >
<title>wake_up_q (42 samples, 0.03%)</title><rect x="31.1" y="389" width="0.4" height="15.0" fill="rgb(217,127,7)" rx="2" ry="2" />
<text  x="34.11" y="399.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive.openFile (29 samples, 0.02%)</title><rect x="15.9" y="229" width="0.3" height="15.0" fill="rgb(243,93,28)" rx="2" ry="2" />
<text  x="18.91" y="239.5" ></text>
</g>
<g >
<title>path_openat (30 samples, 0.02%)</title><rect x="28.4" y="405" width="0.3" height="15.0" fill="rgb(242,209,9)" rx="2" ry="2" />
<text  x="31.43" y="415.5" ></text>
</g>
<g >
<title>vdev_mirror_io_start (21 samples, 0.02%)</title><rect x="1179.9" y="421" width="0.2" height="15.0" fill="rgb(231,84,53)" rx="2" ry="2" />
<text  x="1182.87" y="431.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (11 samples, 0.01%)</title><rect x="39.2" y="261" width="0.1" height="15.0" fill="rgb(218,123,45)" rx="2" ry="2" />
<text  x="42.22" y="271.5" ></text>
</g>
<g >
<title>bufio.(*Reader).ReadByte (14 samples, 0.01%)</title><rect x="15.1" y="37" width="0.1" height="15.0" fill="rgb(216,193,15)" rx="2" ry="2" />
<text  x="18.11" y="47.5" ></text>
</g>
<g >
<title>finish_task_switch (84 samples, 0.06%)</title><rect x="1177.2" y="405" width="0.8" height="15.0" fill="rgb(214,123,34)" rx="2" ry="2" />
<text  x="1180.23" y="415.5" ></text>
</g>
<g >
<title>__raw_spin_unlock_irq (29 samples, 0.02%)</title><rect x="321.8" y="389" width="0.3" height="15.0" fill="rgb(244,38,25)" rx="2" ry="2" />
<text  x="324.79" y="399.5" ></text>
</g>
<g >
<title>[newlogd] (37 samples, 0.03%)</title><rect x="20.7" y="485" width="0.4" height="15.0" fill="rgb(242,46,10)" rx="2" ry="2" />
<text  x="23.73" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (31 samples, 0.02%)</title><rect x="15.5" y="165" width="0.3" height="15.0" fill="rgb(249,201,37)" rx="2" ry="2" />
<text  x="18.53" y="175.5" ></text>
</g>
<g >
<title>__apic_accept_irq (15 samples, 0.01%)</title><rect x="39.2" y="309" width="0.1" height="15.0" fill="rgb(223,63,54)" rx="2" ry="2" />
<text  x="42.21" y="319.5" ></text>
</g>
<g >
<title>kvm_vcpu_block (629 samples, 0.49%)</title><rect x="33.2" y="357" width="5.7" height="15.0" fill="rgb(237,45,54)" rx="2" ry="2" />
<text  x="36.19" y="367.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.01%)</title><rect x="10.5" y="437" width="0.1" height="15.0" fill="rgb(245,127,13)" rx="2" ry="2" />
<text  x="13.47" y="447.5" ></text>
</g>
<g >
<title>schedule (24 samples, 0.02%)</title><rect x="38.6" y="341" width="0.2" height="15.0" fill="rgb(253,30,6)" rx="2" ry="2" />
<text  x="41.56" y="351.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/gc/scheduler.(*gcScheduler).run (11 samples, 0.01%)</title><rect x="12.3" y="485" width="0.1" height="15.0" fill="rgb(205,58,26)" rx="2" ry="2" />
<text  x="15.27" y="495.5" ></text>
</g>
<g >
<title>do_syscall_64 (833 samples, 0.64%)</title><rect x="31.8" y="469" width="7.6" height="15.0" fill="rgb(223,181,36)" rx="2" ry="2" />
<text  x="34.78" y="479.5" ></text>
</g>
<g >
<title>test_bit (15 samples, 0.01%)</title><rect x="38.4" y="325" width="0.2" height="15.0" fill="rgb(226,173,26)" rx="2" ry="2" />
<text  x="41.42" y="335.5" ></text>
</g>
<g >
<title>seq_read (11 samples, 0.01%)</title><rect x="1187.1" y="133" width="0.1" height="15.0" fill="rgb(234,168,44)" rx="2" ry="2" />
<text  x="1190.11" y="143.5" ></text>
</g>
<g >
<title>zio_execute (15 samples, 0.01%)</title><rect x="1180.2" y="453" width="0.2" height="15.0" fill="rgb(231,30,52)" rx="2" ry="2" />
<text  x="1183.23" y="463.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (84 samples, 0.06%)</title><rect x="1175.9" y="357" width="0.8" height="15.0" fill="rgb(247,28,27)" rx="2" ry="2" />
<text  x="1178.92" y="367.5" ></text>
</g>
<g >
<title>do_syscall_64 (11 samples, 0.01%)</title><rect x="21.1" y="469" width="0.1" height="15.0" fill="rgb(242,14,3)" rx="2" ry="2" />
<text  x="24.14" y="479.5" ></text>
</g>
<g >
<title>do_sys_poll (499 samples, 0.39%)</title><rect x="23.4" y="421" width="4.5" height="15.0" fill="rgb(220,77,5)" rx="2" ry="2" />
<text  x="26.39" y="431.5" ></text>
</g>
<g >
<title>[unknown] (207 samples, 0.16%)</title><rect x="10.4" y="501" width="1.9" height="15.0" fill="rgb(231,165,41)" rx="2" ry="2" />
<text  x="13.37" y="511.5" ></text>
</g>
<g >
<title>receive_buf (11 samples, 0.01%)</title><rect x="1176.9" y="309" width="0.1" height="15.0" fill="rgb(214,129,49)" rx="2" ry="2" />
<text  x="1179.88" y="319.5" ></text>
</g>
<g >
<title>call_timer_fn (13 samples, 0.01%)</title><rect x="1176.6" y="309" width="0.1" height="15.0" fill="rgb(237,123,41)" rx="2" ry="2" />
<text  x="1179.57" y="319.5" ></text>
</g>
<g >
<title>kthread (15 samples, 0.01%)</title><rect x="1180.2" y="485" width="0.2" height="15.0" fill="rgb(240,34,34)" rx="2" ry="2" />
<text  x="1183.23" y="495.5" ></text>
</g>
<g >
<title>qemu-system-x86 (2,016 samples, 1.56%)</title><rect x="21.3" y="517" width="18.4" height="15.0" fill="rgb(244,194,43)" rx="2" ry="2" />
<text  x="24.35" y="527.5" ></text>
</g>
<g >
<title>vfs_writev (29 samples, 0.02%)</title><rect x="21.9" y="437" width="0.2" height="15.0" fill="rgb(248,77,2)" rx="2" ry="2" />
<text  x="24.86" y="447.5" ></text>
</g>
<g >
<title>runtime.systemstack (11 samples, 0.01%)</title><rect x="10.2" y="469" width="0.1" height="15.0" fill="rgb(213,177,7)" rx="2" ry="2" />
<text  x="13.23" y="479.5" ></text>
</g>
<g >
<title>schedule_idle (30 samples, 0.02%)</title><rect x="321.8" y="437" width="0.3" height="15.0" fill="rgb(247,74,29)" rx="2" ry="2" />
<text  x="324.79" y="447.5" ></text>
</g>
<g >
<title>__sched_text_start (30 samples, 0.02%)</title><rect x="321.8" y="421" width="0.3" height="15.0" fill="rgb(217,71,7)" rx="2" ry="2" />
<text  x="324.79" y="431.5" ></text>
</g>
<g >
<title>scsi_io_completion (15 samples, 0.01%)</title><rect x="1176.7" y="325" width="0.2" height="15.0" fill="rgb(222,140,1)" rx="2" ry="2" />
<text  x="1179.74" y="335.5" ></text>
</g>
<g >
<title>zpl_write_common_iovec (28 samples, 0.02%)</title><rect x="21.9" y="373" width="0.2" height="15.0" fill="rgb(225,206,25)" rx="2" ry="2" />
<text  x="24.87" y="383.5" ></text>
</g>
<g >
<title>io.(*teeReader).Read (281 samples, 0.22%)</title><rect x="13.0" y="165" width="2.5" height="15.0" fill="rgb(239,72,29)" rx="2" ry="2" />
<text  x="15.96" y="175.5" ></text>
</g>
<g >
<title>do_idle (30,971 samples, 23.90%)</title><rect x="40.1" y="453" width="282.0" height="15.0" fill="rgb(214,64,18)" rx="2" ry="2" />
<text  x="43.06" y="463.5" >do_idle</text>
</g>
<g >
<title>ksys_read (11 samples, 0.01%)</title><rect x="1187.1" y="165" width="0.1" height="15.0" fill="rgb(249,173,24)" rx="2" ry="2" />
<text  x="1190.11" y="175.5" ></text>
</g>
<g >
<title>[unknown] (21 samples, 0.02%)</title><rect x="10.1" y="485" width="0.2" height="15.0" fill="rgb(227,91,7)" rx="2" ry="2" />
<text  x="13.14" y="495.5" ></text>
</g>
<g >
<title>x86_emulate_instruction (37 samples, 0.03%)</title><rect x="32.9" y="325" width="0.3" height="15.0" fill="rgb(253,207,0)" rx="2" ry="2" />
<text  x="35.85" y="335.5" ></text>
</g>
<g >
<title>kvm_fetch_guest_virt (25 samples, 0.02%)</title><rect x="33.0" y="277" width="0.2" height="15.0" fill="rgb(254,112,41)" rx="2" ry="2" />
<text  x="35.95" y="287.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (42 samples, 0.03%)</title><rect x="31.1" y="357" width="0.4" height="15.0" fill="rgb(214,142,40)" rx="2" ry="2" />
<text  x="34.11" y="367.5" ></text>
</g>
<g >
<title>__sched_text_start (19 samples, 0.01%)</title><rect x="21.7" y="373" width="0.1" height="15.0" fill="rgb(222,193,21)" rx="2" ry="2" />
<text  x="24.65" y="383.5" ></text>
</g>
<g >
<title>futex_wait (33 samples, 0.03%)</title><rect x="21.6" y="421" width="0.3" height="15.0" fill="rgb(235,163,24)" rx="2" ry="2" />
<text  x="24.56" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (22 samples, 0.02%)</title><rect x="1188.7" y="325" width="0.2" height="15.0" fill="rgb(245,125,26)" rx="2" ry="2" />
<text  x="1191.65" y="335.5" ></text>
</g>
<g >
<title>[memlogd] (12 samples, 0.01%)</title><rect x="20.5" y="421" width="0.1" height="15.0" fill="rgb(253,131,3)" rx="2" ry="2" />
<text  x="23.47" y="431.5" ></text>
</g>
<g >
<title>__do_sys_ppoll (511 samples, 0.39%)</title><rect x="23.4" y="437" width="4.6" height="15.0" fill="rgb(211,197,5)" rx="2" ry="2" />
<text  x="26.39" y="447.5" ></text>
</g>
<g >
<title>finish_task_switch (23 samples, 0.02%)</title><rect x="38.6" y="309" width="0.2" height="15.0" fill="rgb(237,173,32)" rx="2" ry="2" />
<text  x="41.57" y="319.5" ></text>
</g>
<g >
<title>do_fchownat (13 samples, 0.01%)</title><rect x="16.2" y="149" width="0.1" height="15.0" fill="rgb(225,47,20)" rx="2" ry="2" />
<text  x="19.18" y="159.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (22 samples, 0.02%)</title><rect x="1176.3" y="309" width="0.2" height="15.0" fill="rgb(233,99,26)" rx="2" ry="2" />
<text  x="1179.29" y="319.5" ></text>
</g>
<g >
<title>[unknown] (57 samples, 0.04%)</title><rect x="30.2" y="485" width="0.5" height="15.0" fill="rgb(250,167,45)" rx="2" ry="2" />
<text  x="33.17" y="495.5" ></text>
</g>
<g >
<title>ret_from_fork (91 samples, 0.07%)</title><rect x="1178.6" y="501" width="0.9" height="15.0" fill="rgb(224,179,2)" rx="2" ry="2" />
<text  x="1181.64" y="511.5" ></text>
</g>
<g >
<title>[zedbox] (141 samples, 0.11%)</title><rect x="1186.1" y="229" width="1.3" height="15.0" fill="rgb(223,103,33)" rx="2" ry="2" />
<text  x="1189.09" y="239.5" ></text>
</g>
<g >
<title>z_wr_iss (77 samples, 0.06%)</title><rect x="1179.5" y="517" width="0.7" height="15.0" fill="rgb(220,0,38)" rx="2" ry="2" />
<text  x="1182.53" y="527.5" ></text>
</g>
<g >
<title>zio_taskq_dispatch (14 samples, 0.01%)</title><rect x="1179.0" y="421" width="0.1" height="15.0" fill="rgb(213,37,2)" rx="2" ry="2" />
<text  x="1182.01" y="431.5" ></text>
</g>
<g >
<title>finish_task_switch (19 samples, 0.01%)</title><rect x="21.7" y="357" width="0.1" height="15.0" fill="rgb(208,102,5)" rx="2" ry="2" />
<text  x="24.65" y="367.5" ></text>
</g>
<g >
<title>__cpuidle_text_start (30,928 samples, 23.87%)</title><rect x="40.1" y="437" width="281.6" height="15.0" fill="rgb(215,3,26)" rx="2" ry="2" />
<text  x="43.09" y="447.5" >__cpuidle_text_start</text>
</g>
<g >
<title>__kvm_io_bus_write (41 samples, 0.03%)</title><rect x="32.0" y="325" width="0.4" height="15.0" fill="rgb(252,120,8)" rx="2" ry="2" />
<text  x="34.99" y="335.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/github.com/containerd/continuity/fs.RootPath (20 samples, 0.02%)</title><rect x="16.4" y="245" width="0.1" height="15.0" fill="rgb(217,134,49)" rx="2" ry="2" />
<text  x="19.36" y="255.5" ></text>
</g>
<g >
<title>kvm_irq_delivery_to_apic_fast (18 samples, 0.01%)</title><rect x="39.2" y="325" width="0.2" height="15.0" fill="rgb(209,134,29)" rx="2" ry="2" />
<text  x="42.19" y="335.5" ></text>
</g>
<g >
<title>[memlogd] (14 samples, 0.01%)</title><rect x="20.5" y="453" width="0.1" height="15.0" fill="rgb(237,77,40)" rx="2" ry="2" />
<text  x="23.45" y="463.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive.createTarFile (377 samples, 0.29%)</title><rect x="12.9" y="245" width="3.4" height="15.0" fill="rgb(215,178,4)" rx="2" ry="2" />
<text  x="15.90" y="255.5" ></text>
</g>
<g >
<title>syscall.Syscall6 (21 samples, 0.02%)</title><rect x="15.9" y="181" width="0.2" height="15.0" fill="rgb(243,223,16)" rx="2" ry="2" />
<text  x="18.94" y="191.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/google.golang.org/grpc/internal/transport.(*http2Server).HandleStreams (12 samples, 0.01%)</title><rect x="12.5" y="453" width="0.1" height="15.0" fill="rgb(247,163,27)" rx="2" ry="2" />
<text  x="15.48" y="463.5" ></text>
</g>
<g >
<title>do_syscall_64 (11 samples, 0.01%)</title><rect x="1180.4" y="341" width="0.1" height="15.0" fill="rgb(228,139,43)" rx="2" ry="2" />
<text  x="1183.39" y="351.5" ></text>
</g>
<g >
<title>[zedbox] (237 samples, 0.18%)</title><rect x="1185.6" y="261" width="2.2" height="15.0" fill="rgb(239,58,35)" rx="2" ry="2" />
<text  x="1188.63" y="271.5" ></text>
</g>
<g >
<title>vfs_ioctl (11 samples, 0.01%)</title><rect x="1189.8" y="389" width="0.1" height="15.0" fill="rgb(209,57,8)" rx="2" ry="2" />
<text  x="1192.81" y="399.5" ></text>
</g>
<g >
<title>ktime_get (118 samples, 0.09%)</title><rect x="33.2" y="341" width="1.1" height="15.0" fill="rgb(244,185,3)" rx="2" ry="2" />
<text  x="36.24" y="351.5" ></text>
</g>
<g >
<title>os.OpenFile (24 samples, 0.02%)</title><rect x="15.9" y="213" width="0.2" height="15.0" fill="rgb(253,228,32)" rx="2" ry="2" />
<text  x="18.91" y="223.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (11 samples, 0.01%)</title><rect x="1189.8" y="437" width="0.1" height="15.0" fill="rgb(209,59,45)" rx="2" ry="2" />
<text  x="1192.81" y="447.5" ></text>
</g>
<g >
<title>[libglib-2.0.so.0.6400.6] (35 samples, 0.03%)</title><rect x="29.2" y="485" width="0.3" height="15.0" fill="rgb(248,90,49)" rx="2" ry="2" />
<text  x="32.17" y="495.5" ></text>
</g>
<g >
<title>do_syscall_64 (12 samples, 0.01%)</title><rect x="10.5" y="421" width="0.1" height="15.0" fill="rgb(215,172,16)" rx="2" ry="2" />
<text  x="13.47" y="431.5" ></text>
</g>
<g >
<title>kvm_lapic_reg_write (12 samples, 0.01%)</title><rect x="32.5" y="293" width="0.1" height="15.0" fill="rgb(224,39,29)" rx="2" ry="2" />
<text  x="35.45" y="303.5" ></text>
</g>
<g >
<title>crypto/sha256.block (116 samples, 0.09%)</title><rect x="11.2" y="485" width="1.1" height="15.0" fill="rgb(234,1,28)" rx="2" ry="2" />
<text  x="14.20" y="495.5" ></text>
</g>
<g >
<title>kvm_apic_accept_pic_intr (14 samples, 0.01%)</title><rect x="36.6" y="277" width="0.2" height="15.0" fill="rgb(254,115,4)" rx="2" ry="2" />
<text  x="39.63" y="287.5" ></text>
</g>
<g >
<title>containerd-shim (36 samples, 0.03%)</title><rect x="10.0" y="517" width="0.4" height="15.0" fill="rgb(220,26,54)" rx="2" ry="2" />
<text  x="13.05" y="527.5" ></text>
</g>
<g >
<title>lz4_compress_zfs (13 samples, 0.01%)</title><rect x="1180.1" y="405" width="0.1" height="15.0" fill="rgb(210,103,13)" rx="2" ry="2" />
<text  x="1183.10" y="415.5" ></text>
</g>
<g >
<title>[unknown] (109 samples, 0.08%)</title><rect x="1180.4" y="501" width="1.0" height="15.0" fill="rgb(221,117,5)" rx="2" ry="2" />
<text  x="1183.38" y="511.5" ></text>
</g>
<g >
<title>start_secondary (94,008 samples, 72.54%)</title><rect x="322.1" y="485" width="855.9" height="15.0" fill="rgb(206,208,11)" rx="2" ry="2" />
<text  x="325.06" y="495.5" >start_secondary</text>
</g>
<g >
<title>z_wr_int (91 samples, 0.07%)</title><rect x="1178.6" y="517" width="0.9" height="15.0" fill="rgb(217,66,38)" rx="2" ry="2" />
<text  x="1181.64" y="527.5" ></text>
</g>
<g >
<title>single_task_running (15 samples, 0.01%)</title><rect x="38.8" y="341" width="0.1" height="15.0" fill="rgb(229,5,20)" rx="2" ry="2" />
<text  x="41.78" y="351.5" ></text>
</g>
<g >
<title>do_syscall_64 (17 samples, 0.01%)</title><rect x="1188.5" y="293" width="0.1" height="15.0" fill="rgb(228,52,5)" rx="2" ry="2" />
<text  x="1191.48" y="303.5" ></text>
</g>
<g >
<title>[memlogd] (12 samples, 0.01%)</title><rect x="20.5" y="389" width="0.1" height="15.0" fill="rgb(213,20,41)" rx="2" ry="2" />
<text  x="23.47" y="399.5" ></text>
</g>
<g >
<title>ret_from_fork (18 samples, 0.01%)</title><rect x="17.8" y="501" width="0.2" height="15.0" fill="rgb(209,105,48)" rx="2" ry="2" />
<text  x="20.85" y="511.5" ></text>
</g>
<g >
<title>[memlogd] (12 samples, 0.01%)</title><rect x="20.5" y="405" width="0.1" height="15.0" fill="rgb(228,30,42)" rx="2" ry="2" />
<text  x="23.47" y="415.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (31 samples, 0.02%)</title><rect x="1176.7" y="357" width="0.3" height="15.0" fill="rgb(231,39,40)" rx="2" ry="2" />
<text  x="1179.70" y="367.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (19 samples, 0.01%)</title><rect x="17.7" y="453" width="0.1" height="15.0" fill="rgb(221,4,50)" rx="2" ry="2" />
<text  x="20.66" y="463.5" ></text>
</g>
<g >
<title>zfs (43 samples, 0.03%)</title><rect x="1189.6" y="517" width="0.4" height="15.0" fill="rgb(231,128,47)" rx="2" ry="2" />
<text  x="1192.61" y="527.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/api/services/diff/v1._Diff_Apply_Handler.func1 (423 samples, 0.33%)</title><rect x="12.8" y="405" width="3.8" height="15.0" fill="rgb(243,62,3)" rx="2" ry="2" />
<text  x="15.79" y="415.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/github.com/containerd/continuity/fs.walkLinks (19 samples, 0.01%)</title><rect x="16.4" y="229" width="0.1" height="15.0" fill="rgb(216,229,8)" rx="2" ry="2" />
<text  x="19.36" y="239.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/google.golang.org/grpc.(*Server).processStreamingRPC (19 samples, 0.01%)</title><rect x="12.6" y="453" width="0.2" height="15.0" fill="rgb(234,170,50)" rx="2" ry="2" />
<text  x="15.59" y="463.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/google.golang.org/grpc.(*Server).processUnaryRPC (434 samples, 0.33%)</title><rect x="12.8" y="453" width="3.9" height="15.0" fill="rgb(207,114,27)" rx="2" ry="2" />
<text  x="15.76" y="463.5" ></text>
</g>
<g >
<title>__raw_spin_unlock_irq (11 samples, 0.01%)</title><rect x="38.6" y="293" width="0.1" height="15.0" fill="rgb(218,188,29)" rx="2" ry="2" />
<text  x="41.58" y="303.5" ></text>
</g>
<g >
<title>taskq_thread (85 samples, 0.07%)</title><rect x="1178.7" y="469" width="0.8" height="15.0" fill="rgb(240,217,24)" rx="2" ry="2" />
<text  x="1181.69" y="479.5" ></text>
</g>
<g >
<title>[zedbox] (89 samples, 0.07%)</title><rect x="1180.6" y="485" width="0.8" height="15.0" fill="rgb(209,192,28)" rx="2" ry="2" />
<text  x="1183.56" y="495.5" ></text>
</g>
<g >
<title>[zedbox] (20 samples, 0.02%)</title><rect x="1180.4" y="405" width="0.2" height="15.0" fill="rgb(247,104,18)" rx="2" ry="2" />
<text  x="1183.38" y="415.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (22 samples, 0.02%)</title><rect x="27.5" y="389" width="0.2" height="15.0" fill="rgb(220,45,21)" rx="2" ry="2" />
<text  x="30.53" y="399.5" ></text>
</g>
<g >
<title>load_balance (11 samples, 0.01%)</title><rect x="1176.2" y="325" width="0.1" height="15.0" fill="rgb(250,33,14)" rx="2" ry="2" />
<text  x="1179.19" y="335.5" ></text>
</g>
<g >
<title>[memlogd] (14 samples, 0.01%)</title><rect x="20.5" y="485" width="0.1" height="15.0" fill="rgb(208,45,3)" rx="2" ry="2" />
<text  x="23.45" y="495.5" ></text>
</g>
<g >
<title>path_openat (21 samples, 0.02%)</title><rect x="15.9" y="101" width="0.2" height="15.0" fill="rgb(227,223,23)" rx="2" ry="2" />
<text  x="18.94" y="111.5" ></text>
</g>
<g >
<title>cpu_startup_entry (30,971 samples, 23.90%)</title><rect x="40.1" y="469" width="282.0" height="15.0" fill="rgb(226,11,40)" rx="2" ry="2" />
<text  x="43.06" y="479.5" >cpu_startup_entry</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (21 samples, 0.02%)</title><rect x="15.9" y="165" width="0.2" height="15.0" fill="rgb(240,146,14)" rx="2" ry="2" />
<text  x="18.94" y="175.5" ></text>
</g>
<g >
<title>new_sync_write (17 samples, 0.01%)</title><rect x="1189.2" y="293" width="0.1" height="15.0" fill="rgb(253,141,9)" rx="2" ry="2" />
<text  x="1192.16" y="303.5" ></text>
</g>
<g >
<title>kvm_vcpu_check_block (466 samples, 0.36%)</title><rect x="34.3" y="341" width="4.3" height="15.0" fill="rgb(225,94,24)" rx="2" ry="2" />
<text  x="37.31" y="351.5" ></text>
</g>
<g >
<title>ret_from_intr (31 samples, 0.02%)</title><rect x="1176.7" y="405" width="0.3" height="15.0" fill="rgb(217,196,34)" rx="2" ry="2" />
<text  x="1179.70" y="415.5" ></text>
</g>
<g >
<title>[zedbox] (484 samples, 0.37%)</title><rect x="1184.2" y="325" width="4.4" height="15.0" fill="rgb(208,212,3)" rx="2" ry="2" />
<text  x="1187.24" y="335.5" ></text>
</g>
<g >
<title>syscall.Syscall (32 samples, 0.02%)</title><rect x="15.5" y="181" width="0.3" height="15.0" fill="rgb(230,140,14)" rx="2" ry="2" />
<text  x="18.52" y="191.5" ></text>
</g>
<g >
<title>kvm_vcpu_ioctl (811 samples, 0.63%)</title><rect x="31.8" y="389" width="7.4" height="15.0" fill="rgb(243,48,2)" rx="2" ry="2" />
<text  x="34.81" y="399.5" ></text>
</g>
<g >
<title>do_syscall_64 (33 samples, 0.03%)</title><rect x="1189.0" y="341" width="0.3" height="15.0" fill="rgb(214,67,40)" rx="2" ry="2" />
<text  x="1192.02" y="351.5" ></text>
</g>
<g >
<title>runtime.timerproc (16 samples, 0.01%)</title><rect x="11.0" y="469" width="0.2" height="15.0" fill="rgb(215,176,44)" rx="2" ry="2" />
<text  x="14.05" y="479.5" ></text>
</g>
<g >
<title>malloc (12 samples, 0.01%)</title><rect x="39.4" y="501" width="0.1" height="15.0" fill="rgb(216,15,0)" rx="2" ry="2" />
<text  x="42.41" y="511.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (11 samples, 0.01%)</title><rect x="1181.3" y="325" width="0.1" height="15.0" fill="rgb(212,110,32)" rx="2" ry="2" />
<text  x="1184.27" y="335.5" ></text>
</g>
<g >
<title>ioctl (12 samples, 0.01%)</title><rect x="1189.8" y="485" width="0.1" height="15.0" fill="rgb(218,19,29)" rx="2" ry="2" />
<text  x="1192.80" y="495.5" ></text>
</g>
<g >
<title>taskq_thread (18 samples, 0.01%)</title><rect x="17.8" y="469" width="0.2" height="15.0" fill="rgb(236,29,51)" rx="2" ry="2" />
<text  x="20.85" y="479.5" ></text>
</g>
<g >
<title>zpl_iter_write (28 samples, 0.02%)</title><rect x="21.9" y="389" width="0.2" height="15.0" fill="rgb(210,205,8)" rx="2" ry="2" />
<text  x="24.87" y="399.5" ></text>
</g>
<g >
<title>[zedbox] (710 samples, 0.55%)</title><rect x="1182.9" y="389" width="6.5" height="15.0" fill="rgb(217,157,6)" rx="2" ry="2" />
<text  x="1185.93" y="399.5" ></text>
</g>
<g >
<title>_do_fork (11 samples, 0.01%)</title><rect x="20.3" y="453" width="0.1" height="15.0" fill="rgb(206,44,46)" rx="2" ry="2" />
<text  x="23.28" y="463.5" ></text>
</g>
<g >
<title>apic_enabled (22 samples, 0.02%)</title><rect x="35.2" y="309" width="0.2" height="15.0" fill="rgb(222,151,3)" rx="2" ry="2" />
<text  x="38.19" y="319.5" ></text>
</g>
<g >
<title>__fget_light (108 samples, 0.08%)</title><rect x="24.0" y="405" width="1.0" height="15.0" fill="rgb(227,99,23)" rx="2" ry="2" />
<text  x="27.02" y="415.5" ></text>
</g>
<g >
<title>[unknown] (63 samples, 0.05%)</title><rect x="19.5" y="501" width="0.6" height="15.0" fill="rgb(243,99,19)" rx="2" ry="2" />
<text  x="22.52" y="511.5" ></text>
</g>
<g >
<title>kvm_emulate_wrmsr (15 samples, 0.01%)</title><rect x="32.4" y="357" width="0.2" height="15.0" fill="rgb(232,161,36)" rx="2" ry="2" />
<text  x="35.44" y="367.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (838 samples, 0.65%)</title><rect x="31.8" y="485" width="7.6" height="15.0" fill="rgb(248,225,41)" rx="2" ry="2" />
<text  x="34.78" y="495.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/google.golang.org/grpc.(*Server).handleRawConn.func1 (12 samples, 0.01%)</title><rect x="12.5" y="485" width="0.1" height="15.0" fill="rgb(220,228,32)" rx="2" ry="2" />
<text  x="15.48" y="495.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (14 samples, 0.01%)</title><rect x="1179.0" y="389" width="0.1" height="15.0" fill="rgb(224,166,39)" rx="2" ry="2" />
<text  x="1182.01" y="399.5" ></text>
</g>
<g >
<title>runtime.notetsleepg (11 samples, 0.01%)</title><rect x="11.1" y="453" width="0.1" height="15.0" fill="rgb(234,106,49)" rx="2" ry="2" />
<text  x="14.07" y="463.5" ></text>
</g>
<g >
<title>zio_write_compress (18 samples, 0.01%)</title><rect x="1180.1" y="437" width="0.1" height="15.0" fill="rgb(232,46,35)" rx="2" ry="2" />
<text  x="1183.07" y="447.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive.copyBuffered (314 samples, 0.24%)</title><rect x="13.0" y="229" width="2.8" height="15.0" fill="rgb(209,224,10)" rx="2" ry="2" />
<text  x="15.95" y="239.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/api/services/diff/v1._Diff_Apply_Handler (423 samples, 0.33%)</title><rect x="12.8" y="437" width="3.8" height="15.0" fill="rgb(221,134,54)" rx="2" ry="2" />
<text  x="15.79" y="447.5" ></text>
</g>
<g >
<title>__run_timers.part.40 (18 samples, 0.01%)</title><rect x="1176.5" y="325" width="0.2" height="15.0" fill="rgb(227,188,48)" rx="2" ry="2" />
<text  x="1179.52" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (644 samples, 0.50%)</title><rect x="23.3" y="469" width="5.9" height="15.0" fill="rgb(216,86,39)" rx="2" ry="2" />
<text  x="26.30" y="479.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (50 samples, 0.04%)</title><rect x="31.1" y="469" width="0.4" height="15.0" fill="rgb(247,123,7)" rx="2" ry="2" />
<text  x="34.05" y="479.5" ></text>
</g>
<g >
<title>native_safe_halt (30,928 samples, 23.87%)</title><rect x="40.1" y="421" width="281.6" height="15.0" fill="rgb(225,45,5)" rx="2" ry="2" />
<text  x="43.09" y="431.5" >native_safe_halt</text>
</g>
<g >
<title>kthread (18 samples, 0.01%)</title><rect x="17.8" y="485" width="0.2" height="15.0" fill="rgb(240,157,53)" rx="2" ry="2" />
<text  x="20.85" y="495.5" ></text>
</g>
<g >
<title>[memlogd] (11 samples, 0.01%)</title><rect x="20.5" y="373" width="0.1" height="15.0" fill="rgb(237,207,10)" rx="2" ry="2" />
<text  x="23.48" y="383.5" ></text>
</g>
</g>
</svg>
