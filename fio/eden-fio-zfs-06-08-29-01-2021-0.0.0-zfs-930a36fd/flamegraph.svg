<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="582" onload="init(evt)" viewBox="0 0 1200 582" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="582.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="565" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="565" > </text>
<g id="frames">
<g >
<title>entry_SYSCALL_64_after_hwframe (58 samples, 0.04%)</title><rect x="33.9" y="469" width="0.5" height="15.0" fill="rgb(237,126,41)" rx="2" ry="2" />
<text  x="36.92" y="479.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (25 samples, 0.02%)</title><rect x="22.5" y="325" width="0.2" height="15.0" fill="rgb(217,21,49)" rx="2" ry="2" />
<text  x="25.47" y="335.5" ></text>
</g>
<g >
<title>abd_iterate_func2 (22 samples, 0.02%)</title><rect x="1177.3" y="373" width="0.2" height="15.0" fill="rgb(214,218,16)" rx="2" ry="2" />
<text  x="1180.32" y="383.5" ></text>
</g>
<g >
<title>taskq_thread (37 samples, 0.03%)</title><rect x="17.7" y="469" width="0.3" height="15.0" fill="rgb(219,155,3)" rx="2" ry="2" />
<text  x="20.72" y="479.5" ></text>
</g>
<g >
<title>eventfd_signal (53 samples, 0.04%)</title><rect x="35.0" y="293" width="0.5" height="15.0" fill="rgb(240,201,25)" rx="2" ry="2" />
<text  x="37.99" y="303.5" ></text>
</g>
<g >
<title>[ld-musl-x86_64.so.1] (870 samples, 0.66%)</title><rect x="23.5" y="485" width="7.8" height="15.0" fill="rgb(236,221,8)" rx="2" ry="2" />
<text  x="26.54" y="495.5" ></text>
</g>
<g >
<title>zpl_iter_write (14 samples, 0.01%)</title><rect x="1189.1" y="277" width="0.1" height="15.0" fill="rgb(240,7,42)" rx="2" ry="2" />
<text  x="1192.06" y="287.5" ></text>
</g>
<g >
<title>kthread (37 samples, 0.03%)</title><rect x="17.7" y="485" width="0.3" height="15.0" fill="rgb(236,42,27)" rx="2" ry="2" />
<text  x="20.72" y="495.5" ></text>
</g>
<g >
<title>zfs_write (21 samples, 0.02%)</title><rect x="15.4" y="53" width="0.2" height="15.0" fill="rgb(216,218,53)" rx="2" ry="2" />
<text  x="18.43" y="63.5" ></text>
</g>
<g >
<title>prb_retire_rx_blk_timer_expired (16 samples, 0.01%)</title><rect x="1173.6" y="293" width="0.2" height="15.0" fill="rgb(226,225,52)" rx="2" ry="2" />
<text  x="1176.62" y="303.5" ></text>
</g>
<g >
<title>compress/gzip.(*Reader).Read (279 samples, 0.21%)</title><rect x="12.9" y="117" width="2.5" height="15.0" fill="rgb(224,175,1)" rx="2" ry="2" />
<text  x="15.89" y="127.5" ></text>
</g>
<g >
<title>__fcheck_files (20 samples, 0.02%)</title><rect x="25.9" y="373" width="0.2" height="15.0" fill="rgb(239,121,24)" rx="2" ry="2" />
<text  x="28.92" y="383.5" ></text>
</g>
<g >
<title>txg_sync_thread (26 samples, 0.02%)</title><rect x="1176.3" y="453" width="0.2" height="15.0" fill="rgb(249,59,22)" rx="2" ry="2" />
<text  x="1179.25" y="463.5" ></text>
</g>
<g >
<title>ioctl (650 samples, 0.49%)</title><rect x="34.6" y="501" width="5.8" height="15.0" fill="rgb(237,62,47)" rx="2" ry="2" />
<text  x="37.58" y="511.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (12 samples, 0.01%)</title><rect x="1177.1" y="405" width="0.1" height="15.0" fill="rgb(234,125,51)" rx="2" ry="2" />
<text  x="1180.11" y="415.5" ></text>
</g>
<g >
<title>do_syscall_64 (24 samples, 0.02%)</title><rect x="1188.7" y="325" width="0.2" height="15.0" fill="rgb(240,123,15)" rx="2" ry="2" />
<text  x="1191.71" y="335.5" ></text>
</g>
<g >
<title>zio_vdev_io_start (14 samples, 0.01%)</title><rect x="1177.6" y="389" width="0.1" height="15.0" fill="rgb(239,64,50)" rx="2" ry="2" />
<text  x="1180.62" y="399.5" ></text>
</g>
<g >
<title>zpl_write_common_iovec (21 samples, 0.02%)</title><rect x="15.4" y="69" width="0.2" height="15.0" fill="rgb(207,212,23)" rx="2" ry="2" />
<text  x="18.43" y="79.5" ></text>
</g>
<g >
<title>[zedbox] (34 samples, 0.03%)</title><rect x="1179.0" y="421" width="0.3" height="15.0" fill="rgb(211,83,9)" rx="2" ry="2" />
<text  x="1182.00" y="431.5" ></text>
</g>
<g >
<title>abd_copy_from_buf_off_cb (14 samples, 0.01%)</title><rect x="1178.2" y="373" width="0.1" height="15.0" fill="rgb(242,166,3)" rx="2" ry="2" />
<text  x="1181.15" y="383.5" ></text>
</g>
<g >
<title>futex_wake (56 samples, 0.04%)</title><rect x="33.9" y="405" width="0.5" height="15.0" fill="rgb(249,9,42)" rx="2" ry="2" />
<text  x="36.93" y="415.5" ></text>
</g>
<g >
<title>[zedbox] (572 samples, 0.43%)</title><rect x="1183.4" y="325" width="5.1" height="15.0" fill="rgb(230,161,23)" rx="2" ry="2" />
<text  x="1186.40" y="335.5" ></text>
</g>
<g >
<title>__kvm_set_msr (35 samples, 0.03%)</title><rect x="35.7" y="341" width="0.3" height="15.0" fill="rgb(220,19,36)" rx="2" ry="2" />
<text  x="38.73" y="351.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive.copyBuffered (306 samples, 0.23%)</title><rect x="12.9" y="229" width="2.7" height="15.0" fill="rgb(249,62,47)" rx="2" ry="2" />
<text  x="15.89" y="239.5" ></text>
</g>
<g >
<title>do_idle (31,446 samples, 23.88%)</title><rect x="41.1" y="453" width="281.8" height="15.0" fill="rgb(209,76,4)" rx="2" ry="2" />
<text  x="44.12" y="463.5" >do_idle</text>
</g>
<g >
<title>irq_exit (15 samples, 0.01%)</title><rect x="1173.8" y="389" width="0.1" height="15.0" fill="rgb(216,166,15)" rx="2" ry="2" />
<text  x="1176.78" y="399.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (25 samples, 0.02%)</title><rect x="40.1" y="261" width="0.2" height="15.0" fill="rgb(240,121,13)" rx="2" ry="2" />
<text  x="43.06" y="271.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (13 samples, 0.01%)</title><rect x="1173.8" y="357" width="0.1" height="15.0" fill="rgb(232,44,9)" rx="2" ry="2" />
<text  x="1176.79" y="367.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/google.golang.org/grpc.(*Server).processUnaryRPC (438 samples, 0.33%)</title><rect x="12.6" y="453" width="4.0" height="15.0" fill="rgb(237,201,51)" rx="2" ry="2" />
<text  x="15.64" y="463.5" ></text>
</g>
<g >
<title>zio_execute (94 samples, 0.07%)</title><rect x="1176.9" y="453" width="0.8" height="15.0" fill="rgb(213,116,9)" rx="2" ry="2" />
<text  x="1179.91" y="463.5" ></text>
</g>
<g >
<title>abd_copy_from_buf_off (14 samples, 0.01%)</title><rect x="1178.2" y="405" width="0.1" height="15.0" fill="rgb(235,100,10)" rx="2" ry="2" />
<text  x="1181.15" y="415.5" ></text>
</g>
<g >
<title>fstatat (23 samples, 0.02%)</title><rect x="33.3" y="469" width="0.2" height="15.0" fill="rgb(235,80,19)" rx="2" ry="2" />
<text  x="36.32" y="479.5" ></text>
</g>
<g >
<title>kvm_vcpu_check_block (211 samples, 0.16%)</title><rect x="37.3" y="341" width="1.9" height="15.0" fill="rgb(221,1,33)" rx="2" ry="2" />
<text  x="40.29" y="351.5" ></text>
</g>
<g >
<title>[containerd-shim] (12 samples, 0.01%)</title><rect x="10.1" y="453" width="0.1" height="15.0" fill="rgb(230,188,18)" rx="2" ry="2" />
<text  x="13.06" y="463.5" ></text>
</g>
<g >
<title>path_openat (18 samples, 0.01%)</title><rect x="15.8" y="101" width="0.1" height="15.0" fill="rgb(210,60,38)" rx="2" ry="2" />
<text  x="18.75" y="111.5" ></text>
</g>
<g >
<title>[zedbox] (82 samples, 0.06%)</title><rect x="1179.3" y="485" width="0.7" height="15.0" fill="rgb(230,33,30)" rx="2" ry="2" />
<text  x="1182.31" y="495.5" ></text>
</g>
<g >
<title>do_syscall_64 (633 samples, 0.48%)</title><rect x="34.7" y="469" width="5.7" height="15.0" fill="rgb(230,43,12)" rx="2" ry="2" />
<text  x="37.69" y="479.5" ></text>
</g>
<g >
<title>[zedbox] (1,042 samples, 0.79%)</title><rect x="1180.2" y="437" width="9.4" height="15.0" fill="rgb(208,3,50)" rx="2" ry="2" />
<text  x="1183.25" y="447.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/github.com/containerd/continuity/fs.walkLinks (12 samples, 0.01%)</title><rect x="16.2" y="229" width="0.1" height="15.0" fill="rgb(254,171,13)" rx="2" ry="2" />
<text  x="19.17" y="239.5" ></text>
</g>
<g >
<title>vdev_mirror_io_start (27 samples, 0.02%)</title><rect x="1178.4" y="421" width="0.3" height="15.0" fill="rgb(217,216,41)" rx="2" ry="2" />
<text  x="1181.42" y="431.5" ></text>
</g>
<g >
<title>zpl_iter_read (13 samples, 0.01%)</title><rect x="33.1" y="341" width="0.1" height="15.0" fill="rgb(217,146,34)" rx="2" ry="2" />
<text  x="36.08" y="351.5" ></text>
</g>
<g >
<title>[unknown] (84 samples, 0.06%)</title><rect x="10.3" y="485" width="0.8" height="15.0" fill="rgb(234,101,7)" rx="2" ry="2" />
<text  x="13.30" y="495.5" ></text>
</g>
<g >
<title>ksys_write (71 samples, 0.05%)</title><rect x="30.6" y="437" width="0.7" height="15.0" fill="rgb(210,82,7)" rx="2" ry="2" />
<text  x="33.62" y="447.5" ></text>
</g>
<g >
<title>do_syscall_64 (17 samples, 0.01%)</title><rect x="1189.2" y="357" width="0.1" height="15.0" fill="rgb(244,163,20)" rx="2" ry="2" />
<text  x="1192.19" y="367.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (51 samples, 0.04%)</title><rect x="34.0" y="341" width="0.4" height="15.0" fill="rgb(215,16,9)" rx="2" ry="2" />
<text  x="36.97" y="351.5" ></text>
</g>
<g >
<title>os.(*File).Write (25 samples, 0.02%)</title><rect x="15.4" y="213" width="0.2" height="15.0" fill="rgb(246,218,18)" rx="2" ry="2" />
<text  x="18.40" y="223.5" ></text>
</g>
<g >
<title>ksys_ioctl (632 samples, 0.48%)</title><rect x="34.7" y="437" width="5.7" height="15.0" fill="rgb(210,160,6)" rx="2" ry="2" />
<text  x="37.70" y="447.5" ></text>
</g>
<g >
<title>[zedbox] (153 samples, 0.12%)</title><rect x="1185.8" y="229" width="1.3" height="15.0" fill="rgb(222,201,27)" rx="2" ry="2" />
<text  x="1188.75" y="239.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (25 samples, 0.02%)</title><rect x="40.1" y="245" width="0.2" height="15.0" fill="rgb(253,214,52)" rx="2" ry="2" />
<text  x="43.06" y="255.5" ></text>
</g>
<g >
<title>zpl_read_common_iovec (13 samples, 0.01%)</title><rect x="33.1" y="325" width="0.1" height="15.0" fill="rgb(251,81,46)" rx="2" ry="2" />
<text  x="36.08" y="335.5" ></text>
</g>
<g >
<title>[zedbox] (653 samples, 0.50%)</title><rect x="1182.9" y="341" width="5.8" height="15.0" fill="rgb(205,155,4)" rx="2" ry="2" />
<text  x="1185.86" y="351.5" ></text>
</g>
<g >
<title>vdev_disk_io_start (14 samples, 0.01%)</title><rect x="1177.6" y="373" width="0.1" height="15.0" fill="rgb(215,153,54)" rx="2" ry="2" />
<text  x="1180.62" y="383.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/services/content/contentserver.(*service).Write (15 samples, 0.01%)</title><rect x="12.5" y="405" width="0.1" height="15.0" fill="rgb(246,100,28)" rx="2" ry="2" />
<text  x="15.51" y="415.5" ></text>
</g>
<g >
<title>spa_sync (25 samples, 0.02%)</title><rect x="1176.3" y="437" width="0.2" height="15.0" fill="rgb(247,89,7)" rx="2" ry="2" />
<text  x="1179.26" y="447.5" ></text>
</g>
<g >
<title>ret_from_fork (12 samples, 0.01%)</title><rect x="40.9" y="501" width="0.1" height="15.0" fill="rgb(246,82,8)" rx="2" ry="2" />
<text  x="43.86" y="511.5" ></text>
</g>
<g >
<title>zio_write_compress (26 samples, 0.02%)</title><rect x="1178.7" y="437" width="0.2" height="15.0" fill="rgb(229,222,10)" rx="2" ry="2" />
<text  x="1181.66" y="447.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (19 samples, 0.01%)</title><rect x="1188.4" y="309" width="0.1" height="15.0" fill="rgb(227,62,1)" rx="2" ry="2" />
<text  x="1191.36" y="319.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/api/services/diff/v1._Diff_Apply_Handler.func1 (426 samples, 0.32%)</title><rect x="12.7" y="405" width="3.8" height="15.0" fill="rgb(209,189,8)" rx="2" ry="2" />
<text  x="15.67" y="415.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).huffmanBlock (107 samples, 0.08%)</title><rect x="14.2" y="69" width="1.0" height="15.0" fill="rgb(250,102,48)" rx="2" ry="2" />
<text  x="17.19" y="79.5" ></text>
</g>
<g >
<title>receive_buf (49 samples, 0.04%)</title><rect x="1174.2" y="309" width="0.5" height="15.0" fill="rgb(234,159,16)" rx="2" ry="2" />
<text  x="1177.25" y="319.5" ></text>
</g>
<g >
<title>do_sys_poll (554 samples, 0.42%)</title><rect x="24.4" y="421" width="5.0" height="15.0" fill="rgb(234,9,35)" rx="2" ry="2" />
<text  x="27.42" y="431.5" ></text>
</g>
<g >
<title>ret_from_fork (114 samples, 0.09%)</title><rect x="1177.9" y="501" width="1.0" height="15.0" fill="rgb(218,191,37)" rx="2" ry="2" />
<text  x="1180.88" y="511.5" ></text>
</g>
<g >
<title>zio_vdev_io_done (56 samples, 0.04%)</title><rect x="1177.2" y="437" width="0.5" height="15.0" fill="rgb(232,70,0)" rx="2" ry="2" />
<text  x="1180.25" y="447.5" ></text>
</g>
<g >
<title>zpl_create (12 samples, 0.01%)</title><rect x="30.2" y="389" width="0.2" height="15.0" fill="rgb(211,43,6)" rx="2" ry="2" />
<text  x="33.24" y="399.5" ></text>
</g>
<g >
<title>kvm_send_userspace_msi (31 samples, 0.02%)</title><rect x="40.0" y="373" width="0.3" height="15.0" fill="rgb(245,172,13)" rx="2" ry="2" />
<text  x="43.05" y="383.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (21 samples, 0.02%)</title><rect x="322.1" y="405" width="0.2" height="15.0" fill="rgb(236,153,35)" rx="2" ry="2" />
<text  x="325.11" y="415.5" ></text>
</g>
<g >
<title>zio_compress_data (24 samples, 0.02%)</title><rect x="1178.7" y="421" width="0.2" height="15.0" fill="rgb(214,27,14)" rx="2" ry="2" />
<text  x="1181.68" y="431.5" ></text>
</g>
<g >
<title>do_syscall_64 (13 samples, 0.01%)</title><rect x="33.1" y="421" width="0.1" height="15.0" fill="rgb(224,187,33)" rx="2" ry="2" />
<text  x="36.08" y="431.5" ></text>
</g>
<g >
<title>rebalance_domains (24 samples, 0.02%)</title><rect x="1173.0" y="341" width="0.2" height="15.0" fill="rgb(237,46,12)" rx="2" ry="2" />
<text  x="1175.98" y="351.5" ></text>
</g>
<g >
<title>do_preadv (13 samples, 0.01%)</title><rect x="33.1" y="405" width="0.1" height="15.0" fill="rgb(212,226,34)" rx="2" ry="2" />
<text  x="36.08" y="415.5" ></text>
</g>
<g >
<title>archive/tar.(*Reader).Next (14 samples, 0.01%)</title><rect x="12.7" y="245" width="0.1" height="15.0" fill="rgb(220,182,9)" rx="2" ry="2" />
<text  x="15.67" y="255.5" ></text>
</g>
<g >
<title>run_ksoftirqd (22 samples, 0.02%)</title><rect x="20.3" y="453" width="0.2" height="15.0" fill="rgb(246,53,11)" rx="2" ry="2" />
<text  x="23.29" y="463.5" ></text>
</g>
<g >
<title>[containerd-shim] (13 samples, 0.01%)</title><rect x="10.1" y="501" width="0.1" height="15.0" fill="rgb(225,98,11)" rx="2" ry="2" />
<text  x="13.06" y="511.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (24 samples, 0.02%)</title><rect x="1188.7" y="341" width="0.2" height="15.0" fill="rgb(218,212,23)" rx="2" ry="2" />
<text  x="1191.71" y="351.5" ></text>
</g>
<g >
<title>virtnet_poll (52 samples, 0.04%)</title><rect x="1174.2" y="325" width="0.5" height="15.0" fill="rgb(241,72,42)" rx="2" ry="2" />
<text  x="1177.24" y="335.5" ></text>
</g>
<g >
<title>[containerd-shim] (12 samples, 0.01%)</title><rect x="10.1" y="469" width="0.1" height="15.0" fill="rgb(225,154,13)" rx="2" ry="2" />
<text  x="13.06" y="479.5" ></text>
</g>
<g >
<title>kvm_lapic_sync_from_vapic (12 samples, 0.01%)</title><rect x="36.1" y="357" width="0.1" height="15.0" fill="rgb(239,24,30)" rx="2" ry="2" />
<text  x="39.10" y="367.5" ></text>
</g>
<g >
<title>memmove (15 samples, 0.01%)</title><rect x="40.5" y="501" width="0.2" height="15.0" fill="rgb(211,88,11)" rx="2" ry="2" />
<text  x="43.52" y="511.5" ></text>
</g>
<g >
<title>ip6tables (17 samples, 0.01%)</title><rect x="18.1" y="517" width="0.1" height="15.0" fill="rgb(237,122,48)" rx="2" ry="2" />
<text  x="21.07" y="527.5" ></text>
</g>
<g >
<title>do_syscall_64 (19 samples, 0.01%)</title><rect x="1188.5" y="309" width="0.2" height="15.0" fill="rgb(234,162,13)" rx="2" ry="2" />
<text  x="1191.53" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (23 samples, 0.02%)</title><rect x="33.3" y="453" width="0.2" height="15.0" fill="rgb(225,114,29)" rx="2" ry="2" />
<text  x="36.32" y="463.5" ></text>
</g>
<g >
<title>syscall.Syscall (23 samples, 0.02%)</title><rect x="15.4" y="181" width="0.2" height="15.0" fill="rgb(221,226,1)" rx="2" ry="2" />
<text  x="18.42" y="191.5" ></text>
</g>
<g >
<title>receive_buf (21 samples, 0.02%)</title><rect x="20.3" y="389" width="0.2" height="15.0" fill="rgb(213,141,36)" rx="2" ry="2" />
<text  x="23.29" y="399.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).huffSym (75 samples, 0.06%)</title><rect x="13.4" y="69" width="0.7" height="15.0" fill="rgb(238,41,35)" rx="2" ry="2" />
<text  x="16.38" y="79.5" ></text>
</g>
<g >
<title>[ld-musl-x86_64.so.1] (19 samples, 0.01%)</title><rect x="32.8" y="469" width="0.1" height="15.0" fill="rgb(227,59,31)" rx="2" ry="2" />
<text  x="35.75" y="479.5" ></text>
</g>
<g >
<title>_do_fork (17 samples, 0.01%)</title><rect x="20.5" y="453" width="0.2" height="15.0" fill="rgb(244,65,43)" rx="2" ry="2" />
<text  x="23.53" y="463.5" ></text>
</g>
<g >
<title>bufio.(*Reader).ReadByte (17 samples, 0.01%)</title><rect x="15.0" y="37" width="0.1" height="15.0" fill="rgb(213,164,5)" rx="2" ry="2" />
<text  x="17.96" y="47.5" ></text>
</g>
<g >
<title>[zedbox] (34 samples, 0.03%)</title><rect x="1179.0" y="453" width="0.3" height="15.0" fill="rgb(249,103,12)" rx="2" ry="2" />
<text  x="1182.00" y="463.5" ></text>
</g>
<g >
<title>[zedbox] (31 samples, 0.02%)</title><rect x="1186.5" y="149" width="0.3" height="15.0" fill="rgb(215,119,24)" rx="2" ry="2" />
<text  x="1189.51" y="159.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).huffSym (66 samples, 0.05%)</title><rect x="14.5" y="53" width="0.6" height="15.0" fill="rgb(231,212,42)" rx="2" ry="2" />
<text  x="17.52" y="63.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/diff/apply.(*fsApplier).Apply (426 samples, 0.32%)</title><rect x="12.7" y="341" width="3.8" height="15.0" fill="rgb(237,192,8)" rx="2" ry="2" />
<text  x="15.67" y="351.5" ></text>
</g>
<g >
<title>[zedbox] (15 samples, 0.01%)</title><rect x="1179.0" y="373" width="0.2" height="15.0" fill="rgb(217,181,17)" rx="2" ry="2" />
<text  x="1182.04" y="383.5" ></text>
</g>
<g >
<title>kvm_vcpu_wake_up (23 samples, 0.02%)</title><rect x="35.8" y="213" width="0.2" height="15.0" fill="rgb(245,32,17)" rx="2" ry="2" />
<text  x="38.76" y="223.5" ></text>
</g>
<g >
<title>ret_from_fork (37 samples, 0.03%)</title><rect x="17.7" y="501" width="0.3" height="15.0" fill="rgb(215,21,14)" rx="2" ry="2" />
<text  x="20.72" y="511.5" ></text>
</g>
<g >
<title>load_balance (21 samples, 0.02%)</title><rect x="1173.0" y="325" width="0.2" height="15.0" fill="rgb(231,160,11)" rx="2" ry="2" />
<text  x="1176.01" y="335.5" ></text>
</g>
<g >
<title>[zedbox] (15 samples, 0.01%)</title><rect x="1179.0" y="389" width="0.2" height="15.0" fill="rgb(211,208,15)" rx="2" ry="2" />
<text  x="1182.04" y="399.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).huffmanBlock (131 samples, 0.10%)</title><rect x="13.0" y="85" width="1.1" height="15.0" fill="rgb(233,126,41)" rx="2" ry="2" />
<text  x="15.97" y="95.5" ></text>
</g>
<g >
<title>kvm_cpu_has_interrupt (57 samples, 0.04%)</title><rect x="37.9" y="309" width="0.5" height="15.0" fill="rgb(228,65,33)" rx="2" ry="2" />
<text  x="40.90" y="319.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (23 samples, 0.02%)</title><rect x="35.8" y="197" width="0.2" height="15.0" fill="rgb(224,144,50)" rx="2" ry="2" />
<text  x="38.76" y="207.5" ></text>
</g>
<g >
<title>__do_sys_pselect6 (12 samples, 0.01%)</title><rect x="21.0" y="405" width="0.1" height="15.0" fill="rgb(251,13,9)" rx="2" ry="2" />
<text  x="24.03" y="415.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/github.com/containerd/continuity/fs.RootPath (13 samples, 0.01%)</title><rect x="16.2" y="245" width="0.1" height="15.0" fill="rgb(251,55,25)" rx="2" ry="2" />
<text  x="19.17" y="255.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/github.com/containerd/continuity/fs.walkLinks (12 samples, 0.01%)</title><rect x="16.2" y="213" width="0.1" height="15.0" fill="rgb(235,200,28)" rx="2" ry="2" />
<text  x="19.17" y="223.5" ></text>
</g>
<g >
<title>napi_gro_receive (45 samples, 0.03%)</title><rect x="1174.2" y="293" width="0.4" height="15.0" fill="rgb(238,174,17)" rx="2" ry="2" />
<text  x="1177.25" y="303.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (15 samples, 0.01%)</title><rect x="1173.8" y="373" width="0.1" height="15.0" fill="rgb(236,91,42)" rx="2" ry="2" />
<text  x="1176.78" y="383.5" ></text>
</g>
<g >
<title>all (131,675 samples, 100%)</title><rect x="10.0" y="533" width="1180.0" height="15.0" fill="rgb(253,213,42)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/api/services/content/v1._Content_Write_Handler (15 samples, 0.01%)</title><rect x="12.5" y="421" width="0.1" height="15.0" fill="rgb(235,147,43)" rx="2" ry="2" />
<text  x="15.51" y="431.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/diff/apply.apply (426 samples, 0.32%)</title><rect x="12.7" y="325" width="3.8" height="15.0" fill="rgb(220,216,4)" rx="2" ry="2" />
<text  x="15.67" y="335.5" ></text>
</g>
<g >
<title>ret_from_fork (26 samples, 0.02%)</title><rect x="1176.3" y="501" width="0.2" height="15.0" fill="rgb(244,190,54)" rx="2" ry="2" />
<text  x="1179.25" y="511.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Write (24 samples, 0.02%)</title><rect x="15.4" y="197" width="0.2" height="15.0" fill="rgb(208,125,11)" rx="2" ry="2" />
<text  x="18.41" y="207.5" ></text>
</g>
<g >
<title>os.OpenFile (20 samples, 0.02%)</title><rect x="15.7" y="213" width="0.2" height="15.0" fill="rgb(215,169,39)" rx="2" ry="2" />
<text  x="18.74" y="223.5" ></text>
</g>
<g >
<title>vmx_get_cpl (14 samples, 0.01%)</title><rect x="36.6" y="261" width="0.2" height="15.0" fill="rgb(234,18,36)" rx="2" ry="2" />
<text  x="39.64" y="271.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (20 samples, 0.02%)</title><rect x="1174.7" y="437" width="0.2" height="15.0" fill="rgb(208,53,30)" rx="2" ry="2" />
<text  x="1177.72" y="447.5" ></text>
</g>
<g >
<title>vfs_readv (13 samples, 0.01%)</title><rect x="33.1" y="389" width="0.1" height="15.0" fill="rgb(253,109,38)" rx="2" ry="2" />
<text  x="36.08" y="399.5" ></text>
</g>
<g >
<title>do_filp_open (53 samples, 0.04%)</title><rect x="29.9" y="421" width="0.5" height="15.0" fill="rgb(242,208,47)" rx="2" ry="2" />
<text  x="32.88" y="431.5" ></text>
</g>
<g >
<title>do_futex (13 samples, 0.01%)</title><rect x="1179.0" y="309" width="0.2" height="15.0" fill="rgb(229,49,8)" rx="2" ry="2" />
<text  x="1182.05" y="319.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (45 samples, 0.03%)</title><rect x="1174.2" y="277" width="0.4" height="15.0" fill="rgb(237,65,38)" rx="2" ry="2" />
<text  x="1177.25" y="287.5" ></text>
</g>
<g >
<title>__cpuidle_text_start (95,047 samples, 72.18%)</title><rect x="322.9" y="437" width="851.8" height="15.0" fill="rgb(214,32,29)" rx="2" ry="2" />
<text  x="325.94" y="447.5" >__cpuidle_text_start</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (70 samples, 0.05%)</title><rect x="22.3" y="485" width="0.7" height="15.0" fill="rgb(216,43,8)" rx="2" ry="2" />
<text  x="25.34" y="495.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/google.golang.org/grpc.(*Server).handleStream (453 samples, 0.34%)</title><rect x="12.5" y="469" width="4.1" height="15.0" fill="rgb(232,226,51)" rx="2" ry="2" />
<text  x="15.51" y="479.5" ></text>
</g>
<g >
<title>do_iter_read (13 samples, 0.01%)</title><rect x="33.1" y="373" width="0.1" height="15.0" fill="rgb(210,45,35)" rx="2" ry="2" />
<text  x="36.08" y="383.5" ></text>
</g>
<g >
<title>[newlogd] (39 samples, 0.03%)</title><rect x="21.3" y="469" width="0.3" height="15.0" fill="rgb(249,99,49)" rx="2" ry="2" />
<text  x="24.26" y="479.5" ></text>
</g>
<g >
<title>[unknown] (117 samples, 0.09%)</title><rect x="1179.0" y="501" width="1.1" height="15.0" fill="rgb(222,165,31)" rx="2" ry="2" />
<text  x="1182.00" y="511.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (54 samples, 0.04%)</title><rect x="27.2" y="389" width="0.5" height="15.0" fill="rgb(248,171,50)" rx="2" ry="2" />
<text  x="30.21" y="399.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive.openFile (28 samples, 0.02%)</title><rect x="15.7" y="229" width="0.3" height="15.0" fill="rgb(225,104,36)" rx="2" ry="2" />
<text  x="18.74" y="239.5" ></text>
</g>
<g >
<title>vfs_ioctl (629 samples, 0.48%)</title><rect x="34.7" y="405" width="5.6" height="15.0" fill="rgb(250,215,20)" rx="2" ry="2" />
<text  x="37.71" y="415.5" ></text>
</g>
<g >
<title>kernel_thread (17 samples, 0.01%)</title><rect x="20.5" y="469" width="0.2" height="15.0" fill="rgb(213,20,29)" rx="2" ry="2" />
<text  x="23.53" y="479.5" ></text>
</g>
<g >
<title>taskq_thread (114 samples, 0.09%)</title><rect x="1177.9" y="469" width="1.0" height="15.0" fill="rgb(223,39,6)" rx="2" ry="2" />
<text  x="1180.88" y="479.5" ></text>
</g>
<g >
<title>vdev_queue_io_to_issue (30 samples, 0.02%)</title><rect x="1177.3" y="405" width="0.3" height="15.0" fill="rgb(227,199,34)" rx="2" ry="2" />
<text  x="1180.28" y="415.5" ></text>
</g>
<g >
<title>vfs_writev (18 samples, 0.01%)</title><rect x="22.8" y="437" width="0.1" height="15.0" fill="rgb(251,155,53)" rx="2" ry="2" />
<text  x="25.76" y="447.5" ></text>
</g>
<g >
<title>[unknown] (34 samples, 0.03%)</title><rect x="1179.0" y="485" width="0.3" height="15.0" fill="rgb(218,7,43)" rx="2" ry="2" />
<text  x="1182.00" y="495.5" ></text>
</g>
<g >
<title>jq (205 samples, 0.16%)</title><rect x="18.4" y="517" width="1.8" height="15.0" fill="rgb(214,168,25)" rx="2" ry="2" />
<text  x="21.41" y="527.5" ></text>
</g>
<g >
<title>__run_timers.part.40 (27 samples, 0.02%)</title><rect x="1173.5" y="325" width="0.3" height="15.0" fill="rgb(229,116,41)" rx="2" ry="2" />
<text  x="1176.54" y="335.5" ></text>
</g>
<g >
<title>__sched_text_start (40 samples, 0.03%)</title><rect x="39.2" y="325" width="0.4" height="15.0" fill="rgb(206,115,51)" rx="2" ry="2" />
<text  x="42.21" y="335.5" ></text>
</g>
<g >
<title>do_vfs_ioctl (629 samples, 0.48%)</title><rect x="34.7" y="421" width="5.6" height="15.0" fill="rgb(253,56,14)" rx="2" ry="2" />
<text  x="37.71" y="431.5" ></text>
</g>
<g >
<title>txg_sync (26 samples, 0.02%)</title><rect x="1176.3" y="517" width="0.2" height="15.0" fill="rgb(217,118,42)" rx="2" ry="2" />
<text  x="1179.25" y="527.5" ></text>
</g>
<g >
<title>[qemu-system-x86_64] (12 samples, 0.01%)</title><rect x="33.0" y="469" width="0.1" height="15.0" fill="rgb(242,60,38)" rx="2" ry="2" />
<text  x="35.97" y="479.5" ></text>
</g>
<g >
<title>irq_exit (21 samples, 0.02%)</title><rect x="322.1" y="373" width="0.2" height="15.0" fill="rgb(236,201,15)" rx="2" ry="2" />
<text  x="325.11" y="383.5" ></text>
</g>
<g >
<title>[zedbox] (72 samples, 0.05%)</title><rect x="1186.2" y="197" width="0.7" height="15.0" fill="rgb(209,110,49)" rx="2" ry="2" />
<text  x="1189.21" y="207.5" ></text>
</g>
<g >
<title>blk_update_request (15 samples, 0.01%)</title><rect x="1174.1" y="293" width="0.1" height="15.0" fill="rgb(212,78,43)" rx="2" ry="2" />
<text  x="1177.08" y="303.5" ></text>
</g>
<g >
<title>thread_generic_wrapper (26 samples, 0.02%)</title><rect x="1176.3" y="469" width="0.2" height="15.0" fill="rgb(239,11,38)" rx="2" ry="2" />
<text  x="1179.25" y="479.5" ></text>
</g>
<g >
<title>wake_up_q (52 samples, 0.04%)</title><rect x="34.0" y="389" width="0.4" height="15.0" fill="rgb(228,195,26)" rx="2" ry="2" />
<text  x="36.96" y="399.5" ></text>
</g>
<g >
<title>z_wr_iss (115 samples, 0.09%)</title><rect x="1177.9" y="517" width="1.0" height="15.0" fill="rgb(211,112,5)" rx="2" ry="2" />
<text  x="1180.87" y="527.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (51 samples, 0.04%)</title><rect x="35.0" y="261" width="0.5" height="15.0" fill="rgb(235,150,52)" rx="2" ry="2" />
<text  x="38.01" y="271.5" ></text>
</g>
<g >
<title>zpl_write_common_iovec (15 samples, 0.01%)</title><rect x="22.8" y="373" width="0.1" height="15.0" fill="rgb(239,30,50)" rx="2" ry="2" />
<text  x="25.78" y="383.5" ></text>
</g>
<g >
<title>do_futex (57 samples, 0.04%)</title><rect x="33.9" y="421" width="0.5" height="15.0" fill="rgb(220,227,32)" rx="2" ry="2" />
<text  x="36.92" y="431.5" ></text>
</g>
<g >
<title>handle_ept_misconfig (56 samples, 0.04%)</title><rect x="35.0" y="357" width="0.5" height="15.0" fill="rgb(206,65,17)" rx="2" ry="2" />
<text  x="37.98" y="367.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive.Apply (416 samples, 0.32%)</title><rect x="12.7" y="277" width="3.7" height="15.0" fill="rgb(235,218,16)" rx="2" ry="2" />
<text  x="15.67" y="287.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (22 samples, 0.02%)</title><rect x="20.3" y="469" width="0.2" height="15.0" fill="rgb(214,40,23)" rx="2" ry="2" />
<text  x="23.29" y="479.5" ></text>
</g>
<g >
<title>call_timer_fn (20 samples, 0.02%)</title><rect x="1173.6" y="309" width="0.2" height="15.0" fill="rgb(234,74,51)" rx="2" ry="2" />
<text  x="1176.60" y="319.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).Read (278 samples, 0.21%)</title><rect x="12.9" y="101" width="2.5" height="15.0" fill="rgb(229,147,20)" rx="2" ry="2" />
<text  x="15.89" y="111.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (16 samples, 0.01%)</title><rect x="22.8" y="405" width="0.1" height="15.0" fill="rgb(232,67,22)" rx="2" ry="2" />
<text  x="25.77" y="415.5" ></text>
</g>
<g >
<title>do_iter_write (16 samples, 0.01%)</title><rect x="22.8" y="421" width="0.1" height="15.0" fill="rgb(231,205,40)" rx="2" ry="2" />
<text  x="25.77" y="431.5" ></text>
</g>
<g >
<title>do_idle (95,220 samples, 72.31%)</title><rect x="322.9" y="453" width="853.3" height="15.0" fill="rgb(234,187,41)" rx="2" ry="2" />
<text  x="325.93" y="463.5" >do_idle</text>
</g>
<g >
<title>zfs_write (14 samples, 0.01%)</title><rect x="1189.1" y="245" width="0.1" height="15.0" fill="rgb(236,204,9)" rx="2" ry="2" />
<text  x="1192.06" y="255.5" ></text>
</g>
<g >
<title>do_syscall_64 (18 samples, 0.01%)</title><rect x="1187.0" y="197" width="0.1" height="15.0" fill="rgb(251,104,52)" rx="2" ry="2" />
<text  x="1189.96" y="207.5" ></text>
</g>
<g >
<title>__kvm_io_bus_write (55 samples, 0.04%)</title><rect x="35.0" y="325" width="0.5" height="15.0" fill="rgb(211,125,53)" rx="2" ry="2" />
<text  x="37.99" y="335.5" ></text>
</g>
<g >
<title>[unknown] (91 samples, 0.07%)</title><rect x="32.8" y="485" width="0.8" height="15.0" fill="rgb(248,36,54)" rx="2" ry="2" />
<text  x="35.75" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.01%)</title><rect x="32.8" y="453" width="0.1" height="15.0" fill="rgb(223,158,43)" rx="2" ry="2" />
<text  x="35.78" y="463.5" ></text>
</g>
<g >
<title>do_syscall_64 (770 samples, 0.58%)</title><rect x="24.4" y="453" width="6.9" height="15.0" fill="rgb(243,183,42)" rx="2" ry="2" />
<text  x="27.36" y="463.5" ></text>
</g>
<g >
<title>zfs (41 samples, 0.03%)</title><rect x="1189.6" y="517" width="0.4" height="15.0" fill="rgb(246,133,54)" rx="2" ry="2" />
<text  x="1192.63" y="527.5" ></text>
</g>
<g >
<title>do_syscall_64 (33 samples, 0.03%)</title><rect x="17.4" y="469" width="0.3" height="15.0" fill="rgb(209,163,41)" rx="2" ry="2" />
<text  x="20.37" y="479.5" ></text>
</g>
<g >
<title>[zedbox] (33 samples, 0.03%)</title><rect x="1179.0" y="405" width="0.3" height="15.0" fill="rgb(242,224,21)" rx="2" ry="2" />
<text  x="1182.01" y="415.5" ></text>
</g>
<g >
<title>eventfd_write (61 samples, 0.05%)</title><rect x="30.7" y="405" width="0.5" height="15.0" fill="rgb(225,103,18)" rx="2" ry="2" />
<text  x="33.67" y="415.5" ></text>
</g>
<g >
<title>zpl_write_common_iovec (14 samples, 0.01%)</title><rect x="1189.1" y="261" width="0.1" height="15.0" fill="rgb(208,218,31)" rx="2" ry="2" />
<text  x="1192.06" y="271.5" ></text>
</g>
<g >
<title>do_sys_open (71 samples, 0.05%)</title><rect x="29.8" y="437" width="0.7" height="15.0" fill="rgb(232,214,36)" rx="2" ry="2" />
<text  x="32.85" y="447.5" ></text>
</g>
<g >
<title>path_openat (53 samples, 0.04%)</title><rect x="29.9" y="405" width="0.5" height="15.0" fill="rgb(220,94,36)" rx="2" ry="2" />
<text  x="32.88" y="415.5" ></text>
</g>
<g >
<title>cpu_startup_entry (95,220 samples, 72.31%)</title><rect x="322.9" y="469" width="853.3" height="15.0" fill="rgb(224,69,37)" rx="2" ry="2" />
<text  x="325.93" y="479.5" >cpu_startup_entry</text>
</g>
<g >
<title>[zedbox] (442 samples, 0.34%)</title><rect x="1184.3" y="293" width="3.9" height="15.0" fill="rgb(221,172,8)" rx="2" ry="2" />
<text  x="1187.26" y="303.5" ></text>
</g>
<g >
<title>[zedbox] (1,053 samples, 0.80%)</title><rect x="1180.2" y="453" width="9.4" height="15.0" fill="rgb(241,68,34)" rx="2" ry="2" />
<text  x="1183.15" y="463.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (29 samples, 0.02%)</title><rect x="28.9" y="389" width="0.3" height="15.0" fill="rgb(239,50,44)" rx="2" ry="2" />
<text  x="31.94" y="399.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (21 samples, 0.02%)</title><rect x="322.1" y="389" width="0.2" height="15.0" fill="rgb(212,142,12)" rx="2" ry="2" />
<text  x="325.11" y="399.5" ></text>
</g>
<g >
<title>zpl_iter_write (21 samples, 0.02%)</title><rect x="15.4" y="85" width="0.2" height="15.0" fill="rgb(206,27,32)" rx="2" ry="2" />
<text  x="18.43" y="95.5" ></text>
</g>
<g >
<title>__sched_text_start (45 samples, 0.03%)</title><rect x="322.5" y="421" width="0.4" height="15.0" fill="rgb(215,5,40)" rx="2" ry="2" />
<text  x="325.50" y="431.5" ></text>
</g>
<g >
<title>__raw_spin_unlock_irq (25 samples, 0.02%)</title><rect x="22.5" y="341" width="0.2" height="15.0" fill="rgb(240,143,45)" rx="2" ry="2" />
<text  x="25.47" y="351.5" ></text>
</g>
<g >
<title>run_rebalance_domains (36 samples, 0.03%)</title><rect x="1173.2" y="341" width="0.3" height="15.0" fill="rgb(206,23,41)" rx="2" ry="2" />
<text  x="1176.20" y="351.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/github.com/grpc-ecosystem/go-grpc-prometheus.(*ServerMetrics).UnaryServerInterceptor.func1 (426 samples, 0.32%)</title><rect x="12.7" y="421" width="3.8" height="15.0" fill="rgb(245,41,31)" rx="2" ry="2" />
<text  x="15.67" y="431.5" ></text>
</g>
<g >
<title>x86_decode_insn (42 samples, 0.03%)</title><rect x="36.5" y="309" width="0.3" height="15.0" fill="rgb(239,157,3)" rx="2" ry="2" />
<text  x="39.47" y="319.5" ></text>
</g>
<g >
<title>__sched_text_start (24 samples, 0.02%)</title><rect x="29.0" y="357" width="0.2" height="15.0" fill="rgb(205,141,42)" rx="2" ry="2" />
<text  x="31.98" y="367.5" ></text>
</g>
<g >
<title>ksoftirqd/3 (22 samples, 0.02%)</title><rect x="20.3" y="517" width="0.2" height="15.0" fill="rgb(219,127,43)" rx="2" ry="2" />
<text  x="23.29" y="527.5" ></text>
</g>
<g >
<title>__do_sys_futex (47 samples, 0.04%)</title><rect x="22.3" y="453" width="0.5" height="15.0" fill="rgb(247,88,39)" rx="2" ry="2" />
<text  x="25.34" y="463.5" ></text>
</g>
<g >
<title>kvm_vcpu_block (313 samples, 0.24%)</title><rect x="36.8" y="357" width="2.9" height="15.0" fill="rgb(240,67,38)" rx="2" ry="2" />
<text  x="39.85" y="367.5" ></text>
</g>
<g >
<title>[unknown] (22 samples, 0.02%)</title><rect x="21.0" y="501" width="0.2" height="15.0" fill="rgb(221,105,15)" rx="2" ry="2" />
<text  x="23.96" y="511.5" ></text>
</g>
<g >
<title>pgrep (12 samples, 0.01%)</title><rect x="21.7" y="517" width="0.1" height="15.0" fill="rgb(225,164,33)" rx="2" ry="2" />
<text  x="24.74" y="527.5" ></text>
</g>
<g >
<title>finish_task_switch (24 samples, 0.02%)</title><rect x="29.0" y="341" width="0.2" height="15.0" fill="rgb(210,134,17)" rx="2" ry="2" />
<text  x="31.98" y="351.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (116 samples, 0.09%)</title><rect x="1172.7" y="357" width="1.1" height="15.0" fill="rgb(237,7,32)" rx="2" ry="2" />
<text  x="1175.74" y="367.5" ></text>
</g>
<g >
<title>abd_copy_off (22 samples, 0.02%)</title><rect x="1177.3" y="389" width="0.2" height="15.0" fill="rgb(229,50,20)" rx="2" ry="2" />
<text  x="1180.32" y="399.5" ></text>
</g>
<g >
<title>[ld-musl-x86_64.so.1] (115 samples, 0.09%)</title><rect x="22.0" y="501" width="1.0" height="15.0" fill="rgb(211,169,17)" rx="2" ry="2" />
<text  x="24.96" y="511.5" ></text>
</g>
<g >
<title>[zedbox] (935 samples, 0.71%)</title><rect x="1181.1" y="405" width="8.4" height="15.0" fill="rgb(247,155,21)" rx="2" ry="2" />
<text  x="1184.15" y="415.5" ></text>
</g>
<g >
<title>skip_emulated_instruction (49 samples, 0.04%)</title><rect x="36.4" y="341" width="0.4" height="15.0" fill="rgb(242,114,9)" rx="2" ry="2" />
<text  x="39.41" y="351.5" ></text>
</g>
<g >
<title>[zedbox] (34 samples, 0.03%)</title><rect x="1179.0" y="437" width="0.3" height="15.0" fill="rgb(248,14,50)" rx="2" ry="2" />
<text  x="1182.00" y="447.5" ></text>
</g>
<g >
<title>__raw_spin_unlock_irq (22 samples, 0.02%)</title><rect x="29.0" y="325" width="0.2" height="15.0" fill="rgb(237,100,23)" rx="2" ry="2" />
<text  x="32.00" y="335.5" ></text>
</g>
<g >
<title>ret_from_fork (24 samples, 0.02%)</title><rect x="20.5" y="501" width="0.2" height="15.0" fill="rgb(230,12,12)" rx="2" ry="2" />
<text  x="23.48" y="511.5" ></text>
</g>
<g >
<title>timekeeping_get_ns (44 samples, 0.03%)</title><rect x="36.9" y="325" width="0.4" height="15.0" fill="rgb(240,93,9)" rx="2" ry="2" />
<text  x="39.89" y="335.5" ></text>
</g>
<g >
<title>[zedbox] (16 samples, 0.01%)</title><rect x="1186.5" y="133" width="0.2" height="15.0" fill="rgb(233,183,50)" rx="2" ry="2" />
<text  x="1189.55" y="143.5" ></text>
</g>
<g >
<title>vfs_write (66 samples, 0.05%)</title><rect x="30.7" y="421" width="0.6" height="15.0" fill="rgb(242,54,11)" rx="2" ry="2" />
<text  x="33.67" y="431.5" ></text>
</g>
<g >
<title>schedule_idle (47 samples, 0.04%)</title><rect x="322.5" y="437" width="0.4" height="15.0" fill="rgb(233,12,20)" rx="2" ry="2" />
<text  x="325.48" y="447.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/google.golang.org/grpc.(*Server).processStreamingRPC (15 samples, 0.01%)</title><rect x="12.5" y="453" width="0.1" height="15.0" fill="rgb(231,120,2)" rx="2" ry="2" />
<text  x="15.51" y="463.5" ></text>
</g>
<g >
<title>kvm_irq_delivery_to_apic_fast (31 samples, 0.02%)</title><rect x="40.0" y="325" width="0.3" height="15.0" fill="rgb(205,158,33)" rx="2" ry="2" />
<text  x="43.05" y="335.5" ></text>
</g>
<g >
<title>iptables (20 samples, 0.02%)</title><rect x="18.2" y="517" width="0.2" height="15.0" fill="rgb(249,190,7)" rx="2" ry="2" />
<text  x="21.23" y="527.5" ></text>
</g>
<g >
<title>ktime_get (46 samples, 0.03%)</title><rect x="36.9" y="341" width="0.4" height="15.0" fill="rgb(207,2,4)" rx="2" ry="2" />
<text  x="39.88" y="351.5" ></text>
</g>
<g >
<title>zedbox (1,186 samples, 0.90%)</title><rect x="1179.0" y="517" width="10.6" height="15.0" fill="rgb(221,111,31)" rx="2" ry="2" />
<text  x="1182.00" y="527.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (19 samples, 0.01%)</title><rect x="20.3" y="357" width="0.2" height="15.0" fill="rgb(234,227,8)" rx="2" ry="2" />
<text  x="23.29" y="367.5" ></text>
</g>
<g >
<title>metaslab_alloc (13 samples, 0.01%)</title><rect x="1178.0" y="421" width="0.2" height="15.0" fill="rgb(235,6,27)" rx="2" ry="2" />
<text  x="1181.04" y="431.5" ></text>
</g>
<g >
<title>do_syscall_64 (22 samples, 0.02%)</title><rect x="15.4" y="149" width="0.2" height="15.0" fill="rgb(217,98,27)" rx="2" ry="2" />
<text  x="18.42" y="159.5" ></text>
</g>
<g >
<title>archive/tar.(*regFileReader).Read (280 samples, 0.21%)</title><rect x="12.9" y="197" width="2.5" height="15.0" fill="rgb(215,46,34)" rx="2" ry="2" />
<text  x="15.89" y="207.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).nextBlock (130 samples, 0.10%)</title><rect x="14.1" y="85" width="1.2" height="15.0" fill="rgb(212,58,52)" rx="2" ry="2" />
<text  x="17.14" y="95.5" ></text>
</g>
<g >
<title>ret_from_fork (13 samples, 0.01%)</title><rect x="1177.7" y="501" width="0.2" height="15.0" fill="rgb(248,222,31)" rx="2" ry="2" />
<text  x="1180.75" y="511.5" ></text>
</g>
<g >
<title>[unknown] (13 samples, 0.01%)</title><rect x="1176.6" y="501" width="0.1" height="15.0" fill="rgb(241,167,5)" rx="2" ry="2" />
<text  x="1179.56" y="511.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive/compression.(*readCloserWrapper).Read (279 samples, 0.21%)</title><rect x="12.9" y="133" width="2.5" height="15.0" fill="rgb(229,85,38)" rx="2" ry="2" />
<text  x="15.89" y="143.5" ></text>
</g>
<g >
<title>vfs_write (15 samples, 0.01%)</title><rect x="1189.1" y="309" width="0.1" height="15.0" fill="rgb(209,138,45)" rx="2" ry="2" />
<text  x="1192.05" y="319.5" ></text>
</g>
<g >
<title>[newlogd] (37 samples, 0.03%)</title><rect x="21.3" y="421" width="0.3" height="15.0" fill="rgb(254,170,26)" rx="2" ry="2" />
<text  x="24.28" y="431.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/diff/walking/plugin.(*diffPlugin).Apply (426 samples, 0.32%)</title><rect x="12.7" y="357" width="3.8" height="15.0" fill="rgb(238,110,12)" rx="2" ry="2" />
<text  x="15.67" y="367.5" ></text>
</g>
<g >
<title>schedule (24 samples, 0.02%)</title><rect x="29.0" y="373" width="0.2" height="15.0" fill="rgb(250,138,48)" rx="2" ry="2" />
<text  x="31.98" y="383.5" ></text>
</g>
<g >
<title>zio_vdev_io_start (21 samples, 0.02%)</title><rect x="1178.5" y="389" width="0.1" height="15.0" fill="rgb(242,18,45)" rx="2" ry="2" />
<text  x="1181.46" y="399.5" ></text>
</g>
<g >
<title>native_safe_halt (31,374 samples, 23.83%)</title><rect x="41.2" y="421" width="281.1" height="15.0" fill="rgb(249,161,54)" rx="2" ry="2" />
<text  x="44.19" y="431.5" >native_safe_halt</text>
</g>
<g >
<title>__cpuidle_text_start (31,378 samples, 23.83%)</title><rect x="41.2" y="437" width="281.1" height="15.0" fill="rgb(226,39,28)" rx="2" ry="2" />
<text  x="44.15" y="447.5" >__cpuidle_text_start</text>
</g>
<g >
<title>[unknown] (22 samples, 0.02%)</title><rect x="21.0" y="485" width="0.2" height="15.0" fill="rgb(244,179,15)" rx="2" ry="2" />
<text  x="23.96" y="495.5" ></text>
</g>
<g >
<title>[zedbox] (727 samples, 0.55%)</title><rect x="1182.4" y="357" width="6.5" height="15.0" fill="rgb(217,180,30)" rx="2" ry="2" />
<text  x="1185.41" y="367.5" ></text>
</g>
<g >
<title>irq_exit (116 samples, 0.09%)</title><rect x="1172.7" y="373" width="1.1" height="15.0" fill="rgb(239,185,48)" rx="2" ry="2" />
<text  x="1175.74" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.01%)</title><rect x="1188.2" y="293" width="0.2" height="15.0" fill="rgb(252,19,47)" rx="2" ry="2" />
<text  x="1191.22" y="303.5" ></text>
</g>
<g >
<title>net_rx_action (53 samples, 0.04%)</title><rect x="1174.2" y="341" width="0.5" height="15.0" fill="rgb(239,145,22)" rx="2" ry="2" />
<text  x="1177.23" y="351.5" ></text>
</g>
<g >
<title>new_sync_write (15 samples, 0.01%)</title><rect x="1189.1" y="293" width="0.1" height="15.0" fill="rgb(226,16,4)" rx="2" ry="2" />
<text  x="1192.05" y="303.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (29 samples, 0.02%)</title><rect x="1188.9" y="357" width="0.3" height="15.0" fill="rgb(254,146,21)" rx="2" ry="2" />
<text  x="1191.92" y="367.5" ></text>
</g>
<g >
<title>try_to_wake_up (51 samples, 0.04%)</title><rect x="34.0" y="373" width="0.4" height="15.0" fill="rgb(216,190,14)" rx="2" ry="2" />
<text  x="36.97" y="383.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/github.com/grpc-ecosystem/go-grpc-prometheus.(*ServerMetrics).StreamServerInterceptor.func1 (15 samples, 0.01%)</title><rect x="12.5" y="437" width="0.1" height="15.0" fill="rgb(210,229,43)" rx="2" ry="2" />
<text  x="15.51" y="447.5" ></text>
</g>
<g >
<title>do_pwritev (18 samples, 0.01%)</title><rect x="22.8" y="453" width="0.1" height="15.0" fill="rgb(235,8,7)" rx="2" ry="2" />
<text  x="25.76" y="463.5" ></text>
</g>
<g >
<title>finish_task_switch (25 samples, 0.02%)</title><rect x="22.5" y="357" width="0.2" height="15.0" fill="rgb(225,203,8)" rx="2" ry="2" />
<text  x="25.47" y="367.5" ></text>
</g>
<g >
<title>new_sync_write (22 samples, 0.02%)</title><rect x="15.4" y="101" width="0.2" height="15.0" fill="rgb(241,110,53)" rx="2" ry="2" />
<text  x="18.42" y="111.5" ></text>
</g>
<g >
<title>schedule (29 samples, 0.02%)</title><rect x="22.4" y="389" width="0.3" height="15.0" fill="rgb(225,120,7)" rx="2" ry="2" />
<text  x="25.44" y="399.5" ></text>
</g>
<g >
<title>crypto/sha256.block (134 samples, 0.10%)</title><rect x="11.1" y="485" width="1.2" height="15.0" fill="rgb(248,54,34)" rx="2" ry="2" />
<text  x="14.06" y="495.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (12 samples, 0.01%)</title><rect x="1174.3" y="245" width="0.1" height="15.0" fill="rgb(237,205,31)" rx="2" ry="2" />
<text  x="1177.25" y="255.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (51 samples, 0.04%)</title><rect x="27.2" y="373" width="0.5" height="15.0" fill="rgb(216,140,1)" rx="2" ry="2" />
<text  x="30.24" y="383.5" ></text>
</g>
<g >
<title>start_secondary (95,220 samples, 72.31%)</title><rect x="322.9" y="485" width="853.3" height="15.0" fill="rgb(219,89,22)" rx="2" ry="2" />
<text  x="325.93" y="495.5" >start_secondary</text>
</g>
<g >
<title>os.openFileNolog (20 samples, 0.02%)</title><rect x="15.7" y="197" width="0.2" height="15.0" fill="rgb(209,115,36)" rx="2" ry="2" />
<text  x="18.74" y="207.5" ></text>
</g>
<g >
<title>[newlogd] (39 samples, 0.03%)</title><rect x="21.3" y="453" width="0.3" height="15.0" fill="rgb(214,136,33)" rx="2" ry="2" />
<text  x="24.26" y="463.5" ></text>
</g>
<g >
<title>__raw_spin_unlock_irq (13 samples, 0.01%)</title><rect x="39.2" y="293" width="0.1" height="15.0" fill="rgb(213,86,45)" rx="2" ry="2" />
<text  x="42.21" y="303.5" ></text>
</g>
<g >
<title>kthreadd (19 samples, 0.01%)</title><rect x="20.5" y="485" width="0.2" height="15.0" fill="rgb(221,5,29)" rx="2" ry="2" />
<text  x="23.52" y="495.5" ></text>
</g>
<g >
<title>zio_ready (24 samples, 0.02%)</title><rect x="1178.2" y="437" width="0.2" height="15.0" fill="rgb(239,46,11)" rx="2" ry="2" />
<text  x="1181.15" y="447.5" ></text>
</g>
<g >
<title>do_syscall_64 (15 samples, 0.01%)</title><rect x="21.0" y="421" width="0.1" height="15.0" fill="rgb(220,3,21)" rx="2" ry="2" />
<text  x="24.01" y="431.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (88 samples, 0.07%)</title><rect x="1173.9" y="357" width="0.8" height="15.0" fill="rgb(228,149,35)" rx="2" ry="2" />
<text  x="1176.91" y="367.5" ></text>
</g>
<g >
<title>zfs_create (16 samples, 0.01%)</title><rect x="15.8" y="69" width="0.1" height="15.0" fill="rgb(232,212,43)" rx="2" ry="2" />
<text  x="18.76" y="79.5" ></text>
</g>
<g >
<title>abd_copy_off_cb (20 samples, 0.02%)</title><rect x="1177.3" y="357" width="0.2" height="15.0" fill="rgb(232,46,16)" rx="2" ry="2" />
<text  x="1180.32" y="367.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.01%)</title><rect x="1189.4" y="389" width="0.1" height="15.0" fill="rgb(218,51,42)" rx="2" ry="2" />
<text  x="1192.35" y="399.5" ></text>
</g>
<g >
<title>zio_taskq_dispatch (12 samples, 0.01%)</title><rect x="1177.1" y="421" width="0.1" height="15.0" fill="rgb(219,208,19)" rx="2" ry="2" />
<text  x="1180.11" y="431.5" ></text>
</g>
<g >
<title>ret_from_fork (22 samples, 0.02%)</title><rect x="20.3" y="501" width="0.2" height="15.0" fill="rgb(236,86,44)" rx="2" ry="2" />
<text  x="23.29" y="511.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (13 samples, 0.01%)</title><rect x="33.1" y="357" width="0.1" height="15.0" fill="rgb(250,59,41)" rx="2" ry="2" />
<text  x="36.08" y="367.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/api/services/diff/v1._Diff_Apply_Handler (426 samples, 0.32%)</title><rect x="12.7" y="437" width="3.8" height="15.0" fill="rgb(242,171,38)" rx="2" ry="2" />
<text  x="15.67" y="447.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/diff/apply.apply.func1 (416 samples, 0.32%)</title><rect x="12.7" y="293" width="3.7" height="15.0" fill="rgb(221,152,19)" rx="2" ry="2" />
<text  x="15.67" y="303.5" ></text>
</g>
<g >
<title>kvm_skip_emulated_instruction (51 samples, 0.04%)</title><rect x="36.4" y="357" width="0.4" height="15.0" fill="rgb(211,219,25)" rx="2" ry="2" />
<text  x="39.39" y="367.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.01%)</title><rect x="1179.2" y="389" width="0.1" height="15.0" fill="rgb(228,134,1)" rx="2" ry="2" />
<text  x="1182.17" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.01%)</title><rect x="1179.0" y="357" width="0.2" height="15.0" fill="rgb(219,105,16)" rx="2" ry="2" />
<text  x="1182.05" y="367.5" ></text>
</g>
<g >
<title>do_exit (12 samples, 0.01%)</title><rect x="1176.7" y="469" width="0.1" height="15.0" fill="rgb(241,222,45)" rx="2" ry="2" />
<text  x="1179.72" y="479.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (32 samples, 0.02%)</title><rect x="29.5" y="437" width="0.3" height="15.0" fill="rgb(238,193,24)" rx="2" ry="2" />
<text  x="32.47" y="447.5" ></text>
</g>
<g >
<title>zpl_create (17 samples, 0.01%)</title><rect x="15.8" y="85" width="0.1" height="15.0" fill="rgb(214,95,49)" rx="2" ry="2" />
<text  x="18.76" y="95.5" ></text>
</g>
<g >
<title>__do_sys_ppoll (560 samples, 0.43%)</title><rect x="24.4" y="437" width="5.0" height="15.0" fill="rgb(246,159,27)" rx="2" ry="2" />
<text  x="27.42" y="447.5" ></text>
</g>
<g >
<title>schedule_idle (141 samples, 0.11%)</title><rect x="1175.0" y="437" width="1.2" height="15.0" fill="rgb(252,33,21)" rx="2" ry="2" />
<text  x="1177.95" y="447.5" ></text>
</g>
<g >
<title>net_rx_action (21 samples, 0.02%)</title><rect x="20.3" y="421" width="0.2" height="15.0" fill="rgb(250,119,42)" rx="2" ry="2" />
<text  x="23.29" y="431.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (51 samples, 0.04%)</title><rect x="35.0" y="277" width="0.5" height="15.0" fill="rgb(223,57,39)" rx="2" ry="2" />
<text  x="38.01" y="287.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/services/diff.(*service).Apply (426 samples, 0.32%)</title><rect x="12.7" y="389" width="3.8" height="15.0" fill="rgb(217,128,31)" rx="2" ry="2" />
<text  x="15.67" y="399.5" ></text>
</g>
<g >
<title>__fget (93 samples, 0.07%)</title><rect x="25.3" y="389" width="0.8" height="15.0" fill="rgb(248,182,12)" rx="2" ry="2" />
<text  x="28.27" y="399.5" ></text>
</g>
<g >
<title>kvm_vcpu_wake_up (25 samples, 0.02%)</title><rect x="40.1" y="277" width="0.2" height="15.0" fill="rgb(230,26,17)" rx="2" ry="2" />
<text  x="43.06" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.01%)</title><rect x="15.8" y="165" width="0.1" height="15.0" fill="rgb(223,213,44)" rx="2" ry="2" />
<text  x="18.75" y="175.5" ></text>
</g>
<g >
<title>swapper (126,667 samples, 96.20%)</title><rect x="41.1" y="517" width="1135.1" height="15.0" fill="rgb(231,3,24)" rx="2" ry="2" />
<text  x="44.11" y="527.5" >swapper</text>
</g>
<g >
<title>sync_dnodes_task (26 samples, 0.02%)</title><rect x="17.8" y="453" width="0.2" height="15.0" fill="rgb(215,51,7)" rx="2" ry="2" />
<text  x="20.75" y="463.5" ></text>
</g>
<g >
<title>__sched_text_start (27 samples, 0.02%)</title><rect x="22.4" y="373" width="0.3" height="15.0" fill="rgb(206,190,39)" rx="2" ry="2" />
<text  x="25.45" y="383.5" ></text>
</g>
<g >
<title>zfs_read (13 samples, 0.01%)</title><rect x="33.1" y="309" width="0.1" height="15.0" fill="rgb(215,118,10)" rx="2" ry="2" />
<text  x="36.08" y="319.5" ></text>
</g>
<g >
<title>fput_many (21 samples, 0.02%)</title><rect x="28.6" y="389" width="0.2" height="15.0" fill="rgb(254,155,43)" rx="2" ry="2" />
<text  x="31.65" y="399.5" ></text>
</g>
<g >
<title>[jq] (126 samples, 0.10%)</title><rect x="18.4" y="501" width="1.1" height="15.0" fill="rgb(236,0,0)" rx="2" ry="2" />
<text  x="21.41" y="511.5" ></text>
</g>
<g >
<title>kthreadd (24 samples, 0.02%)</title><rect x="20.5" y="517" width="0.2" height="15.0" fill="rgb(231,71,52)" rx="2" ry="2" />
<text  x="23.48" y="527.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (26 samples, 0.02%)</title><rect x="1187.1" y="229" width="0.3" height="15.0" fill="rgb(224,1,53)" rx="2" ry="2" />
<text  x="1190.12" y="239.5" ></text>
</g>
<g >
<title>kvm_vcpu_ioctl (595 samples, 0.45%)</title><rect x="34.7" y="389" width="5.3" height="15.0" fill="rgb(215,156,11)" rx="2" ry="2" />
<text  x="37.72" y="399.5" ></text>
</g>
<g >
<title>proc_pid_status (13 samples, 0.01%)</title><rect x="1187.9" y="165" width="0.1" height="15.0" fill="rgb(251,31,19)" rx="2" ry="2" />
<text  x="1190.89" y="175.5" ></text>
</g>
<g >
<title>z_wr_int_h (13 samples, 0.01%)</title><rect x="1177.7" y="517" width="0.2" height="15.0" fill="rgb(215,201,50)" rx="2" ry="2" />
<text  x="1180.75" y="527.5" ></text>
</g>
<g >
<title>dnsmasq (111 samples, 0.08%)</title><rect x="16.7" y="517" width="1.0" height="15.0" fill="rgb(236,55,33)" rx="2" ry="2" />
<text  x="19.72" y="527.5" ></text>
</g>
<g >
<title>native_read_msr (21 samples, 0.02%)</title><rect x="39.3" y="245" width="0.2" height="15.0" fill="rgb(247,129,36)" rx="2" ry="2" />
<text  x="42.35" y="255.5" ></text>
</g>
<g >
<title>memlogd (33 samples, 0.03%)</title><rect x="20.9" y="517" width="0.3" height="15.0" fill="rgb(246,93,2)" rx="2" ry="2" />
<text  x="23.86" y="527.5" ></text>
</g>
<g >
<title>kvm_lapic_reg_write (31 samples, 0.02%)</title><rect x="35.7" y="293" width="0.3" height="15.0" fill="rgb(236,229,36)" rx="2" ry="2" />
<text  x="38.75" y="303.5" ></text>
</g>
<g >
<title>do_filp_open (18 samples, 0.01%)</title><rect x="15.8" y="117" width="0.1" height="15.0" fill="rgb(251,119,28)" rx="2" ry="2" />
<text  x="18.75" y="127.5" ></text>
</g>
<g >
<title>__do_sys_futex (57 samples, 0.04%)</title><rect x="33.9" y="437" width="0.5" height="15.0" fill="rgb(241,200,43)" rx="2" ry="2" />
<text  x="36.92" y="447.5" ></text>
</g>
<g >
<title>bufio.(*Reader).ReadByte (20 samples, 0.02%)</title><rect x="13.9" y="53" width="0.2" height="15.0" fill="rgb(221,159,10)" rx="2" ry="2" />
<text  x="16.87" y="63.5" ></text>
</g>
<g >
<title>__apic_accept_irq (24 samples, 0.02%)</title><rect x="35.8" y="245" width="0.2" height="15.0" fill="rgb(233,20,49)" rx="2" ry="2" />
<text  x="38.76" y="255.5" ></text>
</g>
<g >
<title>[newlogd] (14 samples, 0.01%)</title><rect x="21.3" y="373" width="0.2" height="15.0" fill="rgb(224,51,43)" rx="2" ry="2" />
<text  x="24.34" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (21 samples, 0.02%)</title><rect x="1188.0" y="277" width="0.2" height="15.0" fill="rgb(205,220,5)" rx="2" ry="2" />
<text  x="1191.03" y="287.5" ></text>
</g>
<g >
<title>[zedbox] (197 samples, 0.15%)</title><rect x="1185.6" y="245" width="1.8" height="15.0" fill="rgb(235,180,9)" rx="2" ry="2" />
<text  x="1188.59" y="255.5" ></text>
</g>
<g >
<title>[memlogd] (21 samples, 0.02%)</title><rect x="21.0" y="469" width="0.1" height="15.0" fill="rgb(239,141,23)" rx="2" ry="2" />
<text  x="23.96" y="479.5" ></text>
</g>
<g >
<title>do_IRQ (88 samples, 0.07%)</title><rect x="1173.9" y="389" width="0.8" height="15.0" fill="rgb(208,203,21)" rx="2" ry="2" />
<text  x="1176.91" y="399.5" ></text>
</g>
<g >
<title>[newlogd] (29 samples, 0.02%)</title><rect x="21.3" y="405" width="0.3" height="15.0" fill="rgb(210,78,1)" rx="2" ry="2" />
<text  x="24.29" y="415.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (41 samples, 0.03%)</title><rect x="322.5" y="373" width="0.4" height="15.0" fill="rgb(207,189,42)" rx="2" ry="2" />
<text  x="325.52" y="383.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (633 samples, 0.48%)</title><rect x="34.7" y="453" width="5.7" height="15.0" fill="rgb(210,139,7)" rx="2" ry="2" />
<text  x="37.69" y="463.5" ></text>
</g>
<g >
<title>kthread (12 samples, 0.01%)</title><rect x="40.9" y="485" width="0.1" height="15.0" fill="rgb(225,118,23)" rx="2" ry="2" />
<text  x="43.86" y="495.5" ></text>
</g>
<g >
<title>ksys_read (20 samples, 0.02%)</title><rect x="1187.8" y="229" width="0.2" height="15.0" fill="rgb(218,81,43)" rx="2" ry="2" />
<text  x="1190.83" y="239.5" ></text>
</g>
<g >
<title>x86_emulate_instruction (48 samples, 0.04%)</title><rect x="36.4" y="325" width="0.4" height="15.0" fill="rgb(214,174,46)" rx="2" ry="2" />
<text  x="39.42" y="335.5" ></text>
</g>
<g >
<title>kvm_vm_ioctl (33 samples, 0.03%)</title><rect x="40.0" y="389" width="0.3" height="15.0" fill="rgb(247,222,52)" rx="2" ry="2" />
<text  x="43.05" y="399.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (13 samples, 0.01%)</title><rect x="39.2" y="277" width="0.1" height="15.0" fill="rgb(212,185,22)" rx="2" ry="2" />
<text  x="42.21" y="287.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (44 samples, 0.03%)</title><rect x="1174.3" y="261" width="0.3" height="15.0" fill="rgb(231,134,20)" rx="2" ry="2" />
<text  x="1177.25" y="271.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (23 samples, 0.02%)</title><rect x="35.8" y="181" width="0.2" height="15.0" fill="rgb(225,90,9)" rx="2" ry="2" />
<text  x="38.76" y="191.5" ></text>
</g>
<g >
<title>[zedbox] (269 samples, 0.20%)</title><rect x="1185.2" y="261" width="2.4" height="15.0" fill="rgb(227,23,32)" rx="2" ry="2" />
<text  x="1188.18" y="271.5" ></text>
</g>
<g >
<title>do_syscall_64 (23 samples, 0.02%)</title><rect x="33.3" y="437" width="0.2" height="15.0" fill="rgb(223,12,4)" rx="2" ry="2" />
<text  x="36.32" y="447.5" ></text>
</g>
<g >
<title>do_syscall_64 (12 samples, 0.01%)</title><rect x="32.8" y="437" width="0.1" height="15.0" fill="rgb(209,3,42)" rx="2" ry="2" />
<text  x="35.78" y="447.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (38 samples, 0.03%)</title><rect x="22.4" y="405" width="0.3" height="15.0" fill="rgb(237,82,33)" rx="2" ry="2" />
<text  x="25.36" y="415.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (32 samples, 0.02%)</title><rect x="1173.2" y="293" width="0.3" height="15.0" fill="rgb(249,126,49)" rx="2" ry="2" />
<text  x="1176.22" y="303.5" ></text>
</g>
<g >
<title>seq_read (17 samples, 0.01%)</title><rect x="1187.9" y="197" width="0.1" height="15.0" fill="rgb(250,206,6)" rx="2" ry="2" />
<text  x="1190.86" y="207.5" ></text>
</g>
<g >
<title>finish_task_switch (40 samples, 0.03%)</title><rect x="39.2" y="309" width="0.4" height="15.0" fill="rgb(207,208,26)" rx="2" ry="2" />
<text  x="42.21" y="319.5" ></text>
</g>
<g >
<title>copy_process (15 samples, 0.01%)</title><rect x="20.5" y="437" width="0.2" height="15.0" fill="rgb(219,221,35)" rx="2" ry="2" />
<text  x="23.53" y="447.5" ></text>
</g>
<g >
<title>ret_from_intr (88 samples, 0.07%)</title><rect x="1173.9" y="405" width="0.8" height="15.0" fill="rgb(221,65,14)" rx="2" ry="2" />
<text  x="1176.91" y="415.5" ></text>
</g>
<g >
<title>[qemu-system-x86_64] (57 samples, 0.04%)</title><rect x="23.0" y="501" width="0.5" height="15.0" fill="rgb(224,44,14)" rx="2" ry="2" />
<text  x="26.03" y="511.5" ></text>
</g>
<g >
<title>zio_done (37 samples, 0.03%)</title><rect x="1176.9" y="437" width="0.3" height="15.0" fill="rgb(209,88,2)" rx="2" ry="2" />
<text  x="1179.91" y="447.5" ></text>
</g>
<g >
<title>syscall.Syscall6 (18 samples, 0.01%)</title><rect x="15.8" y="181" width="0.1" height="15.0" fill="rgb(254,120,32)" rx="2" ry="2" />
<text  x="18.75" y="191.5" ></text>
</g>
<g >
<title>taskq_thread (102 samples, 0.08%)</title><rect x="1176.8" y="469" width="0.9" height="15.0" fill="rgb(210,100,32)" rx="2" ry="2" />
<text  x="1179.84" y="479.5" ></text>
</g>
<g >
<title>poll_freewait (98 samples, 0.07%)</title><rect x="28.0" y="405" width="0.9" height="15.0" fill="rgb(239,225,27)" rx="2" ry="2" />
<text  x="31.05" y="415.5" ></text>
</g>
<g >
<title>vfs_write (22 samples, 0.02%)</title><rect x="15.4" y="117" width="0.2" height="15.0" fill="rgb(207,78,48)" rx="2" ry="2" />
<text  x="18.42" y="127.5" ></text>
</g>
<g >
<title>do_syscall_64 (57 samples, 0.04%)</title><rect x="33.9" y="453" width="0.5" height="15.0" fill="rgb(237,200,54)" rx="2" ry="2" />
<text  x="36.92" y="463.5" ></text>
</g>
<g >
<title>ioeventfd_write (53 samples, 0.04%)</title><rect x="35.0" y="309" width="0.5" height="15.0" fill="rgb(210,225,9)" rx="2" ry="2" />
<text  x="37.99" y="319.5" ></text>
</g>
<g >
<title>kthread (115 samples, 0.09%)</title><rect x="1176.7" y="485" width="1.0" height="15.0" fill="rgb(221,15,14)" rx="2" ry="2" />
<text  x="1179.72" y="495.5" ></text>
</g>
<g >
<title>kvm_cpu_has_extint (14 samples, 0.01%)</title><rect x="38.3" y="293" width="0.1" height="15.0" fill="rgb(251,19,24)" rx="2" ry="2" />
<text  x="41.26" y="303.5" ></text>
</g>
<g >
<title>kthread (13 samples, 0.01%)</title><rect x="1177.7" y="485" width="0.2" height="15.0" fill="rgb(250,6,25)" rx="2" ry="2" />
<text  x="1180.75" y="495.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (116 samples, 0.09%)</title><rect x="1172.7" y="389" width="1.1" height="15.0" fill="rgb(240,202,14)" rx="2" ry="2" />
<text  x="1175.74" y="399.5" ></text>
</g>
<g >
<title>[qemu-system-x86_64] (98 samples, 0.07%)</title><rect x="31.9" y="485" width="0.9" height="15.0" fill="rgb(213,92,15)" rx="2" ry="2" />
<text  x="34.87" y="495.5" ></text>
</g>
<g >
<title>[newlogd] (26 samples, 0.02%)</title><rect x="21.3" y="389" width="0.2" height="15.0" fill="rgb(229,137,11)" rx="2" ry="2" />
<text  x="24.31" y="399.5" ></text>
</g>
<g >
<title>start_kernel (31,446 samples, 23.88%)</title><rect x="41.1" y="485" width="281.8" height="15.0" fill="rgb(210,52,10)" rx="2" ry="2" />
<text  x="44.12" y="495.5" >start_kernel</text>
</g>
<g >
<title>github.com/containerd/containerd/diff/apply.(*readCounter).Read (280 samples, 0.21%)</title><rect x="12.9" y="181" width="2.5" height="15.0" fill="rgb(253,63,39)" rx="2" ry="2" />
<text  x="15.89" y="191.5" ></text>
</g>
<g >
<title>kvm_set_msr_common (33 samples, 0.03%)</title><rect x="35.7" y="309" width="0.3" height="15.0" fill="rgb(247,197,48)" rx="2" ry="2" />
<text  x="38.75" y="319.5" ></text>
</g>
<g >
<title>[jq] (64 samples, 0.05%)</title><rect x="19.6" y="485" width="0.5" height="15.0" fill="rgb(228,226,20)" rx="2" ry="2" />
<text  x="22.56" y="495.5" ></text>
</g>
<g >
<title>__do_sys_futex (13 samples, 0.01%)</title><rect x="1179.0" y="325" width="0.2" height="15.0" fill="rgb(214,106,41)" rx="2" ry="2" />
<text  x="1182.05" y="335.5" ></text>
</g>
<g >
<title>[libglib-2.0.so.0.6400.6] (60 samples, 0.05%)</title><rect x="31.3" y="485" width="0.6" height="15.0" fill="rgb(235,56,18)" rx="2" ry="2" />
<text  x="34.34" y="495.5" ></text>
</g>
<g >
<title>do_sys_open (18 samples, 0.01%)</title><rect x="15.8" y="133" width="0.1" height="15.0" fill="rgb(243,143,36)" rx="2" ry="2" />
<text  x="18.75" y="143.5" ></text>
</g>
<g >
<title>z_wr_int (115 samples, 0.09%)</title><rect x="1176.7" y="517" width="1.0" height="15.0" fill="rgb(223,12,34)" rx="2" ry="2" />
<text  x="1179.72" y="527.5" ></text>
</g>
<g >
<title>blk_done_softirq (22 samples, 0.02%)</title><rect x="1174.0" y="341" width="0.2" height="15.0" fill="rgb(226,182,36)" rx="2" ry="2" />
<text  x="1177.03" y="351.5" ></text>
</g>
<g >
<title>[zedbox] (1,061 samples, 0.81%)</title><rect x="1180.1" y="485" width="9.5" height="15.0" fill="rgb(229,99,10)" rx="2" ry="2" />
<text  x="1183.08" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.01%)</title><rect x="1189.2" y="373" width="0.1" height="15.0" fill="rgb(247,205,5)" rx="2" ry="2" />
<text  x="1192.19" y="383.5" ></text>
</g>
<g >
<title>[zedbox] (499 samples, 0.38%)</title><rect x="1183.9" y="309" width="4.5" height="15.0" fill="rgb(211,162,11)" rx="2" ry="2" />
<text  x="1186.89" y="319.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (13 samples, 0.01%)</title><rect x="1173.9" y="341" width="0.1" height="15.0" fill="rgb(214,11,40)" rx="2" ry="2" />
<text  x="1176.91" y="351.5" ></text>
</g>
<g >
<title>containerd (709 samples, 0.54%)</title><rect x="10.3" y="517" width="6.4" height="15.0" fill="rgb(224,153,20)" rx="2" ry="2" />
<text  x="13.30" y="527.5" ></text>
</g>
<g >
<title>__do_insn_fetch_bytes (30 samples, 0.02%)</title><rect x="36.5" y="293" width="0.3" height="15.0" fill="rgb(235,40,38)" rx="2" ry="2" />
<text  x="39.51" y="303.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (140 samples, 0.11%)</title><rect x="1175.0" y="373" width="1.2" height="15.0" fill="rgb(235,197,9)" rx="2" ry="2" />
<text  x="1177.96" y="383.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (22 samples, 0.02%)</title><rect x="20.3" y="437" width="0.2" height="15.0" fill="rgb(244,142,24)" rx="2" ry="2" />
<text  x="23.29" y="447.5" ></text>
</g>
<g >
<title>kvm_set_msi (31 samples, 0.02%)</title><rect x="40.0" y="357" width="0.3" height="15.0" fill="rgb(243,76,34)" rx="2" ry="2" />
<text  x="43.05" y="367.5" ></text>
</g>
<g >
<title>__pollwait (52 samples, 0.04%)</title><rect x="26.7" y="389" width="0.5" height="15.0" fill="rgb(228,139,0)" rx="2" ry="2" />
<text  x="29.75" y="399.5" ></text>
</g>
<g >
<title>vmx_read_guest_seg_ar (14 samples, 0.01%)</title><rect x="36.6" y="245" width="0.2" height="15.0" fill="rgb(217,84,32)" rx="2" ry="2" />
<text  x="39.64" y="255.5" ></text>
</g>
<g >
<title>vfs_statx (22 samples, 0.02%)</title><rect x="33.3" y="405" width="0.2" height="15.0" fill="rgb(208,171,14)" rx="2" ry="2" />
<text  x="36.32" y="415.5" ></text>
</g>
<g >
<title>kvm_arch_vcpu_ioctl_run (595 samples, 0.45%)</title><rect x="34.7" y="373" width="5.3" height="15.0" fill="rgb(226,181,48)" rx="2" ry="2" />
<text  x="37.72" y="383.5" ></text>
</g>
<g >
<title>spl_dynamic_tas (12 samples, 0.01%)</title><rect x="40.9" y="517" width="0.1" height="15.0" fill="rgb(235,220,19)" rx="2" ry="2" />
<text  x="43.86" y="527.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/google.golang.org/grpc.(*Server).serveStreams.func1.1 (453 samples, 0.34%)</title><rect x="12.5" y="485" width="4.1" height="15.0" fill="rgb(233,35,33)" rx="2" ry="2" />
<text  x="15.51" y="495.5" ></text>
</g>
<g >
<title>os.lstatNolog (13 samples, 0.01%)</title><rect x="16.3" y="229" width="0.1" height="15.0" fill="rgb(253,87,26)" rx="2" ry="2" />
<text  x="19.28" y="239.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/diff.(*compressedProcessor).Read (279 samples, 0.21%)</title><rect x="12.9" y="149" width="2.5" height="15.0" fill="rgb(231,200,10)" rx="2" ry="2" />
<text  x="15.89" y="159.5" ></text>
</g>
<g >
<title>__raw_spin_unlock_irq (41 samples, 0.03%)</title><rect x="322.5" y="389" width="0.4" height="15.0" fill="rgb(229,92,20)" rx="2" ry="2" />
<text  x="325.52" y="399.5" ></text>
</g>
<g >
<title>[unknown] (68 samples, 0.05%)</title><rect x="19.6" y="501" width="0.6" height="15.0" fill="rgb(249,214,42)" rx="2" ry="2" />
<text  x="22.56" y="511.5" ></text>
</g>
<g >
<title>__raw_spin_unlock_irq (57 samples, 0.04%)</title><rect x="30.7" y="389" width="0.5" height="15.0" fill="rgb(250,227,17)" rx="2" ry="2" />
<text  x="33.68" y="399.5" ></text>
</g>
<g >
<title>zio_execute (109 samples, 0.08%)</title><rect x="1177.9" y="453" width="1.0" height="15.0" fill="rgb(250,51,17)" rx="2" ry="2" />
<text  x="1180.92" y="463.5" ></text>
</g>
<g >
<title>newlogd (44 samples, 0.03%)</title><rect x="21.3" y="517" width="0.4" height="15.0" fill="rgb(207,34,16)" rx="2" ry="2" />
<text  x="24.26" y="527.5" ></text>
</g>
<g >
<title>[zedbox] (1,069 samples, 0.81%)</title><rect x="1180.1" y="501" width="9.5" height="15.0" fill="rgb(254,59,54)" rx="2" ry="2" />
<text  x="1183.05" y="511.5" ></text>
</g>
<g >
<title>ksys_read (15 samples, 0.01%)</title><rect x="30.5" y="437" width="0.1" height="15.0" fill="rgb(216,221,46)" rx="2" ry="2" />
<text  x="33.49" y="447.5" ></text>
</g>
<g >
<title>do_syscall_64 (14 samples, 0.01%)</title><rect x="1179.0" y="341" width="0.2" height="15.0" fill="rgb(206,48,27)" rx="2" ry="2" />
<text  x="1182.05" y="351.5" ></text>
</g>
<g >
<title>scsi_end_request (19 samples, 0.01%)</title><rect x="1174.1" y="309" width="0.1" height="15.0" fill="rgb(242,0,38)" rx="2" ry="2" />
<text  x="1177.06" y="319.5" ></text>
</g>
<g >
<title>__apic_accept_irq (27 samples, 0.02%)</title><rect x="40.1" y="309" width="0.2" height="15.0" fill="rgb(252,3,4)" rx="2" ry="2" />
<text  x="43.06" y="319.5" ></text>
</g>
<g >
<title>taskq_thread (12 samples, 0.01%)</title><rect x="40.9" y="469" width="0.1" height="15.0" fill="rgb(230,187,9)" rx="2" ry="2" />
<text  x="43.86" y="479.5" ></text>
</g>
<g >
<title>proc_single_show (15 samples, 0.01%)</title><rect x="1187.9" y="181" width="0.1" height="15.0" fill="rgb(244,124,35)" rx="2" ry="2" />
<text  x="1190.88" y="191.5" ></text>
</g>
<g >
<title>[zedbox] (40 samples, 0.03%)</title><rect x="1186.4" y="165" width="0.4" height="15.0" fill="rgb(240,212,22)" rx="2" ry="2" />
<text  x="1189.43" y="175.5" ></text>
</g>
<g >
<title>[zedbox] (34 samples, 0.03%)</title><rect x="1179.0" y="469" width="0.3" height="15.0" fill="rgb(215,142,52)" rx="2" ry="2" />
<text  x="1182.00" y="479.5" ></text>
</g>
<g >
<title>vmx_prepare_switch_to_guest (16 samples, 0.01%)</title><rect x="39.9" y="357" width="0.1" height="15.0" fill="rgb(208,130,0)" rx="2" ry="2" />
<text  x="42.90" y="367.5" ></text>
</g>
<g >
<title>zio_nowait (24 samples, 0.02%)</title><rect x="1178.4" y="405" width="0.2" height="15.0" fill="rgb(249,183,34)" rx="2" ry="2" />
<text  x="1181.43" y="415.5" ></text>
</g>
<g >
<title>kvm_irq_delivery_to_apic_fast (26 samples, 0.02%)</title><rect x="35.8" y="261" width="0.2" height="15.0" fill="rgb(219,186,31)" rx="2" ry="2" />
<text  x="38.76" y="271.5" ></text>
</g>
<g >
<title>kvm_irq_delivery_to_apic (26 samples, 0.02%)</title><rect x="35.8" y="277" width="0.2" height="15.0" fill="rgb(216,150,1)" rx="2" ry="2" />
<text  x="38.76" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (25 samples, 0.02%)</title><rect x="1187.4" y="245" width="0.2" height="15.0" fill="rgb(239,132,12)" rx="2" ry="2" />
<text  x="1190.36" y="255.5" ></text>
</g>
<g >
<title>runtime.systemstack (44 samples, 0.03%)</title><rect x="10.6" y="469" width="0.4" height="15.0" fill="rgb(233,139,0)" rx="2" ry="2" />
<text  x="13.57" y="479.5" ></text>
</g>
<g >
<title>do_syscall_64 (26 samples, 0.02%)</title><rect x="1187.1" y="213" width="0.3" height="15.0" fill="rgb(225,129,29)" rx="2" ry="2" />
<text  x="1190.12" y="223.5" ></text>
</g>
<g >
<title>[zedbox] (980 samples, 0.74%)</title><rect x="1180.8" y="421" width="8.8" height="15.0" fill="rgb(220,13,38)" rx="2" ry="2" />
<text  x="1183.79" y="431.5" ></text>
</g>
<g >
<title>lz4_compress_zfs (23 samples, 0.02%)</title><rect x="1178.7" y="405" width="0.2" height="15.0" fill="rgb(243,201,20)" rx="2" ry="2" />
<text  x="1181.69" y="415.5" ></text>
</g>
<g >
<title>[ld-musl-x86_64.so.1] (13 samples, 0.01%)</title><rect x="33.1" y="453" width="0.1" height="15.0" fill="rgb(249,34,18)" rx="2" ry="2" />
<text  x="36.08" y="463.5" ></text>
</g>
<g >
<title>run_timer_softirq (29 samples, 0.02%)</title><rect x="1173.5" y="341" width="0.3" height="15.0" fill="rgb(223,138,47)" rx="2" ry="2" />
<text  x="1176.52" y="351.5" ></text>
</g>
<g >
<title>dbuf_sync_list (16 samples, 0.01%)</title><rect x="17.8" y="421" width="0.1" height="15.0" fill="rgb(222,146,51)" rx="2" ry="2" />
<text  x="20.79" y="431.5" ></text>
</g>
<g >
<title>vmx_interrupt_allowed (63 samples, 0.05%)</title><rect x="38.5" y="309" width="0.5" height="15.0" fill="rgb(254,159,44)" rx="2" ry="2" />
<text  x="41.48" y="319.5" ></text>
</g>
<g >
<title>native_safe_halt (95,046 samples, 72.18%)</title><rect x="323.0" y="421" width="851.7" height="15.0" fill="rgb(237,112,0)" rx="2" ry="2" />
<text  x="325.95" y="431.5" >native_safe_halt</text>
</g>
<g >
<title>[zedbox] (371 samples, 0.28%)</title><rect x="1184.7" y="277" width="3.3" height="15.0" fill="rgb(227,210,39)" rx="2" ry="2" />
<text  x="1187.70" y="287.5" ></text>
</g>
<g >
<title>__sched_text_start (140 samples, 0.11%)</title><rect x="1175.0" y="421" width="1.2" height="15.0" fill="rgb(220,190,26)" rx="2" ry="2" />
<text  x="1177.96" y="431.5" ></text>
</g>
<g >
<title>do_syscall_64 (20 samples, 0.02%)</title><rect x="1188.0" y="261" width="0.2" height="15.0" fill="rgb(250,85,51)" rx="2" ry="2" />
<text  x="1191.03" y="271.5" ></text>
</g>
<g >
<title>[zedbox] (1,059 samples, 0.80%)</title><rect x="1180.1" y="469" width="9.5" height="15.0" fill="rgb(254,178,3)" rx="2" ry="2" />
<text  x="1183.10" y="479.5" ></text>
</g>
<g >
<title>kvm_vcpu_kick (24 samples, 0.02%)</title><rect x="35.8" y="229" width="0.2" height="15.0" fill="rgb(235,30,32)" rx="2" ry="2" />
<text  x="38.76" y="239.5" ></text>
</g>
<g >
<title>metaslab_alloc_dva (13 samples, 0.01%)</title><rect x="1178.0" y="405" width="0.2" height="15.0" fill="rgb(213,200,6)" rx="2" ry="2" />
<text  x="1181.04" y="415.5" ></text>
</g>
<g >
<title>containerd-shim (27 samples, 0.02%)</title><rect x="10.1" y="517" width="0.2" height="15.0" fill="rgb(220,223,18)" rx="2" ry="2" />
<text  x="13.06" y="527.5" ></text>
</g>
<g >
<title>wwan-init.sh (16 samples, 0.01%)</title><rect x="1176.5" y="517" width="0.2" height="15.0" fill="rgb(250,156,18)" rx="2" ry="2" />
<text  x="1179.55" y="527.5" ></text>
</g>
<g >
<title>runtime.scanobject (35 samples, 0.03%)</title><rect x="10.6" y="421" width="0.4" height="15.0" fill="rgb(234,114,32)" rx="2" ry="2" />
<text  x="13.65" y="431.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (12 samples, 0.01%)</title><rect x="322.4" y="437" width="0.1" height="15.0" fill="rgb(240,120,38)" rx="2" ry="2" />
<text  x="325.35" y="447.5" ></text>
</g>
<g >
<title>[unknown] (218 samples, 0.17%)</title><rect x="10.3" y="501" width="2.0" height="15.0" fill="rgb(254,158,36)" rx="2" ry="2" />
<text  x="13.30" y="511.5" ></text>
</g>
<g >
<title>kvm_vcpu_kick (27 samples, 0.02%)</title><rect x="40.1" y="293" width="0.2" height="15.0" fill="rgb(253,4,24)" rx="2" ry="2" />
<text  x="43.06" y="303.5" ></text>
</g>
<g >
<title>kvm_fetch_guest_virt (27 samples, 0.02%)</title><rect x="36.5" y="277" width="0.3" height="15.0" fill="rgb(244,12,26)" rx="2" ry="2" />
<text  x="39.53" y="287.5" ></text>
</g>
<g >
<title>irq_exit (88 samples, 0.07%)</title><rect x="1173.9" y="373" width="0.8" height="15.0" fill="rgb(233,52,31)" rx="2" ry="2" />
<text  x="1176.91" y="383.5" ></text>
</g>
<g >
<title>futex_wait (43 samples, 0.03%)</title><rect x="22.3" y="421" width="0.4" height="15.0" fill="rgb(238,193,11)" rx="2" ry="2" />
<text  x="25.35" y="431.5" ></text>
</g>
<g >
<title>path_lookupat.isra.37 (17 samples, 0.01%)</title><rect x="30.1" y="389" width="0.1" height="15.0" fill="rgb(233,51,14)" rx="2" ry="2" />
<text  x="33.07" y="399.5" ></text>
</g>
<g >
<title>do_syscall_64 (14 samples, 0.01%)</title><rect x="1189.4" y="373" width="0.1" height="15.0" fill="rgb(223,41,51)" rx="2" ry="2" />
<text  x="1192.35" y="383.5" ></text>
</g>
<g >
<title>do_syscall_64 (29 samples, 0.02%)</title><rect x="1188.9" y="341" width="0.3" height="15.0" fill="rgb(242,216,47)" rx="2" ry="2" />
<text  x="1191.92" y="351.5" ></text>
</g>
<g >
<title>archive/tar.(*Reader).Read (281 samples, 0.21%)</title><rect x="12.9" y="213" width="2.5" height="15.0" fill="rgb(226,34,51)" rx="2" ry="2" />
<text  x="15.89" y="223.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (61 samples, 0.05%)</title><rect x="28.1" y="389" width="0.5" height="15.0" fill="rgb(224,138,7)" rx="2" ry="2" />
<text  x="31.09" y="399.5" ></text>
</g>
<g >
<title>do_syscall_64 (15 samples, 0.01%)</title><rect x="1179.2" y="373" width="0.1" height="15.0" fill="rgb(249,7,14)" rx="2" ry="2" />
<text  x="1182.17" y="383.5" ></text>
</g>
<g >
<title>do_syscall_64 (14 samples, 0.01%)</title><rect x="1188.2" y="277" width="0.1" height="15.0" fill="rgb(211,220,8)" rx="2" ry="2" />
<text  x="1191.22" y="287.5" ></text>
</g>
<g >
<title>dnode_sync (25 samples, 0.02%)</title><rect x="17.8" y="437" width="0.2" height="15.0" fill="rgb(208,188,5)" rx="2" ry="2" />
<text  x="20.75" y="447.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (22 samples, 0.02%)</title><rect x="15.4" y="165" width="0.2" height="15.0" fill="rgb(206,51,18)" rx="2" ry="2" />
<text  x="18.42" y="175.5" ></text>
</g>
<g >
<title>do_syscall_64 (47 samples, 0.04%)</title><rect x="1187.6" y="245" width="0.4" height="15.0" fill="rgb(209,225,37)" rx="2" ry="2" />
<text  x="1190.59" y="255.5" ></text>
</g>
<g >
<title>__fget_light (101 samples, 0.08%)</title><rect x="25.2" y="405" width="0.9" height="15.0" fill="rgb(221,92,29)" rx="2" ry="2" />
<text  x="28.21" y="415.5" ></text>
</g>
<g >
<title>cpu_startup_entry (31,446 samples, 23.88%)</title><rect x="41.1" y="469" width="281.8" height="15.0" fill="rgb(210,56,1)" rx="2" ry="2" />
<text  x="44.12" y="479.5" >cpu_startup_entry</text>
</g>
<g >
<title>abd_iterate_func (14 samples, 0.01%)</title><rect x="1178.2" y="389" width="0.1" height="15.0" fill="rgb(239,92,29)" rx="2" ry="2" />
<text  x="1181.15" y="399.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (12 samples, 0.01%)</title><rect x="1177.1" y="389" width="0.1" height="15.0" fill="rgb(251,11,46)" rx="2" ry="2" />
<text  x="1180.11" y="399.5" ></text>
</g>
<g >
<title>zfs_write (15 samples, 0.01%)</title><rect x="22.8" y="357" width="0.1" height="15.0" fill="rgb(226,209,28)" rx="2" ry="2" />
<text  x="25.78" y="367.5" ></text>
</g>
<g >
<title>finish_task_switch (42 samples, 0.03%)</title><rect x="322.5" y="405" width="0.4" height="15.0" fill="rgb(218,219,0)" rx="2" ry="2" />
<text  x="325.52" y="415.5" ></text>
</g>
<g >
<title>update_blocked_averages (35 samples, 0.03%)</title><rect x="1173.2" y="325" width="0.3" height="15.0" fill="rgb(235,153,39)" rx="2" ry="2" />
<text  x="1176.21" y="335.5" ></text>
</g>
<g >
<title>read_tsc (30 samples, 0.02%)</title><rect x="37.0" y="309" width="0.3" height="15.0" fill="rgb(251,45,53)" rx="2" ry="2" />
<text  x="40.01" y="319.5" ></text>
</g>
<g >
<title>archive/tar.(*Reader).readHeader (12 samples, 0.01%)</title><rect x="12.7" y="213" width="0.1" height="15.0" fill="rgb(244,212,36)" rx="2" ry="2" />
<text  x="15.67" y="223.5" ></text>
</g>
<g >
<title>[containerd-shim] (12 samples, 0.01%)</title><rect x="10.1" y="485" width="0.1" height="15.0" fill="rgb(210,149,6)" rx="2" ry="2" />
<text  x="13.06" y="495.5" ></text>
</g>
<g >
<title>ksys_write (15 samples, 0.01%)</title><rect x="1189.1" y="325" width="0.1" height="15.0" fill="rgb(252,90,44)" rx="2" ry="2" />
<text  x="1192.05" y="335.5" ></text>
</g>
<g >
<title>vdev_queue_io_done (56 samples, 0.04%)</title><rect x="1177.2" y="421" width="0.5" height="15.0" fill="rgb(209,100,22)" rx="2" ry="2" />
<text  x="1180.25" y="431.5" ></text>
</g>
<g >
<title>zio_nowait (14 samples, 0.01%)</title><rect x="1177.6" y="405" width="0.1" height="15.0" fill="rgb(217,63,28)" rx="2" ry="2" />
<text  x="1180.62" y="415.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (19 samples, 0.01%)</title><rect x="20.3" y="341" width="0.2" height="15.0" fill="rgb(252,111,52)" rx="2" ry="2" />
<text  x="23.29" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (20 samples, 0.02%)</title><rect x="1188.5" y="325" width="0.2" height="15.0" fill="rgb(214,138,44)" rx="2" ry="2" />
<text  x="1191.53" y="335.5" ></text>
</g>
<g >
<title>arc_write_ready (19 samples, 0.01%)</title><rect x="1178.2" y="421" width="0.1" height="15.0" fill="rgb(205,4,15)" rx="2" ry="2" />
<text  x="1181.15" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.01%)</title><rect x="21.0" y="437" width="0.1" height="15.0" fill="rgb(220,61,46)" rx="2" ry="2" />
<text  x="24.01" y="447.5" ></text>
</g>
<g >
<title>schedule (42 samples, 0.03%)</title><rect x="39.2" y="341" width="0.4" height="15.0" fill="rgb(248,136,23)" rx="2" ry="2" />
<text  x="42.20" y="351.5" ></text>
</g>
<g >
<title>[zedbox] (804 samples, 0.61%)</title><rect x="1182.0" y="373" width="7.2" height="15.0" fill="rgb(244,229,40)" rx="2" ry="2" />
<text  x="1184.99" y="383.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker.func2 (44 samples, 0.03%)</title><rect x="10.6" y="453" width="0.4" height="15.0" fill="rgb(240,120,2)" rx="2" ry="2" />
<text  x="13.57" y="463.5" ></text>
</g>
<g >
<title>secondary_startup_64 (126,666 samples, 96.20%)</title><rect x="41.1" y="501" width="1135.1" height="15.0" fill="rgb(244,115,40)" rx="2" ry="2" />
<text  x="44.12" y="511.5" >secondary_startup_64</text>
</g>
<g >
<title>virtnet_poll (21 samples, 0.02%)</title><rect x="20.3" y="405" width="0.2" height="15.0" fill="rgb(229,86,16)" rx="2" ry="2" />
<text  x="23.29" y="415.5" ></text>
</g>
<g >
<title>__raw_spin_unlock_irq (140 samples, 0.11%)</title><rect x="1175.0" y="389" width="1.2" height="15.0" fill="rgb(206,163,3)" rx="2" ry="2" />
<text  x="1177.96" y="399.5" ></text>
</g>
<g >
<title>scsi_io_completion (19 samples, 0.01%)</title><rect x="1174.1" y="325" width="0.1" height="15.0" fill="rgb(240,126,25)" rx="2" ry="2" />
<text  x="1177.06" y="335.5" ></text>
</g>
<g >
<title>finish_task_switch (140 samples, 0.11%)</title><rect x="1175.0" y="405" width="1.2" height="15.0" fill="rgb(243,88,11)" rx="2" ry="2" />
<text  x="1177.96" y="415.5" ></text>
</g>
<g >
<title>[newlogd] (39 samples, 0.03%)</title><rect x="21.3" y="501" width="0.3" height="15.0" fill="rgb(237,38,37)" rx="2" ry="2" />
<text  x="24.26" y="511.5" ></text>
</g>
<g >
<title>do_futex (44 samples, 0.03%)</title><rect x="22.3" y="437" width="0.4" height="15.0" fill="rgb(224,169,43)" rx="2" ry="2" />
<text  x="25.34" y="447.5" ></text>
</g>
<g >
<title>vmx_set_msr (35 samples, 0.03%)</title><rect x="35.7" y="325" width="0.3" height="15.0" fill="rgb(247,121,15)" rx="2" ry="2" />
<text  x="38.73" y="335.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (22 samples, 0.02%)</title><rect x="29.0" y="309" width="0.2" height="15.0" fill="rgb(232,179,48)" rx="2" ry="2" />
<text  x="32.00" y="319.5" ></text>
</g>
<g >
<title>kvm_emulate_wrmsr (36 samples, 0.03%)</title><rect x="35.7" y="357" width="0.4" height="15.0" fill="rgb(232,72,39)" rx="2" ry="2" />
<text  x="38.73" y="367.5" ></text>
</g>
<g >
<title>[unknown] (25 samples, 0.02%)</title><rect x="33.1" y="469" width="0.2" height="15.0" fill="rgb(242,221,38)" rx="2" ry="2" />
<text  x="36.08" y="479.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (779 samples, 0.59%)</title><rect x="24.4" y="469" width="6.9" height="15.0" fill="rgb(229,63,35)" rx="2" ry="2" />
<text  x="27.36" y="479.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive.createTarFile (373 samples, 0.28%)</title><rect x="12.8" y="245" width="3.4" height="15.0" fill="rgb(214,126,34)" rx="2" ry="2" />
<text  x="15.81" y="255.5" ></text>
</g>
<g >
<title>napi_gro_receive (19 samples, 0.01%)</title><rect x="20.3" y="373" width="0.2" height="15.0" fill="rgb(246,201,48)" rx="2" ry="2" />
<text  x="23.29" y="383.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (21 samples, 0.02%)</title><rect x="17.5" y="453" width="0.2" height="15.0" fill="rgb(246,16,35)" rx="2" ry="2" />
<text  x="20.47" y="463.5" ></text>
</g>
<g >
<title>__srcu_read_lock (23 samples, 0.02%)</title><rect x="37.4" y="325" width="0.2" height="15.0" fill="rgb(207,201,30)" rx="2" ry="2" />
<text  x="40.36" y="335.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/services/diff.(*local).Apply (426 samples, 0.32%)</title><rect x="12.7" y="373" width="3.8" height="15.0" fill="rgb(248,13,33)" rx="2" ry="2" />
<text  x="15.67" y="383.5" ></text>
</g>
<g >
<title>poll_schedule_timeout.constprop.9 (30 samples, 0.02%)</title><rect x="28.9" y="405" width="0.3" height="15.0" fill="rgb(213,222,47)" rx="2" ry="2" />
<text  x="31.93" y="415.5" ></text>
</g>
<g >
<title>do_syscall_64 (65 samples, 0.05%)</title><rect x="22.3" y="469" width="0.6" height="15.0" fill="rgb(252,51,40)" rx="2" ry="2" />
<text  x="25.34" y="479.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.01%)</title><rect x="1187.0" y="213" width="0.1" height="15.0" fill="rgb(230,26,31)" rx="2" ry="2" />
<text  x="1189.96" y="223.5" ></text>
</g>
<g >
<title>reschedule_interrupt (15 samples, 0.01%)</title><rect x="1173.8" y="405" width="0.1" height="15.0" fill="rgb(236,197,1)" rx="2" ry="2" />
<text  x="1176.78" y="415.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (49 samples, 0.04%)</title><rect x="1187.6" y="261" width="0.4" height="15.0" fill="rgb(211,29,40)" rx="2" ry="2" />
<text  x="1190.59" y="271.5" ></text>
</g>
<g >
<title>zio_dva_allocate (13 samples, 0.01%)</title><rect x="1178.0" y="437" width="0.2" height="15.0" fill="rgb(213,36,26)" rx="2" ry="2" />
<text  x="1181.04" y="447.5" ></text>
</g>
<g >
<title>zio_vdev_io_start (28 samples, 0.02%)</title><rect x="1178.4" y="437" width="0.3" height="15.0" fill="rgb(254,222,41)" rx="2" ry="2" />
<text  x="1181.41" y="447.5" ></text>
</g>
<g >
<title>[memlogd] (19 samples, 0.01%)</title><rect x="21.0" y="453" width="0.1" height="15.0" fill="rgb(222,86,48)" rx="2" ry="2" />
<text  x="23.98" y="463.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive.applyNaive (416 samples, 0.32%)</title><rect x="12.7" y="261" width="3.7" height="15.0" fill="rgb(216,212,46)" rx="2" ry="2" />
<text  x="15.67" y="271.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (33 samples, 0.03%)</title><rect x="17.4" y="485" width="0.3" height="15.0" fill="rgb(224,4,16)" rx="2" ry="2" />
<text  x="20.37" y="495.5" ></text>
</g>
<g >
<title>[zedbox] (856 samples, 0.65%)</title><rect x="1181.7" y="389" width="7.7" height="15.0" fill="rgb(230,64,9)" rx="2" ry="2" />
<text  x="1184.68" y="399.5" ></text>
</g>
<g >
<title>kthread (22 samples, 0.02%)</title><rect x="20.3" y="485" width="0.2" height="15.0" fill="rgb(233,107,34)" rx="2" ry="2" />
<text  x="23.29" y="495.5" ></text>
</g>
<g >
<title>[zedbox] (57 samples, 0.04%)</title><rect x="1186.3" y="181" width="0.5" height="15.0" fill="rgb(224,14,28)" rx="2" ry="2" />
<text  x="1189.32" y="191.5" ></text>
</g>
<g >
<title>eventfd_poll (171 samples, 0.13%)</title><rect x="26.2" y="405" width="1.6" height="15.0" fill="rgb(237,195,36)" rx="2" ry="2" />
<text  x="29.22" y="415.5" ></text>
</g>
<g >
<title>vfs_read (18 samples, 0.01%)</title><rect x="1187.8" y="213" width="0.2" height="15.0" fill="rgb(206,55,24)" rx="2" ry="2" />
<text  x="1190.85" y="223.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (21 samples, 0.02%)</title><rect x="322.1" y="357" width="0.2" height="15.0" fill="rgb(208,192,43)" rx="2" ry="2" />
<text  x="325.11" y="367.5" ></text>
</g>
<g >
<title>zpl_iter_write (16 samples, 0.01%)</title><rect x="22.8" y="389" width="0.1" height="15.0" fill="rgb(226,135,0)" rx="2" ry="2" />
<text  x="25.77" y="399.5" ></text>
</g>
<g >
<title>do_syscall_64 (24 samples, 0.02%)</title><rect x="1187.4" y="229" width="0.2" height="15.0" fill="rgb(219,44,53)" rx="2" ry="2" />
<text  x="1190.36" y="239.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.01%)</title><rect x="33.1" y="437" width="0.1" height="15.0" fill="rgb(234,143,1)" rx="2" ry="2" />
<text  x="36.08" y="447.5" ></text>
</g>
<g >
<title>runtime.goexit (489 samples, 0.37%)</title><rect x="12.3" y="501" width="4.4" height="15.0" fill="rgb(234,58,13)" rx="2" ry="2" />
<text  x="15.28" y="511.5" ></text>
</g>
<g >
<title>[unknown] (1,221 samples, 0.93%)</title><rect x="23.5" y="501" width="11.0" height="15.0" fill="rgb(250,200,33)" rx="2" ry="2" />
<text  x="26.54" y="511.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (32 samples, 0.02%)</title><rect x="1173.2" y="309" width="0.3" height="15.0" fill="rgb(252,111,18)" rx="2" ry="2" />
<text  x="1176.22" y="319.5" ></text>
</g>
<g >
<title>kvm_apic_has_interrupt (32 samples, 0.02%)</title><rect x="38.0" y="293" width="0.3" height="15.0" fill="rgb(223,105,44)" rx="2" ry="2" />
<text  x="40.97" y="303.5" ></text>
</g>
<g >
<title>__do_sys_newfstatat (22 samples, 0.02%)</title><rect x="33.3" y="421" width="0.2" height="15.0" fill="rgb(248,37,37)" rx="2" ry="2" />
<text  x="36.32" y="431.5" ></text>
</g>
<g >
<title>do_syscall_64 (18 samples, 0.01%)</title><rect x="15.8" y="149" width="0.1" height="15.0" fill="rgb(244,162,21)" rx="2" ry="2" />
<text  x="18.75" y="159.5" ></text>
</g>
<g >
<title>ksys_write (22 samples, 0.02%)</title><rect x="15.4" y="133" width="0.2" height="15.0" fill="rgb(216,190,31)" rx="2" ry="2" />
<text  x="18.42" y="143.5" ></text>
</g>
<g >
<title>kthread (26 samples, 0.02%)</title><rect x="1176.3" y="485" width="0.2" height="15.0" fill="rgb(248,87,32)" rx="2" ry="2" />
<text  x="1179.25" y="495.5" ></text>
</g>
<g >
<title>os.Lstat (13 samples, 0.01%)</title><rect x="16.3" y="245" width="0.1" height="15.0" fill="rgb(220,58,25)" rx="2" ry="2" />
<text  x="19.28" y="255.5" ></text>
</g>
<g >
<title>taskq_thread (13 samples, 0.01%)</title><rect x="1177.7" y="469" width="0.2" height="15.0" fill="rgb(217,70,34)" rx="2" ry="2" />
<text  x="1180.75" y="479.5" ></text>
</g>
<g >
<title>qemu-system-x86 (2,088 samples, 1.59%)</title><rect x="22.0" y="517" width="18.7" height="15.0" fill="rgb(215,8,3)" rx="2" ry="2" />
<text  x="24.95" y="527.5" ></text>
</g>
<g >
<title>[unknown] (22 samples, 0.02%)</title><rect x="1189.7" y="501" width="0.2" height="15.0" fill="rgb(245,216,34)" rx="2" ry="2" />
<text  x="1192.70" y="511.5" ></text>
</g>
<g >
<title>kthread (114 samples, 0.09%)</title><rect x="1177.9" y="485" width="1.0" height="15.0" fill="rgb(240,95,0)" rx="2" ry="2" />
<text  x="1180.88" y="495.5" ></text>
</g>
<g >
<title>kvm_arch_vcpu_load (26 samples, 0.02%)</title><rect x="39.3" y="293" width="0.3" height="15.0" fill="rgb(235,130,49)" rx="2" ry="2" />
<text  x="42.33" y="303.5" ></text>
</g>
<g >
<title>[newlogd] (39 samples, 0.03%)</title><rect x="21.3" y="485" width="0.3" height="15.0" fill="rgb(230,9,39)" rx="2" ry="2" />
<text  x="24.26" y="495.5" ></text>
</g>
<g >
<title>io.(*teeReader).Read (280 samples, 0.21%)</title><rect x="12.9" y="165" width="2.5" height="15.0" fill="rgb(205,187,7)" rx="2" ry="2" />
<text  x="15.89" y="175.5" ></text>
</g>
<g >
<title>kvm_irq_delivery_to_apic (31 samples, 0.02%)</title><rect x="40.0" y="341" width="0.3" height="15.0" fill="rgb(254,111,15)" rx="2" ry="2" />
<text  x="43.05" y="351.5" ></text>
</g>
<g >
<title>runtime.gcDrain (43 samples, 0.03%)</title><rect x="10.6" y="437" width="0.4" height="15.0" fill="rgb(250,135,53)" rx="2" ry="2" />
<text  x="13.57" y="447.5" ></text>
</g>
<g >
<title>archive/tar.(*Reader).next (13 samples, 0.01%)</title><rect x="12.7" y="229" width="0.1" height="15.0" fill="rgb(247,207,2)" rx="2" ry="2" />
<text  x="15.67" y="239.5" ></text>
</g>
<g >
<title>fput_many (30 samples, 0.02%)</title><rect x="27.8" y="405" width="0.2" height="15.0" fill="rgb(230,1,44)" rx="2" ry="2" />
<text  x="30.78" y="415.5" ></text>
</g>
<g >
<title>[ld-musl-x86_64.so.1] (105 samples, 0.08%)</title><rect x="16.7" y="501" width="1.0" height="15.0" fill="rgb(220,207,2)" rx="2" ry="2" />
<text  x="19.72" y="511.5" ></text>
</g>
<g >
<title>sem_post (61 samples, 0.05%)</title><rect x="33.9" y="485" width="0.5" height="15.0" fill="rgb(227,44,20)" rx="2" ry="2" />
<text  x="36.89" y="495.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (51 samples, 0.04%)</title><rect x="34.0" y="357" width="0.4" height="15.0" fill="rgb(248,29,28)" rx="2" ry="2" />
<text  x="36.97" y="367.5" ></text>
</g>
<g >
<title>kvm_mmu_page_fault (13 samples, 0.01%)</title><rect x="36.3" y="357" width="0.1" height="15.0" fill="rgb(205,178,27)" rx="2" ry="2" />
<text  x="39.27" y="367.5" ></text>
</g>
<g >
<title>__do_sys_nanosleep (13 samples, 0.01%)</title><rect x="1179.2" y="357" width="0.1" height="15.0" fill="rgb(244,64,47)" rx="2" ry="2" />
<text  x="1182.17" y="367.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (638 samples, 0.48%)</title><rect x="34.7" y="485" width="5.7" height="15.0" fill="rgb(237,223,23)" rx="2" ry="2" />
<text  x="37.69" y="495.5" ></text>
</g>
<g >
<title>kvm_arch_vcpu_runnable (141 samples, 0.11%)</title><rect x="37.8" y="325" width="1.2" height="15.0" fill="rgb(209,217,38)" rx="2" ry="2" />
<text  x="40.78" y="335.5" ></text>
</g>
<g >
<title>kvm_io_bus_write (55 samples, 0.04%)</title><rect x="35.0" y="341" width="0.5" height="15.0" fill="rgb(231,155,22)" rx="2" ry="2" />
<text  x="37.99" y="351.5" ></text>
</g>
<g >
<title>vmx_vcpu_load (25 samples, 0.02%)</title><rect x="39.3" y="277" width="0.3" height="15.0" fill="rgb(224,208,54)" rx="2" ry="2" />
<text  x="42.34" y="287.5" ></text>
</g>
<g >
<title>[zedbox] (111 samples, 0.08%)</title><rect x="1186.0" y="213" width="1.0" height="15.0" fill="rgb(228,191,45)" rx="2" ry="2" />
<text  x="1188.97" y="223.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/mount.WithTempMount (426 samples, 0.32%)</title><rect x="12.7" y="309" width="3.8" height="15.0" fill="rgb(210,56,33)" rx="2" ry="2" />
<text  x="15.67" y="319.5" ></text>
</g>
<g >
<title>dp_sync_taskq (37 samples, 0.03%)</title><rect x="17.7" y="517" width="0.3" height="15.0" fill="rgb(250,188,54)" rx="2" ry="2" />
<text  x="20.72" y="527.5" ></text>
</g>
<g >
<title>ret_from_fork (115 samples, 0.09%)</title><rect x="1176.7" y="501" width="1.0" height="15.0" fill="rgb(223,136,51)" rx="2" ry="2" />
<text  x="1179.72" y="511.5" ></text>
</g>
<g >
<title>do_syscall_64 (18 samples, 0.01%)</title><rect x="1188.4" y="293" width="0.1" height="15.0" fill="rgb(212,130,31)" rx="2" ry="2" />
<text  x="1191.36" y="303.5" ></text>
</g>
<g >
<title>[newlogd] (39 samples, 0.03%)</title><rect x="21.3" y="437" width="0.3" height="15.0" fill="rgb(214,181,29)" rx="2" ry="2" />
<text  x="24.26" y="447.5" ></text>
</g>
<g >
<title>qemu-img (12 samples, 0.01%)</title><rect x="21.8" y="517" width="0.2" height="15.0" fill="rgb(243,105,51)" rx="2" ry="2" />
<text  x="24.85" y="527.5" ></text>
</g>
<g >
<title>apic_has_pending_timer (15 samples, 0.01%)</title><rect x="37.6" y="325" width="0.2" height="15.0" fill="rgb(246,66,42)" rx="2" ry="2" />
<text  x="40.65" y="335.5" ></text>
</g>
<g >
<title>paravirt_read_msr (21 samples, 0.02%)</title><rect x="39.3" y="261" width="0.2" height="15.0" fill="rgb(209,212,27)" rx="2" ry="2" />
<text  x="42.35" y="271.5" ></text>
</g>
<g >
<title>vdev_disk_dio_put (15 samples, 0.01%)</title><rect x="1174.1" y="277" width="0.1" height="15.0" fill="rgb(230,43,23)" rx="2" ry="2" />
<text  x="1177.08" y="287.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (116 samples, 0.09%)</title><rect x="1172.7" y="405" width="1.1" height="15.0" fill="rgb(219,95,19)" rx="2" ry="2" />
<text  x="1175.74" y="415.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (60 samples, 0.05%)</title><rect x="28.1" y="373" width="0.5" height="15.0" fill="rgb(250,13,4)" rx="2" ry="2" />
<text  x="31.10" y="383.5" ></text>
</g>
</g>
</svg>
