<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="566" onload="init(evt)" viewBox="0 0 1200 566" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="566.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="549" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="549" > </text>
<g id="frames">
<g >
<title>blk_flush_plug_list (17 samples, 0.01%)</title><rect x="18.9" y="405" width="0.1" height="15.0" fill="rgb(243,157,11)" rx="2" ry="2" />
<text  x="21.88" y="415.5" ></text>
</g>
<g >
<title>[unknown] (16 samples, 0.01%)</title><rect x="22.3" y="469" width="0.1" height="15.0" fill="rgb(253,4,49)" rx="2" ry="2" />
<text  x="25.28" y="479.5" ></text>
</g>
<g >
<title>cpu_startup_entry (98,707 samples, 72.65%)</title><rect x="323.4" y="453" width="857.2" height="15.0" fill="rgb(242,58,16)" rx="2" ry="2" />
<text  x="326.38" y="463.5" >cpu_startup_entry</text>
</g>
<g >
<title>kvm_vcpu_wake_up (12 samples, 0.01%)</title><rect x="35.1" y="197" width="0.1" height="15.0" fill="rgb(218,196,18)" rx="2" ry="2" />
<text  x="38.09" y="207.5" ></text>
</g>
<g >
<title>blk_mq_run_hw_queue (23 samples, 0.02%)</title><rect x="21.7" y="389" width="0.2" height="15.0" fill="rgb(228,22,51)" rx="2" ry="2" />
<text  x="24.66" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (764 samples, 0.56%)</title><rect x="34.2" y="469" width="6.6" height="15.0" fill="rgb(210,48,6)" rx="2" ry="2" />
<text  x="37.21" y="479.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).huffmanBlock (28 samples, 0.02%)</title><rect x="16.3" y="53" width="0.2" height="15.0" fill="rgb(221,109,49)" rx="2" ry="2" />
<text  x="19.28" y="63.5" ></text>
</g>
<g >
<title>ksys_read (14 samples, 0.01%)</title><rect x="1188.5" y="213" width="0.1" height="15.0" fill="rgb(250,212,5)" rx="2" ry="2" />
<text  x="1191.49" y="223.5" ></text>
</g>
<g >
<title>[newlogd] (36 samples, 0.03%)</title><rect x="22.5" y="485" width="0.3" height="15.0" fill="rgb(241,163,19)" rx="2" ry="2" />
<text  x="25.51" y="495.5" ></text>
</g>
<g >
<title>__sched_text_start (121 samples, 0.09%)</title><rect x="1179.5" y="405" width="1.1" height="15.0" fill="rgb(253,47,17)" rx="2" ry="2" />
<text  x="1182.54" y="415.5" ></text>
</g>
<g >
<title>do_futex (52 samples, 0.04%)</title><rect x="33.6" y="405" width="0.4" height="15.0" fill="rgb(248,140,6)" rx="2" ry="2" />
<text  x="36.56" y="415.5" ></text>
</g>
<g >
<title>poll_schedule_timeout.constprop.9 (32 samples, 0.02%)</title><rect x="29.6" y="389" width="0.2" height="15.0" fill="rgb(251,229,3)" rx="2" ry="2" />
<text  x="32.56" y="399.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).Read (74 samples, 0.05%)</title><rect x="15.9" y="85" width="0.7" height="15.0" fill="rgb(208,166,24)" rx="2" ry="2" />
<text  x="18.94" y="95.5" ></text>
</g>
<g >
<title>[newlogd] (35 samples, 0.03%)</title><rect x="22.5" y="437" width="0.3" height="15.0" fill="rgb(236,61,8)" rx="2" ry="2" />
<text  x="25.52" y="447.5" ></text>
</g>
<g >
<title>do_syscall_64 (12 samples, 0.01%)</title><rect x="1189.1" y="293" width="0.1" height="15.0" fill="rgb(206,88,24)" rx="2" ry="2" />
<text  x="1192.10" y="303.5" ></text>
</g>
<g >
<title>[zedbox] (900 samples, 0.66%)</title><rect x="1182.1" y="469" width="7.9" height="15.0" fill="rgb(221,21,44)" rx="2" ry="2" />
<text  x="1185.14" y="479.5" ></text>
</g>
<g >
<title>eventfd_signal (52 samples, 0.04%)</title><rect x="34.4" y="277" width="0.5" height="15.0" fill="rgb(235,225,44)" rx="2" ry="2" />
<text  x="37.40" y="287.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rax (12 samples, 0.01%)</title><rect x="34.1" y="469" width="0.1" height="15.0" fill="rgb(247,162,16)" rx="2" ry="2" />
<text  x="37.11" y="479.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/github.com/containerd/continuity/fs.walkLinks (12 samples, 0.01%)</title><rect x="15.7" y="181" width="0.1" height="15.0" fill="rgb(216,27,15)" rx="2" ry="2" />
<text  x="18.72" y="191.5" ></text>
</g>
<g >
<title>worker_thread (13 samples, 0.01%)</title><rect x="22.0" y="453" width="0.1" height="15.0" fill="rgb(212,206,42)" rx="2" ry="2" />
<text  x="24.98" y="463.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/diff.(*compressedProcessor).Read (203 samples, 0.15%)</title><rect x="13.4" y="165" width="1.8" height="15.0" fill="rgb(210,49,40)" rx="2" ry="2" />
<text  x="16.39" y="175.5" ></text>
</g>
<g >
<title>[unknown] (39 samples, 0.03%)</title><rect x="10.1" y="469" width="0.4" height="15.0" fill="rgb(218,222,50)" rx="2" ry="2" />
<text  x="13.12" y="479.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (49 samples, 0.04%)</title><rect x="28.9" y="357" width="0.4" height="15.0" fill="rgb(222,9,1)" rx="2" ry="2" />
<text  x="31.87" y="367.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (53 samples, 0.04%)</title><rect x="28.8" y="373" width="0.5" height="15.0" fill="rgb(230,19,15)" rx="2" ry="2" />
<text  x="31.84" y="383.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/github.com/containerd/continuity/fs.walkLinks (14 samples, 0.01%)</title><rect x="15.7" y="229" width="0.1" height="15.0" fill="rgb(252,71,46)" rx="2" ry="2" />
<text  x="18.71" y="239.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).huffSym (20 samples, 0.01%)</title><rect x="16.0" y="53" width="0.2" height="15.0" fill="rgb(208,56,25)" rx="2" ry="2" />
<text  x="19.04" y="63.5" ></text>
</g>
<g >
<title>ip6tables (17 samples, 0.01%)</title><rect x="18.3" y="501" width="0.1" height="15.0" fill="rgb(216,34,44)" rx="2" ry="2" />
<text  x="21.29" y="511.5" ></text>
</g>
<g >
<title>[qemu-system-x86_64] (18 samples, 0.01%)</title><rect x="32.8" y="453" width="0.1" height="15.0" fill="rgb(214,185,46)" rx="2" ry="2" />
<text  x="35.77" y="463.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (19 samples, 0.01%)</title><rect x="23.7" y="341" width="0.2" height="15.0" fill="rgb(213,186,17)" rx="2" ry="2" />
<text  x="26.70" y="351.5" ></text>
</g>
<g >
<title>kvm_vm_ioctl (36 samples, 0.03%)</title><rect x="40.5" y="373" width="0.3" height="15.0" fill="rgb(218,14,34)" rx="2" ry="2" />
<text  x="43.47" y="383.5" ></text>
</g>
<g >
<title>[newlogd] (35 samples, 0.03%)</title><rect x="22.5" y="421" width="0.3" height="15.0" fill="rgb(228,188,42)" rx="2" ry="2" />
<text  x="25.52" y="431.5" ></text>
</g>
<g >
<title>__writeback_inodes_wb (12 samples, 0.01%)</title><rect x="22.0" y="389" width="0.1" height="15.0" fill="rgb(241,29,6)" rx="2" ry="2" />
<text  x="24.98" y="399.5" ></text>
</g>
<g >
<title>do_iter_write (19 samples, 0.01%)</title><rect x="23.7" y="357" width="0.2" height="15.0" fill="rgb(235,54,11)" rx="2" ry="2" />
<text  x="26.70" y="367.5" ></text>
</g>
<g >
<title>schedule_idle (47 samples, 0.03%)</title><rect x="323.0" y="421" width="0.4" height="15.0" fill="rgb(252,40,38)" rx="2" ry="2" />
<text  x="325.97" y="431.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/google.golang.org/grpc.(*Server).processStreamingRPC (27 samples, 0.02%)</title><rect x="13.0" y="437" width="0.2" height="15.0" fill="rgb(206,2,41)" rx="2" ry="2" />
<text  x="15.99" y="447.5" ></text>
</g>
<g >
<title>x86_emulate_instruction (39 samples, 0.03%)</title><rect x="35.5" y="309" width="0.3" height="15.0" fill="rgb(247,51,11)" rx="2" ry="2" />
<text  x="38.51" y="319.5" ></text>
</g>
<g >
<title>alloc_empty_file (13 samples, 0.01%)</title><rect x="30.5" y="373" width="0.1" height="15.0" fill="rgb(231,134,9)" rx="2" ry="2" />
<text  x="33.50" y="383.5" ></text>
</g>
<g >
<title>eventfd_poll (164 samples, 0.12%)</title><rect x="27.0" y="389" width="1.5" height="15.0" fill="rgb(226,130,46)" rx="2" ry="2" />
<text  x="30.04" y="399.5" ></text>
</g>
<g >
<title>[newlogd] (36 samples, 0.03%)</title><rect x="22.5" y="469" width="0.3" height="15.0" fill="rgb(252,21,29)" rx="2" ry="2" />
<text  x="25.51" y="479.5" ></text>
</g>
<g >
<title>do_syscall_64 (734 samples, 0.54%)</title><rect x="25.1" y="437" width="6.3" height="15.0" fill="rgb(232,72,47)" rx="2" ry="2" />
<text  x="28.07" y="447.5" ></text>
</g>
<g >
<title>[unknown] (16 samples, 0.01%)</title><rect x="22.8" y="485" width="0.2" height="15.0" fill="rgb(238,49,43)" rx="2" ry="2" />
<text  x="25.83" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (49 samples, 0.04%)</title><rect x="23.5" y="469" width="0.4" height="15.0" fill="rgb(240,7,52)" rx="2" ry="2" />
<text  x="26.46" y="479.5" ></text>
</g>
<g >
<title>[unknown] (16 samples, 0.01%)</title><rect x="22.3" y="485" width="0.1" height="15.0" fill="rgb(246,85,39)" rx="2" ry="2" />
<text  x="25.28" y="495.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (34 samples, 0.03%)</title><rect x="15.2" y="101" width="0.3" height="15.0" fill="rgb(209,213,4)" rx="2" ry="2" />
<text  x="18.17" y="111.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.01%)</title><rect x="1189.1" y="309" width="0.1" height="15.0" fill="rgb(210,46,22)" rx="2" ry="2" />
<text  x="1192.10" y="319.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (53 samples, 0.04%)</title><rect x="28.0" y="357" width="0.4" height="15.0" fill="rgb(216,108,41)" rx="2" ry="2" />
<text  x="30.95" y="367.5" ></text>
</g>
<g >
<title>blk_mq_requeue_work (23 samples, 0.02%)</title><rect x="21.7" y="421" width="0.2" height="15.0" fill="rgb(209,70,20)" rx="2" ry="2" />
<text  x="24.66" y="431.5" ></text>
</g>
<g >
<title>[unknown] (39 samples, 0.03%)</title><rect x="10.1" y="485" width="0.4" height="15.0" fill="rgb(223,97,11)" rx="2" ry="2" />
<text  x="13.12" y="495.5" ></text>
</g>
<g >
<title>[zedbox] (43 samples, 0.03%)</title><rect x="1180.9" y="389" width="0.4" height="15.0" fill="rgb(230,101,49)" rx="2" ry="2" />
<text  x="1183.94" y="399.5" ></text>
</g>
<g >
<title>start_kernel (32,481 samples, 23.91%)</title><rect x="41.3" y="469" width="282.1" height="15.0" fill="rgb(232,146,53)" rx="2" ry="2" />
<text  x="44.29" y="479.5" >start_kernel</text>
</g>
<g >
<title>ip_protocol_deliver_rcu (12 samples, 0.01%)</title><rect x="1178.9" y="213" width="0.1" height="15.0" fill="rgb(218,99,5)" rx="2" ry="2" />
<text  x="1181.94" y="223.5" ></text>
</g>
<g >
<title>runtime.scanobject (20 samples, 0.01%)</title><rect x="10.3" y="405" width="0.2" height="15.0" fill="rgb(228,13,33)" rx="2" ry="2" />
<text  x="13.29" y="415.5" ></text>
</g>
<g >
<title>path_lookupat.isra.37 (13 samples, 0.01%)</title><rect x="30.8" y="373" width="0.1" height="15.0" fill="rgb(215,216,34)" rx="2" ry="2" />
<text  x="33.76" y="383.5" ></text>
</g>
<g >
<title>do_pwritev (25 samples, 0.02%)</title><rect x="23.7" y="437" width="0.2" height="15.0" fill="rgb(242,8,8)" rx="2" ry="2" />
<text  x="26.67" y="447.5" ></text>
</g>
<g >
<title>blk_done_softirq (64 samples, 0.05%)</title><rect x="1178.2" y="325" width="0.6" height="15.0" fill="rgb(245,153,21)" rx="2" ry="2" />
<text  x="1181.24" y="335.5" ></text>
</g>
<g >
<title>do_IRQ (134 samples, 0.10%)</title><rect x="1178.0" y="373" width="1.2" height="15.0" fill="rgb(239,147,43)" rx="2" ry="2" />
<text  x="1181.03" y="383.5" ></text>
</g>
<g >
<title>ksys_ioctl (757 samples, 0.56%)</title><rect x="34.2" y="421" width="6.6" height="15.0" fill="rgb(229,4,16)" rx="2" ry="2" />
<text  x="37.21" y="431.5" ></text>
</g>
<g >
<title>__kvm_set_msr (20 samples, 0.01%)</title><rect x="35.0" y="325" width="0.2" height="15.0" fill="rgb(221,101,0)" rx="2" ry="2" />
<text  x="38.05" y="335.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/services/diff.(*local).Apply (443 samples, 0.33%)</title><rect x="13.2" y="357" width="3.9" height="15.0" fill="rgb(239,23,15)" rx="2" ry="2" />
<text  x="16.22" y="367.5" ></text>
</g>
<g >
<title>finish_task_switch (15 samples, 0.01%)</title><rect x="29.7" y="325" width="0.1" height="15.0" fill="rgb(245,174,6)" rx="2" ry="2" />
<text  x="32.71" y="335.5" ></text>
</g>
<g >
<title>[unknown] (45 samples, 0.03%)</title><rect x="1180.9" y="469" width="0.4" height="15.0" fill="rgb(218,141,38)" rx="2" ry="2" />
<text  x="1183.92" y="479.5" ></text>
</g>
<g >
<title>[zedbox] (73 samples, 0.05%)</title><rect x="1187.2" y="181" width="0.6" height="15.0" fill="rgb(207,67,54)" rx="2" ry="2" />
<text  x="1190.21" y="191.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (24 samples, 0.02%)</title><rect x="1178.0" y="325" width="0.2" height="15.0" fill="rgb(247,38,22)" rx="2" ry="2" />
<text  x="1181.03" y="335.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (29 samples, 0.02%)</title><rect x="1177.7" y="389" width="0.3" height="15.0" fill="rgb(222,20,28)" rx="2" ry="2" />
<text  x="1180.70" y="399.5" ></text>
</g>
<g >
<title>ktime_get (110 samples, 0.08%)</title><rect x="35.9" y="325" width="1.0" height="15.0" fill="rgb(254,204,8)" rx="2" ry="2" />
<text  x="38.91" y="335.5" ></text>
</g>
<g >
<title>kvm_apic_has_interrupt (33 samples, 0.02%)</title><rect x="38.0" y="277" width="0.3" height="15.0" fill="rgb(240,217,12)" rx="2" ry="2" />
<text  x="41.04" y="287.5" ></text>
</g>
<g >
<title>__srcu_read_lock (22 samples, 0.02%)</title><rect x="37.0" y="309" width="0.2" height="15.0" fill="rgb(224,161,30)" rx="2" ry="2" />
<text  x="39.98" y="319.5" ></text>
</g>
<g >
<title>kvm_io_bus_write (54 samples, 0.04%)</title><rect x="34.4" y="325" width="0.5" height="15.0" fill="rgb(211,226,50)" rx="2" ry="2" />
<text  x="37.40" y="335.5" ></text>
</g>
<g >
<title>kvm_arch_vcpu_runnable (256 samples, 0.19%)</title><rect x="37.5" y="309" width="2.2" height="15.0" fill="rgb(229,31,48)" rx="2" ry="2" />
<text  x="40.47" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (748 samples, 0.55%)</title><rect x="25.1" y="453" width="6.5" height="15.0" fill="rgb(238,31,49)" rx="2" ry="2" />
<text  x="28.07" y="463.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/diff/apply.(*readCounter).Read (204 samples, 0.15%)</title><rect x="13.4" y="197" width="1.8" height="15.0" fill="rgb(244,142,44)" rx="2" ry="2" />
<text  x="16.38" y="207.5" ></text>
</g>
<g >
<title>__kvm_io_bus_write (54 samples, 0.04%)</title><rect x="34.4" y="309" width="0.5" height="15.0" fill="rgb(210,178,19)" rx="2" ry="2" />
<text  x="37.40" y="319.5" ></text>
</g>
<g >
<title>sem_post (55 samples, 0.04%)</title><rect x="33.5" y="469" width="0.5" height="15.0" fill="rgb(225,215,29)" rx="2" ry="2" />
<text  x="36.54" y="479.5" ></text>
</g>
<g >
<title>blk_finish_plug (17 samples, 0.01%)</title><rect x="18.9" y="421" width="0.1" height="15.0" fill="rgb(249,174,3)" rx="2" ry="2" />
<text  x="21.88" y="431.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/api/services/diff/v1._Diff_Apply_Handler.func1 (443 samples, 0.33%)</title><rect x="13.2" y="389" width="3.9" height="15.0" fill="rgb(248,187,2)" rx="2" ry="2" />
<text  x="16.22" y="399.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (12 samples, 0.01%)</title><rect x="1181.2" y="325" width="0.1" height="15.0" fill="rgb(248,37,38)" rx="2" ry="2" />
<text  x="1184.21" y="335.5" ></text>
</g>
<g >
<title>runtime.greyobject (12 samples, 0.01%)</title><rect x="11.2" y="389" width="0.1" height="15.0" fill="rgb(217,163,21)" rx="2" ry="2" />
<text  x="14.16" y="399.5" ></text>
</g>
<g >
<title>scsi_queue_rq (13 samples, 0.01%)</title><rect x="18.9" y="261" width="0.1" height="15.0" fill="rgb(241,88,16)" rx="2" ry="2" />
<text  x="21.88" y="271.5" ></text>
</g>
<g >
<title>do_filp_open (47 samples, 0.03%)</title><rect x="30.5" y="405" width="0.4" height="15.0" fill="rgb(244,75,44)" rx="2" ry="2" />
<text  x="33.48" y="415.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker.func2 (23 samples, 0.02%)</title><rect x="10.3" y="437" width="0.2" height="15.0" fill="rgb(220,35,26)" rx="2" ry="2" />
<text  x="13.26" y="447.5" ></text>
</g>
<g >
<title>io.(*teeReader).Read (76 samples, 0.06%)</title><rect x="15.9" y="149" width="0.7" height="15.0" fill="rgb(232,8,31)" rx="2" ry="2" />
<text  x="18.93" y="159.5" ></text>
</g>
<g >
<title>blk_mq_do_dispatch_sched (14 samples, 0.01%)</title><rect x="18.9" y="293" width="0.1" height="15.0" fill="rgb(218,19,4)" rx="2" ry="2" />
<text  x="21.88" y="303.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/diff/apply.(*fsApplier).Apply (443 samples, 0.33%)</title><rect x="13.2" y="325" width="3.9" height="15.0" fill="rgb(245,217,45)" rx="2" ry="2" />
<text  x="16.22" y="335.5" ></text>
</g>
<g >
<title>blk_mq_sched_dispatch_requests (14 samples, 0.01%)</title><rect x="18.9" y="309" width="0.1" height="15.0" fill="rgb(206,49,29)" rx="2" ry="2" />
<text  x="21.88" y="319.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive.copyBuffered (88 samples, 0.06%)</title><rect x="15.9" y="213" width="0.8" height="15.0" fill="rgb(237,40,53)" rx="2" ry="2" />
<text  x="18.92" y="223.5" ></text>
</g>
<g >
<title>blk_mq_run_hw_queues (23 samples, 0.02%)</title><rect x="21.7" y="405" width="0.2" height="15.0" fill="rgb(239,0,47)" rx="2" ry="2" />
<text  x="24.66" y="415.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).Read (203 samples, 0.15%)</title><rect x="13.4" y="117" width="1.8" height="15.0" fill="rgb(248,216,53)" rx="2" ry="2" />
<text  x="16.39" y="127.5" ></text>
</g>
<g >
<title>__fcheck_files (25 samples, 0.02%)</title><rect x="26.7" y="357" width="0.3" height="15.0" fill="rgb(224,187,27)" rx="2" ry="2" />
<text  x="29.74" y="367.5" ></text>
</g>
<g >
<title>process_one_work (13 samples, 0.01%)</title><rect x="22.0" y="437" width="0.1" height="15.0" fill="rgb(205,42,30)" rx="2" ry="2" />
<text  x="24.98" y="447.5" ></text>
</g>
<g >
<title>worker_thread (28 samples, 0.02%)</title><rect x="21.6" y="453" width="0.3" height="15.0" fill="rgb(243,105,6)" rx="2" ry="2" />
<text  x="24.64" y="463.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive.applyNaive (139 samples, 0.10%)</title><rect x="15.9" y="245" width="1.2" height="15.0" fill="rgb(243,152,38)" rx="2" ry="2" />
<text  x="18.86" y="255.5" ></text>
</g>
<g >
<title>archive/tar.(*regFileReader).Read (204 samples, 0.15%)</title><rect x="13.4" y="213" width="1.8" height="15.0" fill="rgb(228,42,38)" rx="2" ry="2" />
<text  x="16.38" y="223.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (29 samples, 0.02%)</title><rect x="1177.7" y="341" width="0.3" height="15.0" fill="rgb(220,117,26)" rx="2" ry="2" />
<text  x="1180.70" y="351.5" ></text>
</g>
<g >
<title>run_ksoftirqd (14 samples, 0.01%)</title><rect x="21.2" y="437" width="0.2" height="15.0" fill="rgb(211,213,41)" rx="2" ry="2" />
<text  x="24.23" y="447.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (26 samples, 0.02%)</title><rect x="1189.4" y="341" width="0.2" height="15.0" fill="rgb(209,16,3)" rx="2" ry="2" />
<text  x="1192.40" y="351.5" ></text>
</g>
<g >
<title>task_work_run (13 samples, 0.01%)</title><rect x="31.5" y="421" width="0.1" height="15.0" fill="rgb(237,57,11)" rx="2" ry="2" />
<text  x="34.45" y="431.5" ></text>
</g>
<g >
<title>vmx_interrupt_allowed (120 samples, 0.09%)</title><rect x="38.7" y="293" width="1.0" height="15.0" fill="rgb(212,110,8)" rx="2" ry="2" />
<text  x="41.65" y="303.5" ></text>
</g>
<g >
<title>[newlogd] (16 samples, 0.01%)</title><rect x="22.8" y="405" width="0.2" height="15.0" fill="rgb(229,201,9)" rx="2" ry="2" />
<text  x="25.83" y="415.5" ></text>
</g>
<g >
<title>[zedbox] (45 samples, 0.03%)</title><rect x="1180.9" y="405" width="0.4" height="15.0" fill="rgb(236,14,51)" rx="2" ry="2" />
<text  x="1183.92" y="415.5" ></text>
</g>
<g >
<title>wake_up_q (47 samples, 0.03%)</title><rect x="33.6" y="373" width="0.4" height="15.0" fill="rgb(244,50,49)" rx="2" ry="2" />
<text  x="36.61" y="383.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (14 samples, 0.01%)</title><rect x="21.2" y="453" width="0.2" height="15.0" fill="rgb(230,173,5)" rx="2" ry="2" />
<text  x="24.23" y="463.5" ></text>
</g>
<g >
<title>kvm_lapic_reg_write (18 samples, 0.01%)</title><rect x="35.1" y="277" width="0.1" height="15.0" fill="rgb(253,217,3)" rx="2" ry="2" />
<text  x="38.06" y="287.5" ></text>
</g>
<g >
<title>start_secondary (98,707 samples, 72.65%)</title><rect x="323.4" y="469" width="857.2" height="15.0" fill="rgb(221,202,47)" rx="2" ry="2" />
<text  x="326.38" y="479.5" >start_secondary</text>
</g>
<g >
<title>jq (208 samples, 0.15%)</title><rect x="19.4" y="501" width="1.8" height="15.0" fill="rgb(235,111,33)" rx="2" ry="2" />
<text  x="22.40" y="511.5" ></text>
</g>
<g >
<title>[unknown] (139 samples, 0.10%)</title><rect x="1180.9" y="485" width="1.2" height="15.0" fill="rgb(219,180,43)" rx="2" ry="2" />
<text  x="1183.92" y="495.5" ></text>
</g>
<g >
<title>__generic_file_write_iter (34 samples, 0.03%)</title><rect x="15.2" y="85" width="0.3" height="15.0" fill="rgb(216,168,42)" rx="2" ry="2" />
<text  x="18.17" y="95.5" ></text>
</g>
<g >
<title>__blk_mq_run_hw_queue (22 samples, 0.02%)</title><rect x="21.7" y="357" width="0.2" height="15.0" fill="rgb(210,30,39)" rx="2" ry="2" />
<text  x="24.66" y="367.5" ></text>
</g>
<g >
<title>__apic_accept_irq (25 samples, 0.02%)</title><rect x="40.5" y="293" width="0.2" height="15.0" fill="rgb(227,17,33)" rx="2" ry="2" />
<text  x="43.53" y="303.5" ></text>
</g>
<g >
<title>[unknown] (110 samples, 0.08%)</title><rect x="10.5" y="469" width="1.0" height="15.0" fill="rgb(247,86,21)" rx="2" ry="2" />
<text  x="13.50" y="479.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive.copyBuffered (242 samples, 0.18%)</title><rect x="13.4" y="245" width="2.1" height="15.0" fill="rgb(229,104,45)" rx="2" ry="2" />
<text  x="16.37" y="255.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/services/diff.(*service).Apply (443 samples, 0.33%)</title><rect x="13.2" y="373" width="3.9" height="15.0" fill="rgb(211,221,47)" rx="2" ry="2" />
<text  x="16.22" y="383.5" ></text>
</g>
<g >
<title>ext4_end_bio (13 samples, 0.01%)</title><rect x="1178.6" y="261" width="0.1" height="15.0" fill="rgb(245,128,2)" rx="2" ry="2" />
<text  x="1181.61" y="271.5" ></text>
</g>
<g >
<title>do_syscall_64 (12 samples, 0.01%)</title><rect x="1188.2" y="213" width="0.1" height="15.0" fill="rgb(252,189,19)" rx="2" ry="2" />
<text  x="1191.24" y="223.5" ></text>
</g>
<g >
<title>[libglib-2.0.so.0.6400.6] (47 samples, 0.03%)</title><rect x="31.6" y="469" width="0.4" height="15.0" fill="rgb(221,123,51)" rx="2" ry="2" />
<text  x="34.56" y="479.5" ></text>
</g>
<g >
<title>[zedbox] (489 samples, 0.36%)</title><rect x="1184.8" y="309" width="4.3" height="15.0" fill="rgb(205,189,24)" rx="2" ry="2" />
<text  x="1187.85" y="319.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).huffSym (42 samples, 0.03%)</title><rect x="14.6" y="69" width="0.4" height="15.0" fill="rgb(232,134,13)" rx="2" ry="2" />
<text  x="17.61" y="79.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/google.golang.org/grpc.(*Server).handleStream (478 samples, 0.35%)</title><rect x="13.0" y="453" width="4.1" height="15.0" fill="rgb(238,168,49)" rx="2" ry="2" />
<text  x="15.99" y="463.5" ></text>
</g>
<g >
<title>kvm_set_msr_common (19 samples, 0.01%)</title><rect x="35.1" y="293" width="0.1" height="15.0" fill="rgb(251,42,46)" rx="2" ry="2" />
<text  x="38.06" y="303.5" ></text>
</g>
<g >
<title>finish_task_switch (28 samples, 0.02%)</title><rect x="39.8" y="293" width="0.3" height="15.0" fill="rgb(240,101,6)" rx="2" ry="2" />
<text  x="42.85" y="303.5" ></text>
</g>
<g >
<title>fput_many (16 samples, 0.01%)</title><rect x="29.3" y="373" width="0.1" height="15.0" fill="rgb(250,96,36)" rx="2" ry="2" />
<text  x="32.31" y="383.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (39 samples, 0.03%)</title><rect x="1178.8" y="245" width="0.4" height="15.0" fill="rgb(231,221,48)" rx="2" ry="2" />
<text  x="1181.81" y="255.5" ></text>
</g>
<g >
<title>[newlogd] (14 samples, 0.01%)</title><rect x="22.6" y="341" width="0.2" height="15.0" fill="rgb(217,148,50)" rx="2" ry="2" />
<text  x="25.64" y="351.5" ></text>
</g>
<g >
<title>[memlogd] (12 samples, 0.01%)</title><rect x="22.3" y="437" width="0.1" height="15.0" fill="rgb(252,56,51)" rx="2" ry="2" />
<text  x="25.31" y="447.5" ></text>
</g>
<g >
<title>compress/gzip.(*Reader).Read (203 samples, 0.15%)</title><rect x="13.4" y="133" width="1.8" height="15.0" fill="rgb(229,120,12)" rx="2" ry="2" />
<text  x="16.39" y="143.5" ></text>
</g>
<g >
<title>scsi_io_completion (59 samples, 0.04%)</title><rect x="1178.3" y="309" width="0.5" height="15.0" fill="rgb(251,158,50)" rx="2" ry="2" />
<text  x="1181.27" y="319.5" ></text>
</g>
<g >
<title>[zedbox] (253 samples, 0.19%)</title><rect x="1186.2" y="245" width="2.1" height="15.0" fill="rgb(252,125,45)" rx="2" ry="2" />
<text  x="1189.15" y="255.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker.func2 (47 samples, 0.03%)</title><rect x="10.9" y="437" width="0.4" height="15.0" fill="rgb(213,19,11)" rx="2" ry="2" />
<text  x="13.86" y="447.5" ></text>
</g>
<g >
<title>virtqueue_notify (15 samples, 0.01%)</title><rect x="21.7" y="261" width="0.1" height="15.0" fill="rgb(205,128,47)" rx="2" ry="2" />
<text  x="24.72" y="271.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.01%)</title><rect x="1181.0" y="341" width="0.2" height="15.0" fill="rgb(211,73,54)" rx="2" ry="2" />
<text  x="1184.05" y="351.5" ></text>
</g>
<g >
<title>crypto/sha256.block (132 samples, 0.10%)</title><rect x="11.5" y="469" width="1.1" height="15.0" fill="rgb(246,49,1)" rx="2" ry="2" />
<text  x="14.45" y="479.5" ></text>
</g>
<g >
<title>irq_exit (134 samples, 0.10%)</title><rect x="1178.0" y="357" width="1.2" height="15.0" fill="rgb(205,147,51)" rx="2" ry="2" />
<text  x="1181.03" y="367.5" ></text>
</g>
<g >
<title>[newlogd] (35 samples, 0.03%)</title><rect x="22.5" y="453" width="0.3" height="15.0" fill="rgb(245,62,5)" rx="2" ry="2" />
<text  x="25.52" y="463.5" ></text>
</g>
<g >
<title>kvm_vcpu_block (503 samples, 0.37%)</title><rect x="35.9" y="341" width="4.3" height="15.0" fill="rgb(237,74,52)" rx="2" ry="2" />
<text  x="38.85" y="351.5" ></text>
</g>
<g >
<title>do_sys_poll (554 samples, 0.41%)</title><rect x="25.3" y="405" width="4.8" height="15.0" fill="rgb(221,134,29)" rx="2" ry="2" />
<text  x="28.26" y="415.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (18 samples, 0.01%)</title><rect x="23.5" y="389" width="0.2" height="15.0" fill="rgb(211,227,10)" rx="2" ry="2" />
<text  x="26.50" y="399.5" ></text>
</g>
<g >
<title>paravirt_read_msr (14 samples, 0.01%)</title><rect x="39.9" y="245" width="0.2" height="15.0" fill="rgb(252,23,0)" rx="2" ry="2" />
<text  x="42.95" y="255.5" ></text>
</g>
<g >
<title>runtime.sysmon (16 samples, 0.01%)</title><rect x="10.7" y="453" width="0.2" height="15.0" fill="rgb(251,185,43)" rx="2" ry="2" />
<text  x="13.72" y="463.5" ></text>
</g>
<g >
<title>vmx_set_msr (20 samples, 0.01%)</title><rect x="35.0" y="309" width="0.2" height="15.0" fill="rgb(246,229,51)" rx="2" ry="2" />
<text  x="38.05" y="319.5" ></text>
</g>
<g >
<title>runtime.usleep (16 samples, 0.01%)</title><rect x="10.7" y="437" width="0.2" height="15.0" fill="rgb(248,66,1)" rx="2" ry="2" />
<text  x="13.72" y="447.5" ></text>
</g>
<g >
<title>kthread (13 samples, 0.01%)</title><rect x="22.0" y="469" width="0.1" height="15.0" fill="rgb(228,114,33)" rx="2" ry="2" />
<text  x="24.98" y="479.5" ></text>
</g>
<g >
<title>kvm_arch_vcpu_load (18 samples, 0.01%)</title><rect x="39.9" y="277" width="0.2" height="15.0" fill="rgb(235,132,1)" rx="2" ry="2" />
<text  x="42.94" y="287.5" ></text>
</g>
<g >
<title>swapper (131,188 samples, 96.55%)</title><rect x="41.3" y="501" width="1139.3" height="15.0" fill="rgb(218,98,19)" rx="2" ry="2" />
<text  x="44.29" y="511.5" >swapper</text>
</g>
<g >
<title>kvm_irq_delivery_to_apic (16 samples, 0.01%)</title><rect x="35.1" y="261" width="0.1" height="15.0" fill="rgb(230,6,36)" rx="2" ry="2" />
<text  x="38.06" y="271.5" ></text>
</g>
<g >
<title>vfs_write (14 samples, 0.01%)</title><rect x="13.1" y="245" width="0.1" height="15.0" fill="rgb(246,96,40)" rx="2" ry="2" />
<text  x="16.08" y="255.5" ></text>
</g>
<g >
<title>[newlogd] (28 samples, 0.02%)</title><rect x="22.6" y="389" width="0.2" height="15.0" fill="rgb(235,109,46)" rx="2" ry="2" />
<text  x="25.58" y="399.5" ></text>
</g>
<g >
<title>[jq] (61 samples, 0.04%)</title><rect x="20.5" y="469" width="0.5" height="15.0" fill="rgb(225,128,52)" rx="2" ry="2" />
<text  x="23.50" y="479.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/github.com/containerd/continuity/fs.walkLinks (12 samples, 0.01%)</title><rect x="15.7" y="213" width="0.1" height="15.0" fill="rgb(247,147,25)" rx="2" ry="2" />
<text  x="18.72" y="223.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (47 samples, 0.03%)</title><rect x="33.6" y="341" width="0.4" height="15.0" fill="rgb(212,135,53)" rx="2" ry="2" />
<text  x="36.61" y="351.5" ></text>
</g>
<g >
<title>kvm_set_msi (31 samples, 0.02%)</title><rect x="40.5" y="341" width="0.3" height="15.0" fill="rgb(239,6,31)" rx="2" ry="2" />
<text  x="43.51" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.01%)</title><rect x="1189.6" y="357" width="0.2" height="15.0" fill="rgb(242,149,16)" rx="2" ry="2" />
<text  x="1192.63" y="367.5" ></text>
</g>
<g >
<title>schedule (28 samples, 0.02%)</title><rect x="39.8" y="325" width="0.3" height="15.0" fill="rgb(246,7,23)" rx="2" ry="2" />
<text  x="42.85" y="335.5" ></text>
</g>
<g >
<title>scsi_end_request (59 samples, 0.04%)</title><rect x="1178.3" y="293" width="0.5" height="15.0" fill="rgb(250,107,12)" rx="2" ry="2" />
<text  x="1181.27" y="303.5" ></text>
</g>
<g >
<title>[zedbox] (40 samples, 0.03%)</title><rect x="1187.4" y="149" width="0.4" height="15.0" fill="rgb(236,218,19)" rx="2" ry="2" />
<text  x="1190.43" y="159.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/github.com/containerd/continuity/fs.walkLinks (12 samples, 0.01%)</title><rect x="15.7" y="197" width="0.1" height="15.0" fill="rgb(253,73,37)" rx="2" ry="2" />
<text  x="18.72" y="207.5" ></text>
</g>
<g >
<title>kthread (28 samples, 0.02%)</title><rect x="21.6" y="469" width="0.3" height="15.0" fill="rgb(213,115,44)" rx="2" ry="2" />
<text  x="24.64" y="479.5" ></text>
</g>
<g >
<title>ext4_writepages (12 samples, 0.01%)</title><rect x="22.0" y="325" width="0.1" height="15.0" fill="rgb(219,19,33)" rx="2" ry="2" />
<text  x="24.98" y="335.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (29 samples, 0.02%)</title><rect x="1177.7" y="373" width="0.3" height="15.0" fill="rgb(218,71,0)" rx="2" ry="2" />
<text  x="1180.70" y="383.5" ></text>
</g>
<g >
<title>do_syscall_64 (52 samples, 0.04%)</title><rect x="33.6" y="437" width="0.4" height="15.0" fill="rgb(251,182,44)" rx="2" ry="2" />
<text  x="36.56" y="447.5" ></text>
</g>
<g >
<title>__do_sys_ppoll (563 samples, 0.41%)</title><rect x="25.2" y="421" width="4.9" height="15.0" fill="rgb(254,62,2)" rx="2" ry="2" />
<text  x="28.24" y="431.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_pwait (13 samples, 0.01%)</title><rect x="1189.6" y="325" width="0.1" height="15.0" fill="rgb(237,25,8)" rx="2" ry="2" />
<text  x="1192.64" y="335.5" ></text>
</g>
<g >
<title>kvm_irq_delivery_to_apic (31 samples, 0.02%)</title><rect x="40.5" y="325" width="0.3" height="15.0" fill="rgb(247,12,25)" rx="2" ry="2" />
<text  x="43.51" y="335.5" ></text>
</g>
<g >
<title>schedule (17 samples, 0.01%)</title><rect x="29.7" y="357" width="0.1" height="15.0" fill="rgb(244,217,51)" rx="2" ry="2" />
<text  x="32.69" y="367.5" ></text>
</g>
<g >
<title>ioeventfd_write (52 samples, 0.04%)</title><rect x="34.4" y="293" width="0.5" height="15.0" fill="rgb(212,18,16)" rx="2" ry="2" />
<text  x="37.40" y="303.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (24 samples, 0.02%)</title><rect x="23.7" y="389" width="0.2" height="15.0" fill="rgb(247,146,15)" rx="2" ry="2" />
<text  x="26.68" y="399.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/google.golang.org/grpc.(*Server).serveStreams.func1.1 (478 samples, 0.35%)</title><rect x="13.0" y="469" width="4.1" height="15.0" fill="rgb(248,107,28)" rx="2" ry="2" />
<text  x="15.99" y="479.5" ></text>
</g>
<g >
<title>vfs_read (12 samples, 0.01%)</title><rect x="1188.5" y="197" width="0.1" height="15.0" fill="rgb(219,88,39)" rx="2" ry="2" />
<text  x="1191.51" y="207.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/github.com/containerd/continuity/fs.walkLinks (14 samples, 0.01%)</title><rect x="15.7" y="245" width="0.1" height="15.0" fill="rgb(254,97,20)" rx="2" ry="2" />
<text  x="18.71" y="255.5" ></text>
</g>
<g >
<title>os.(*File).Write (15 samples, 0.01%)</title><rect x="13.1" y="341" width="0.1" height="15.0" fill="rgb(205,87,44)" rx="2" ry="2" />
<text  x="16.07" y="351.5" ></text>
</g>
<g >
<title>finish_task_switch (118 samples, 0.09%)</title><rect x="1179.6" y="389" width="1.0" height="15.0" fill="rgb(240,75,32)" rx="2" ry="2" />
<text  x="1182.57" y="399.5" ></text>
</g>
<g >
<title>ext4_finish_bio (12 samples, 0.01%)</title><rect x="1178.6" y="245" width="0.1" height="15.0" fill="rgb(216,110,43)" rx="2" ry="2" />
<text  x="1181.61" y="255.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (12 samples, 0.01%)</title><rect x="35.1" y="181" width="0.1" height="15.0" fill="rgb(210,58,44)" rx="2" ry="2" />
<text  x="38.09" y="191.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/metadata.(*namespacedWriter).Write (15 samples, 0.01%)</title><rect x="13.1" y="373" width="0.1" height="15.0" fill="rgb(242,40,37)" rx="2" ry="2" />
<text  x="16.07" y="383.5" ></text>
</g>
<g >
<title>__sched_text_start (46 samples, 0.03%)</title><rect x="323.0" y="405" width="0.4" height="15.0" fill="rgb(231,58,2)" rx="2" ry="2" />
<text  x="325.98" y="415.5" ></text>
</g>
<g >
<title>[qemu-system-x86_64] (76 samples, 0.06%)</title><rect x="32.0" y="469" width="0.6" height="15.0" fill="rgb(234,131,10)" rx="2" ry="2" />
<text  x="34.97" y="479.5" ></text>
</g>
<g >
<title>kvm_irq_delivery_to_apic_fast (16 samples, 0.01%)</title><rect x="35.1" y="245" width="0.1" height="15.0" fill="rgb(252,197,47)" rx="2" ry="2" />
<text  x="38.06" y="255.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/diff/walking/plugin.(*diffPlugin).Apply (443 samples, 0.33%)</title><rect x="13.2" y="341" width="3.9" height="15.0" fill="rgb(240,133,9)" rx="2" ry="2" />
<text  x="16.22" y="351.5" ></text>
</g>
<g >
<title>[unknown] (19 samples, 0.01%)</title><rect x="32.9" y="453" width="0.2" height="15.0" fill="rgb(206,43,19)" rx="2" ry="2" />
<text  x="35.93" y="463.5" ></text>
</g>
<g >
<title>__blk_mq_run_hw_queue (14 samples, 0.01%)</title><rect x="18.9" y="325" width="0.1" height="15.0" fill="rgb(212,8,51)" rx="2" ry="2" />
<text  x="21.88" y="335.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive.createTarFile (110 samples, 0.08%)</title><rect x="15.9" y="229" width="1.0" height="15.0" fill="rgb(224,60,20)" rx="2" ry="2" />
<text  x="18.91" y="239.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (14 samples, 0.01%)</title><rect x="13.1" y="213" width="0.1" height="15.0" fill="rgb(234,221,32)" rx="2" ry="2" />
<text  x="16.08" y="223.5" ></text>
</g>
<g >
<title>[unknown] (1,131 samples, 0.83%)</title><rect x="24.2" y="485" width="9.8" height="15.0" fill="rgb(238,166,27)" rx="2" ry="2" />
<text  x="27.21" y="495.5" ></text>
</g>
<g >
<title>x86_decode_insn (32 samples, 0.02%)</title><rect x="35.6" y="293" width="0.2" height="15.0" fill="rgb(249,168,8)" rx="2" ry="2" />
<text  x="38.57" y="303.5" ></text>
</g>
<g >
<title>[zedbox] (900 samples, 0.66%)</title><rect x="1182.1" y="453" width="7.9" height="15.0" fill="rgb(223,123,50)" rx="2" ry="2" />
<text  x="1185.14" y="463.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (35 samples, 0.03%)</title><rect x="15.2" y="181" width="0.3" height="15.0" fill="rgb(234,81,32)" rx="2" ry="2" />
<text  x="18.16" y="191.5" ></text>
</g>
<g >
<title>archive/tar.(*Reader).Read (204 samples, 0.15%)</title><rect x="13.4" y="229" width="1.8" height="15.0" fill="rgb(212,76,15)" rx="2" ry="2" />
<text  x="16.38" y="239.5" ></text>
</g>
<g >
<title>poll_freewait (87 samples, 0.06%)</title><rect x="28.8" y="389" width="0.8" height="15.0" fill="rgb(212,211,50)" rx="2" ry="2" />
<text  x="31.80" y="399.5" ></text>
</g>
<g >
<title>skip_emulated_instruction (42 samples, 0.03%)</title><rect x="35.5" y="325" width="0.3" height="15.0" fill="rgb(217,132,23)" rx="2" ry="2" />
<text  x="38.48" y="335.5" ></text>
</g>
<g >
<title>kvm_vcpu_check_block (343 samples, 0.25%)</title><rect x="36.9" y="325" width="2.9" height="15.0" fill="rgb(243,218,13)" rx="2" ry="2" />
<text  x="39.86" y="335.5" ></text>
</g>
<g >
<title>do_syscall_64 (35 samples, 0.03%)</title><rect x="15.2" y="165" width="0.3" height="15.0" fill="rgb(229,112,31)" rx="2" ry="2" />
<text  x="18.16" y="175.5" ></text>
</g>
<g >
<title>[zedbox] (58 samples, 0.04%)</title><rect x="1187.3" y="165" width="0.5" height="15.0" fill="rgb(221,137,48)" rx="2" ry="2" />
<text  x="1190.33" y="175.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/gc/scheduler.(*gcScheduler).run (20 samples, 0.01%)</title><rect x="12.6" y="469" width="0.2" height="15.0" fill="rgb(236,111,53)" rx="2" ry="2" />
<text  x="15.61" y="479.5" ></text>
</g>
<g >
<title>native_read_msr (14 samples, 0.01%)</title><rect x="39.9" y="229" width="0.2" height="15.0" fill="rgb(222,115,47)" rx="2" ry="2" />
<text  x="42.95" y="239.5" ></text>
</g>
<g >
<title>[zedbox] (21 samples, 0.02%)</title><rect x="1181.0" y="357" width="0.2" height="15.0" fill="rgb(243,111,34)" rx="2" ry="2" />
<text  x="1184.02" y="367.5" ></text>
</g>
<g >
<title>[ld-musl-x86_64.so.1] (847 samples, 0.62%)</title><rect x="24.2" y="469" width="7.4" height="15.0" fill="rgb(224,145,19)" rx="2" ry="2" />
<text  x="27.21" y="479.5" ></text>
</g>
<g >
<title>__raw_spin_unlock_irq (117 samples, 0.09%)</title><rect x="1179.6" y="373" width="1.0" height="15.0" fill="rgb(234,103,53)" rx="2" ry="2" />
<text  x="1182.58" y="383.5" ></text>
</g>
<g >
<title>os.(*File).Write (36 samples, 0.03%)</title><rect x="15.2" y="229" width="0.3" height="15.0" fill="rgb(228,161,37)" rx="2" ry="2" />
<text  x="18.15" y="239.5" ></text>
</g>
<g >
<title>virtnet_poll (14 samples, 0.01%)</title><rect x="21.2" y="389" width="0.2" height="15.0" fill="rgb(233,194,15)" rx="2" ry="2" />
<text  x="24.23" y="399.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/github.com/containerd/continuity/fs.walkLinks (15 samples, 0.01%)</title><rect x="16.9" y="197" width="0.1" height="15.0" fill="rgb(239,159,1)" rx="2" ry="2" />
<text  x="19.90" y="207.5" ></text>
</g>
<g >
<title>memmove (12 samples, 0.01%)</title><rect x="41.0" y="485" width="0.1" height="15.0" fill="rgb(211,33,48)" rx="2" ry="2" />
<text  x="43.97" y="495.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive/compression.(*readCloserWrapper).Read (75 samples, 0.06%)</title><rect x="15.9" y="117" width="0.7" height="15.0" fill="rgb(217,73,6)" rx="2" ry="2" />
<text  x="18.94" y="127.5" ></text>
</g>
<g >
<title>__fget_light (104 samples, 0.08%)</title><rect x="26.1" y="389" width="0.9" height="15.0" fill="rgb(238,218,9)" rx="2" ry="2" />
<text  x="29.07" y="399.5" ></text>
</g>
<g >
<title>[zedbox] (195 samples, 0.14%)</title><rect x="1186.5" y="229" width="1.7" height="15.0" fill="rgb(214,106,8)" rx="2" ry="2" />
<text  x="1189.54" y="239.5" ></text>
</g>
<g >
<title>iptables (23 samples, 0.02%)</title><rect x="18.4" y="501" width="0.2" height="15.0" fill="rgb(216,33,38)" rx="2" ry="2" />
<text  x="21.44" y="511.5" ></text>
</g>
<g >
<title>do_idle (32,481 samples, 23.91%)</title><rect x="41.3" y="437" width="282.1" height="15.0" fill="rgb(235,106,21)" rx="2" ry="2" />
<text  x="44.29" y="447.5" >do_idle</text>
</g>
<g >
<title>ext4_da_write_begin (17 samples, 0.01%)</title><rect x="15.2" y="53" width="0.1" height="15.0" fill="rgb(209,107,23)" rx="2" ry="2" />
<text  x="18.19" y="63.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).huffSym (45 samples, 0.03%)</title><rect x="13.8" y="85" width="0.4" height="15.0" fill="rgb(223,59,10)" rx="2" ry="2" />
<text  x="16.84" y="95.5" ></text>
</g>
<g >
<title>kvm_arch_vcpu_ioctl_run (714 samples, 0.53%)</title><rect x="34.3" y="357" width="6.2" height="15.0" fill="rgb(208,111,32)" rx="2" ry="2" />
<text  x="37.27" y="367.5" ></text>
</g>
<g >
<title>[zedbox] (881 samples, 0.65%)</title><rect x="1182.3" y="421" width="7.6" height="15.0" fill="rgb(244,113,15)" rx="2" ry="2" />
<text  x="1185.30" y="431.5" ></text>
</g>
<g >
<title>[zedbox] (819 samples, 0.60%)</title><rect x="1182.8" y="405" width="7.1" height="15.0" fill="rgb(244,77,51)" rx="2" ry="2" />
<text  x="1185.80" y="415.5" ></text>
</g>
<g >
<title>[zedbox] (138 samples, 0.10%)</title><rect x="1186.8" y="213" width="1.2" height="15.0" fill="rgb(246,20,51)" rx="2" ry="2" />
<text  x="1189.80" y="223.5" ></text>
</g>
<g >
<title>vfs_write (35 samples, 0.03%)</title><rect x="15.2" y="133" width="0.3" height="15.0" fill="rgb(222,117,43)" rx="2" ry="2" />
<text  x="18.16" y="143.5" ></text>
</g>
<g >
<title>native_safe_halt (32,419 samples, 23.86%)</title><rect x="41.3" y="405" width="281.6" height="15.0" fill="rgb(206,112,44)" rx="2" ry="2" />
<text  x="44.31" y="415.5" >native_safe_halt</text>
</g>
<g >
<title>do_syscall_64 (21 samples, 0.02%)</title><rect x="1189.2" y="309" width="0.2" height="15.0" fill="rgb(245,128,16)" rx="2" ry="2" />
<text  x="1192.22" y="319.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (14 samples, 0.01%)</title><rect x="31.4" y="437" width="0.2" height="15.0" fill="rgb(218,91,20)" rx="2" ry="2" />
<text  x="34.44" y="447.5" ></text>
</g>
<g >
<title>[zedbox] (382 samples, 0.28%)</title><rect x="1185.5" y="277" width="3.3" height="15.0" fill="rgb(207,31,52)" rx="2" ry="2" />
<text  x="1188.51" y="287.5" ></text>
</g>
<g >
<title>[zedbox] (45 samples, 0.03%)</title><rect x="1180.9" y="437" width="0.4" height="15.0" fill="rgb(246,71,28)" rx="2" ry="2" />
<text  x="1183.92" y="447.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/api/services/diff/v1._Diff_Apply_Handler (443 samples, 0.33%)</title><rect x="13.2" y="421" width="3.9" height="15.0" fill="rgb(219,140,13)" rx="2" ry="2" />
<text  x="16.22" y="431.5" ></text>
</g>
<g >
<title>wb_workfn (13 samples, 0.01%)</title><rect x="22.0" y="421" width="0.1" height="15.0" fill="rgb(212,38,35)" rx="2" ry="2" />
<text  x="24.98" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.01%)</title><rect x="13.1" y="293" width="0.1" height="15.0" fill="rgb(253,9,33)" rx="2" ry="2" />
<text  x="16.08" y="303.5" ></text>
</g>
<g >
<title>read_tsc (77 samples, 0.06%)</title><rect x="36.2" y="293" width="0.6" height="15.0" fill="rgb(237,188,16)" rx="2" ry="2" />
<text  x="39.16" y="303.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (15 samples, 0.01%)</title><rect x="29.7" y="293" width="0.1" height="15.0" fill="rgb(248,78,54)" rx="2" ry="2" />
<text  x="32.71" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (13 samples, 0.01%)</title><rect x="10.7" y="405" width="0.2" height="15.0" fill="rgb(211,140,29)" rx="2" ry="2" />
<text  x="13.75" y="415.5" ></text>
</g>
<g >
<title>iowrite16 (14 samples, 0.01%)</title><rect x="21.7" y="229" width="0.1" height="15.0" fill="rgb(216,61,22)" rx="2" ry="2" />
<text  x="24.72" y="239.5" ></text>
</g>
<g >
<title>[zedbox] (106 samples, 0.08%)</title><rect x="1187.0" y="197" width="0.9" height="15.0" fill="rgb(223,195,39)" rx="2" ry="2" />
<text  x="1190.01" y="207.5" ></text>
</g>
<g >
<title>__srcu_read_unlock (19 samples, 0.01%)</title><rect x="37.2" y="309" width="0.1" height="15.0" fill="rgb(250,207,0)" rx="2" ry="2" />
<text  x="40.17" y="319.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/diff/apply.apply.func1 (139 samples, 0.10%)</title><rect x="15.9" y="277" width="1.2" height="15.0" fill="rgb(244,167,49)" rx="2" ry="2" />
<text  x="18.86" y="287.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).nextBlock (34 samples, 0.03%)</title><rect x="16.3" y="69" width="0.3" height="15.0" fill="rgb(218,38,14)" rx="2" ry="2" />
<text  x="19.26" y="79.5" ></text>
</g>
<g >
<title>[jq] (124 samples, 0.09%)</title><rect x="19.4" y="485" width="1.1" height="15.0" fill="rgb(207,190,31)" rx="2" ry="2" />
<text  x="22.40" y="495.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (12 samples, 0.01%)</title><rect x="1178.9" y="229" width="0.1" height="15.0" fill="rgb(233,93,20)" rx="2" ry="2" />
<text  x="1181.94" y="239.5" ></text>
</g>
<g >
<title>__alloc_file (13 samples, 0.01%)</title><rect x="30.5" y="357" width="0.1" height="15.0" fill="rgb(244,157,30)" rx="2" ry="2" />
<text  x="33.50" y="367.5" ></text>
</g>
<g >
<title>[memlogd] (15 samples, 0.01%)</title><rect x="22.3" y="453" width="0.1" height="15.0" fill="rgb(249,43,29)" rx="2" ry="2" />
<text  x="25.28" y="463.5" ></text>
</g>
<g >
<title>__raw_spin_unlock_irq (44 samples, 0.03%)</title><rect x="323.0" y="373" width="0.4" height="15.0" fill="rgb(244,70,30)" rx="2" ry="2" />
<text  x="325.99" y="383.5" ></text>
</g>
<g >
<title>[qemu-system-x86_64] (33 samples, 0.02%)</title><rect x="23.9" y="485" width="0.3" height="15.0" fill="rgb(237,211,3)" rx="2" ry="2" />
<text  x="26.92" y="495.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive.Apply (304 samples, 0.22%)</title><rect x="13.2" y="293" width="2.7" height="15.0" fill="rgb(236,183,51)" rx="2" ry="2" />
<text  x="16.22" y="303.5" ></text>
</g>
<g >
<title>[unknown] (72 samples, 0.05%)</title><rect x="32.6" y="469" width="0.7" height="15.0" fill="rgb(249,197,11)" rx="2" ry="2" />
<text  x="35.63" y="479.5" ></text>
</g>
<g >
<title>do_iter_write (24 samples, 0.02%)</title><rect x="23.7" y="405" width="0.2" height="15.0" fill="rgb(245,164,48)" rx="2" ry="2" />
<text  x="26.68" y="415.5" ></text>
</g>
<g >
<title>net_rx_action (14 samples, 0.01%)</title><rect x="21.2" y="405" width="0.2" height="15.0" fill="rgb(244,182,49)" rx="2" ry="2" />
<text  x="24.23" y="415.5" ></text>
</g>
<g >
<title>[zedbox] (93 samples, 0.07%)</title><rect x="1181.3" y="469" width="0.8" height="15.0" fill="rgb(233,136,48)" rx="2" ry="2" />
<text  x="1184.32" y="479.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.01%)</title><rect x="10.7" y="421" width="0.2" height="15.0" fill="rgb(245,39,28)" rx="2" ry="2" />
<text  x="13.75" y="431.5" ></text>
</g>
<g >
<title>dnsmasq (109 samples, 0.08%)</title><rect x="17.3" y="501" width="0.9" height="15.0" fill="rgb(210,24,33)" rx="2" ry="2" />
<text  x="20.28" y="511.5" ></text>
</g>
<g >
<title>[memlogd] (13 samples, 0.01%)</title><rect x="22.2" y="453" width="0.1" height="15.0" fill="rgb(206,79,18)" rx="2" ry="2" />
<text  x="25.17" y="463.5" ></text>
</g>
<g >
<title>archive/tar.(*Reader).Read (76 samples, 0.06%)</title><rect x="15.9" y="197" width="0.7" height="15.0" fill="rgb(232,12,8)" rx="2" ry="2" />
<text  x="18.93" y="207.5" ></text>
</g>
<g >
<title>runtime.timerproc (20 samples, 0.01%)</title><rect x="11.3" y="453" width="0.1" height="15.0" fill="rgb(237,49,48)" rx="2" ry="2" />
<text  x="14.27" y="463.5" ></text>
</g>
<g >
<title>path_openat (46 samples, 0.03%)</title><rect x="30.5" y="389" width="0.4" height="15.0" fill="rgb(218,188,51)" rx="2" ry="2" />
<text  x="33.48" y="399.5" ></text>
</g>
<g >
<title>do_syscall_64 (25 samples, 0.02%)</title><rect x="1188.0" y="197" width="0.2" height="15.0" fill="rgb(226,193,50)" rx="2" ry="2" />
<text  x="1191.00" y="207.5" ></text>
</g>
<g >
<title>do_syscall_64 (29 samples, 0.02%)</title><rect x="1188.4" y="229" width="0.2" height="15.0" fill="rgb(208,212,43)" rx="2" ry="2" />
<text  x="1191.36" y="239.5" ></text>
</g>
<g >
<title>runtime.scanobject (39 samples, 0.03%)</title><rect x="10.9" y="405" width="0.4" height="15.0" fill="rgb(232,18,29)" rx="2" ry="2" />
<text  x="13.93" y="415.5" ></text>
</g>
<g >
<title>try_to_wake_up (47 samples, 0.03%)</title><rect x="33.6" y="357" width="0.4" height="15.0" fill="rgb(241,154,34)" rx="2" ry="2" />
<text  x="36.61" y="367.5" ></text>
</g>
<g >
<title>[zedbox] (671 samples, 0.49%)</title><rect x="1183.8" y="357" width="5.8" height="15.0" fill="rgb(238,108,31)" rx="2" ry="2" />
<text  x="1186.80" y="367.5" ></text>
</g>
<g >
<title>vmx_vcpu_load (17 samples, 0.01%)</title><rect x="39.9" y="261" width="0.2" height="15.0" fill="rgb(236,165,48)" rx="2" ry="2" />
<text  x="42.95" y="271.5" ></text>
</g>
<g >
<title>[unknown] (242 samples, 0.18%)</title><rect x="10.5" y="485" width="2.1" height="15.0" fill="rgb(234,14,4)" rx="2" ry="2" />
<text  x="13.50" y="495.5" ></text>
</g>
<g >
<title>writeback_sb_inodes (12 samples, 0.01%)</title><rect x="22.0" y="373" width="0.1" height="15.0" fill="rgb(238,78,25)" rx="2" ry="2" />
<text  x="24.98" y="383.5" ></text>
</g>
<g >
<title>kthread (81 samples, 0.06%)</title><rect x="18.7" y="469" width="0.7" height="15.0" fill="rgb(230,130,43)" rx="2" ry="2" />
<text  x="21.69" y="479.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (51 samples, 0.04%)</title><rect x="34.4" y="261" width="0.5" height="15.0" fill="rgb(237,67,37)" rx="2" ry="2" />
<text  x="37.41" y="271.5" ></text>
</g>
<g >
<title>do_sys_open (61 samples, 0.04%)</title><rect x="30.5" y="421" width="0.5" height="15.0" fill="rgb(208,206,22)" rx="2" ry="2" />
<text  x="33.45" y="431.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (14 samples, 0.01%)</title><rect x="23.5" y="309" width="0.1" height="15.0" fill="rgb(215,229,51)" rx="2" ry="2" />
<text  x="26.52" y="319.5" ></text>
</g>
<g >
<title>vp_notify (15 samples, 0.01%)</title><rect x="21.7" y="245" width="0.1" height="15.0" fill="rgb(236,91,39)" rx="2" ry="2" />
<text  x="24.72" y="255.5" ></text>
</g>
<g >
<title>do_syscall_64 (13 samples, 0.01%)</title><rect x="1188.8" y="261" width="0.1" height="15.0" fill="rgb(250,154,14)" rx="2" ry="2" />
<text  x="1191.83" y="271.5" ></text>
</g>
<g >
<title>[ld-musl-x86_64.so.1] (105 samples, 0.08%)</title><rect x="17.3" y="485" width="0.9" height="15.0" fill="rgb(252,1,49)" rx="2" ry="2" />
<text  x="20.28" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.01%)</title><rect x="1189.0" y="293" width="0.1" height="15.0" fill="rgb(231,68,17)" rx="2" ry="2" />
<text  x="1191.96" y="303.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive.createTarFile (273 samples, 0.20%)</title><rect x="13.3" y="261" width="2.4" height="15.0" fill="rgb(233,228,16)" rx="2" ry="2" />
<text  x="16.33" y="271.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive.Apply (139 samples, 0.10%)</title><rect x="15.9" y="261" width="1.2" height="15.0" fill="rgb(231,58,52)" rx="2" ry="2" />
<text  x="18.86" y="271.5" ></text>
</g>
<g >
<title>[newlogd] (24 samples, 0.02%)</title><rect x="22.6" y="373" width="0.2" height="15.0" fill="rgb(231,72,10)" rx="2" ry="2" />
<text  x="25.60" y="383.5" ></text>
</g>
<g >
<title>kworker/3:1H-kb (28 samples, 0.02%)</title><rect x="21.6" y="501" width="0.3" height="15.0" fill="rgb(242,199,21)" rx="2" ry="2" />
<text  x="24.64" y="511.5" ></text>
</g>
<g >
<title>kvm_vcpu_kick (12 samples, 0.01%)</title><rect x="35.1" y="213" width="0.1" height="15.0" fill="rgb(208,85,2)" rx="2" ry="2" />
<text  x="38.09" y="223.5" ></text>
</g>
<g >
<title>blk_mq_flush_plug_list (17 samples, 0.01%)</title><rect x="18.9" y="389" width="0.1" height="15.0" fill="rgb(211,91,9)" rx="2" ry="2" />
<text  x="21.88" y="399.5" ></text>
</g>
<g >
<title>ret_from_fork (81 samples, 0.06%)</title><rect x="18.7" y="485" width="0.7" height="15.0" fill="rgb(220,143,7)" rx="2" ry="2" />
<text  x="21.69" y="495.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (134 samples, 0.10%)</title><rect x="1178.0" y="341" width="1.2" height="15.0" fill="rgb(207,215,18)" rx="2" ry="2" />
<text  x="1181.03" y="351.5" ></text>
</g>
<g >
<title>do_idle (98,707 samples, 72.65%)</title><rect x="323.4" y="437" width="857.2" height="15.0" fill="rgb(216,224,14)" rx="2" ry="2" />
<text  x="326.38" y="447.5" >do_idle</text>
</g>
<g >
<title>__softirqentry_text_start (14 samples, 0.01%)</title><rect x="21.2" y="421" width="0.2" height="15.0" fill="rgb(253,88,25)" rx="2" ry="2" />
<text  x="24.23" y="431.5" ></text>
</g>
<g >
<title>do_syscall_64 (18 samples, 0.01%)</title><rect x="1181.0" y="325" width="0.2" height="15.0" fill="rgb(239,194,14)" rx="2" ry="2" />
<text  x="1184.05" y="335.5" ></text>
</g>
<g >
<title>do_writepages (12 samples, 0.01%)</title><rect x="22.0" y="341" width="0.1" height="15.0" fill="rgb(235,161,36)" rx="2" ry="2" />
<text  x="24.98" y="351.5" ></text>
</g>
<g >
<title>receive_buf (13 samples, 0.01%)</title><rect x="21.2" y="373" width="0.1" height="15.0" fill="rgb(221,69,32)" rx="2" ry="2" />
<text  x="24.23" y="383.5" ></text>
</g>
<g >
<title>generic_perform_write (14 samples, 0.01%)</title><rect x="13.1" y="181" width="0.1" height="15.0" fill="rgb(224,37,26)" rx="2" ry="2" />
<text  x="16.08" y="191.5" ></text>
</g>
<g >
<title>cpu_startup_entry (32,481 samples, 23.91%)</title><rect x="41.3" y="453" width="282.1" height="15.0" fill="rgb(219,14,24)" rx="2" ry="2" />
<text  x="44.29" y="463.5" >cpu_startup_entry</text>
</g>
<g >
<title>__pollwait (48 samples, 0.04%)</title><rect x="27.5" y="373" width="0.4" height="15.0" fill="rgb(233,208,54)" rx="2" ry="2" />
<text  x="30.48" y="383.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (27 samples, 0.02%)</title><rect x="1179.2" y="421" width="0.3" height="15.0" fill="rgb(212,28,5)" rx="2" ry="2" />
<text  x="1182.25" y="431.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).huffSym (20 samples, 0.01%)</title><rect x="16.3" y="37" width="0.2" height="15.0" fill="rgb(221,82,47)" rx="2" ry="2" />
<text  x="19.35" y="47.5" ></text>
</g>
<g >
<title>[zedbox] (906 samples, 0.67%)</title><rect x="1182.1" y="485" width="7.9" height="15.0" fill="rgb(232,28,37)" rx="2" ry="2" />
<text  x="1185.13" y="495.5" ></text>
</g>
<g >
<title>malloc (12 samples, 0.01%)</title><rect x="40.9" y="485" width="0.1" height="15.0" fill="rgb(209,97,51)" rx="2" ry="2" />
<text  x="43.86" y="495.5" ></text>
</g>
<g >
<title>__writeback_single_inode (12 samples, 0.01%)</title><rect x="22.0" y="357" width="0.1" height="15.0" fill="rgb(239,60,41)" rx="2" ry="2" />
<text  x="24.98" y="367.5" ></text>
</g>
<g >
<title>newlogd (53 samples, 0.04%)</title><rect x="22.5" y="501" width="0.5" height="15.0" fill="rgb(251,188,17)" rx="2" ry="2" />
<text  x="25.51" y="511.5" ></text>
</g>
<g >
<title>__do_sys_futex (18 samples, 0.01%)</title><rect x="1181.0" y="309" width="0.2" height="15.0" fill="rgb(242,63,23)" rx="2" ry="2" />
<text  x="1184.05" y="319.5" ></text>
</g>
<g >
<title>ioctl (780 samples, 0.57%)</title><rect x="34.1" y="485" width="6.7" height="15.0" fill="rgb(234,102,46)" rx="2" ry="2" />
<text  x="37.07" y="495.5" ></text>
</g>
<g >
<title>qemu-system-x86 (2,062 samples, 1.52%)</title><rect x="23.2" y="501" width="17.9" height="15.0" fill="rgb(229,21,0)" rx="2" ry="2" />
<text  x="26.18" y="511.5" ></text>
</g>
<g >
<title>[zedbox] (778 samples, 0.57%)</title><rect x="1183.1" y="389" width="6.8" height="15.0" fill="rgb(207,50,35)" rx="2" ry="2" />
<text  x="1186.10" y="399.5" ></text>
</g>
<g >
<title>syscall.Syscall (15 samples, 0.01%)</title><rect x="13.1" y="309" width="0.1" height="15.0" fill="rgb(215,25,18)" rx="2" ry="2" />
<text  x="16.07" y="319.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive.openFile (15 samples, 0.01%)</title><rect x="15.5" y="245" width="0.1" height="15.0" fill="rgb(243,77,27)" rx="2" ry="2" />
<text  x="18.50" y="255.5" ></text>
</g>
<g >
<title>kvm_mmu_page_fault (12 samples, 0.01%)</title><rect x="35.4" y="341" width="0.1" height="15.0" fill="rgb(240,151,39)" rx="2" ry="2" />
<text  x="38.36" y="351.5" ></text>
</g>
<g >
<title>ret_from_fork (13 samples, 0.01%)</title><rect x="22.0" y="485" width="0.1" height="15.0" fill="rgb(233,103,5)" rx="2" ry="2" />
<text  x="24.98" y="495.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive.applyNaive (304 samples, 0.22%)</title><rect x="13.2" y="277" width="2.7" height="15.0" fill="rgb(222,156,23)" rx="2" ry="2" />
<text  x="16.22" y="287.5" ></text>
</g>
<g >
<title>__generic_file_write_iter (14 samples, 0.01%)</title><rect x="13.1" y="197" width="0.1" height="15.0" fill="rgb(245,134,7)" rx="2" ry="2" />
<text  x="16.08" y="207.5" ></text>
</g>
<g >
<title>[zedbox] (895 samples, 0.66%)</title><rect x="1182.2" y="437" width="7.8" height="15.0" fill="rgb(251,222,26)" rx="2" ry="2" />
<text  x="1185.18" y="447.5" ></text>
</g>
<g >
<title>[zedbox] (26 samples, 0.02%)</title><rect x="1181.0" y="373" width="0.2" height="15.0" fill="rgb(206,109,54)" rx="2" ry="2" />
<text  x="1183.98" y="383.5" ></text>
</g>
<g >
<title>handle_ept_misconfig (55 samples, 0.04%)</title><rect x="34.4" y="341" width="0.5" height="15.0" fill="rgb(231,35,49)" rx="2" ry="2" />
<text  x="37.40" y="351.5" ></text>
</g>
<g >
<title>archive/tar.(*regFileReader).Read (76 samples, 0.06%)</title><rect x="15.9" y="181" width="0.7" height="15.0" fill="rgb(218,84,28)" rx="2" ry="2" />
<text  x="18.93" y="191.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/diff.(*compressedProcessor).Read (75 samples, 0.06%)</title><rect x="15.9" y="133" width="0.7" height="15.0" fill="rgb(245,207,23)" rx="2" ry="2" />
<text  x="18.94" y="143.5" ></text>
</g>
<g >
<title>kvm_vcpu_ioctl (714 samples, 0.53%)</title><rect x="34.3" y="373" width="6.2" height="15.0" fill="rgb(239,99,20)" rx="2" ry="2" />
<text  x="37.27" y="383.5" ></text>
</g>
<g >
<title>generic_perform_write (18 samples, 0.01%)</title><rect x="23.7" y="293" width="0.2" height="15.0" fill="rgb(231,10,37)" rx="2" ry="2" />
<text  x="26.70" y="303.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (59 samples, 0.04%)</title><rect x="27.9" y="373" width="0.5" height="15.0" fill="rgb(218,30,3)" rx="2" ry="2" />
<text  x="30.90" y="383.5" ></text>
</g>
<g >
<title>kvm_emulate_wrmsr (20 samples, 0.01%)</title><rect x="35.0" y="341" width="0.2" height="15.0" fill="rgb(208,99,49)" rx="2" ry="2" />
<text  x="38.05" y="351.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (34 samples, 0.03%)</title><rect x="30.1" y="421" width="0.3" height="15.0" fill="rgb(251,31,31)" rx="2" ry="2" />
<text  x="33.14" y="431.5" ></text>
</g>
<g >
<title>timekeeping_get_ns (101 samples, 0.07%)</title><rect x="36.0" y="309" width="0.9" height="15.0" fill="rgb(246,216,51)" rx="2" ry="2" />
<text  x="38.99" y="319.5" ></text>
</g>
<g >
<title>virtscsi_queuecommand (17 samples, 0.01%)</title><rect x="21.7" y="293" width="0.1" height="15.0" fill="rgb(228,32,10)" rx="2" ry="2" />
<text  x="24.70" y="303.5" ></text>
</g>
<g >
<title>kvm_irq_delivery_to_apic_fast (31 samples, 0.02%)</title><rect x="40.5" y="309" width="0.3" height="15.0" fill="rgb(242,188,19)" rx="2" ry="2" />
<text  x="43.51" y="319.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (44 samples, 0.03%)</title><rect x="323.0" y="357" width="0.4" height="15.0" fill="rgb(216,68,46)" rx="2" ry="2" />
<text  x="325.99" y="367.5" ></text>
</g>
<g >
<title>do_syscall_64 (35 samples, 0.03%)</title><rect x="17.9" y="453" width="0.3" height="15.0" fill="rgb(252,180,6)" rx="2" ry="2" />
<text  x="20.89" y="463.5" ></text>
</g>
<g >
<title>vfs_writev (25 samples, 0.02%)</title><rect x="23.7" y="421" width="0.2" height="15.0" fill="rgb(244,117,10)" rx="2" ry="2" />
<text  x="26.67" y="431.5" ></text>
</g>
<g >
<title>runtime.goexit (534 samples, 0.39%)</title><rect x="12.6" y="485" width="4.6" height="15.0" fill="rgb(206,128,30)" rx="2" ry="2" />
<text  x="15.61" y="495.5" ></text>
</g>
<g >
<title>runtime.gcDrain (47 samples, 0.03%)</title><rect x="10.9" y="421" width="0.4" height="15.0" fill="rgb(249,78,4)" rx="2" ry="2" />
<text  x="13.86" y="431.5" ></text>
</g>
<g >
<title>blk_mq_run_hw_queue (14 samples, 0.01%)</title><rect x="18.9" y="357" width="0.1" height="15.0" fill="rgb(214,63,47)" rx="2" ry="2" />
<text  x="21.88" y="367.5" ></text>
</g>
<g >
<title>__raw_spin_unlock_irq (28 samples, 0.02%)</title><rect x="31.2" y="373" width="0.2" height="15.0" fill="rgb(224,115,54)" rx="2" ry="2" />
<text  x="34.16" y="383.5" ></text>
</g>
<g >
<title>__do_sys_futex (22 samples, 0.02%)</title><rect x="23.5" y="437" width="0.2" height="15.0" fill="rgb(246,135,4)" rx="2" ry="2" />
<text  x="26.47" y="447.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).huffmanBlock (97 samples, 0.07%)</title><rect x="13.5" y="101" width="0.8" height="15.0" fill="rgb(227,110,2)" rx="2" ry="2" />
<text  x="16.46" y="111.5" ></text>
</g>
<g >
<title>finish_task_switch (15 samples, 0.01%)</title><rect x="23.5" y="341" width="0.2" height="15.0" fill="rgb(207,189,42)" rx="2" ry="2" />
<text  x="26.52" y="351.5" ></text>
</g>
<g >
<title>[zedbox] (320 samples, 0.24%)</title><rect x="1185.8" y="261" width="2.8" height="15.0" fill="rgb(215,18,14)" rx="2" ry="2" />
<text  x="1188.84" y="271.5" ></text>
</g>
<g >
<title>[zedbox] (45 samples, 0.03%)</title><rect x="1180.9" y="453" width="0.4" height="15.0" fill="rgb(249,64,18)" rx="2" ry="2" />
<text  x="1183.92" y="463.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (24 samples, 0.02%)</title><rect x="1188.6" y="261" width="0.2" height="15.0" fill="rgb(238,16,26)" rx="2" ry="2" />
<text  x="1191.62" y="271.5" ></text>
</g>
<g >
<title>blk_update_request (33 samples, 0.02%)</title><rect x="1178.4" y="277" width="0.3" height="15.0" fill="rgb(230,209,31)" rx="2" ry="2" />
<text  x="1181.44" y="287.5" ></text>
</g>
<g >
<title>ret_from_fork (28 samples, 0.02%)</title><rect x="21.6" y="485" width="0.3" height="15.0" fill="rgb(212,190,3)" rx="2" ry="2" />
<text  x="24.64" y="495.5" ></text>
</g>
<g >
<title>__apic_accept_irq (15 samples, 0.01%)</title><rect x="35.1" y="229" width="0.1" height="15.0" fill="rgb(210,174,47)" rx="2" ry="2" />
<text  x="38.06" y="239.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/google.golang.org/grpc.(*Server).processUnaryRPC (451 samples, 0.33%)</title><rect x="13.2" y="437" width="3.9" height="15.0" fill="rgb(218,226,52)" rx="2" ry="2" />
<text  x="16.22" y="447.5" ></text>
</g>
<g >
<title>virtscsi_add_cmd (17 samples, 0.01%)</title><rect x="21.7" y="277" width="0.1" height="15.0" fill="rgb(220,118,40)" rx="2" ry="2" />
<text  x="24.70" y="287.5" ></text>
</g>
<g >
<title>do_syscall_64 (757 samples, 0.56%)</title><rect x="34.2" y="453" width="6.6" height="15.0" fill="rgb(205,113,23)" rx="2" ry="2" />
<text  x="37.21" y="463.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Write (36 samples, 0.03%)</title><rect x="15.2" y="213" width="0.3" height="15.0" fill="rgb(215,39,16)" rx="2" ry="2" />
<text  x="18.15" y="223.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (35 samples, 0.03%)</title><rect x="17.9" y="469" width="0.3" height="15.0" fill="rgb(219,29,28)" rx="2" ry="2" />
<text  x="20.89" y="479.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (21 samples, 0.02%)</title><rect x="40.5" y="229" width="0.2" height="15.0" fill="rgb(254,93,15)" rx="2" ry="2" />
<text  x="43.54" y="239.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (12 samples, 0.01%)</title><rect x="35.1" y="165" width="0.1" height="15.0" fill="rgb(242,74,31)" rx="2" ry="2" />
<text  x="38.09" y="175.5" ></text>
</g>
<g >
<title>compress/gzip.(*Reader).Read (75 samples, 0.06%)</title><rect x="15.9" y="101" width="0.7" height="15.0" fill="rgb(247,9,30)" rx="2" ry="2" />
<text  x="18.94" y="111.5" ></text>
</g>
<g >
<title>kworker/u8:3-ev (14 samples, 0.01%)</title><rect x="22.0" y="501" width="0.1" height="15.0" fill="rgb(214,190,26)" rx="2" ry="2" />
<text  x="24.97" y="511.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/services/content/contentserver.(*service).Write (26 samples, 0.02%)</title><rect x="13.0" y="389" width="0.2" height="15.0" fill="rgb(221,20,2)" rx="2" ry="2" />
<text  x="16.00" y="399.5" ></text>
</g>
<g >
<title>[newlogd] (14 samples, 0.01%)</title><rect x="22.6" y="357" width="0.2" height="15.0" fill="rgb(220,202,49)" rx="2" ry="2" />
<text  x="25.64" y="367.5" ></text>
</g>
<g >
<title>__do_sys_futex (52 samples, 0.04%)</title><rect x="33.6" y="421" width="0.4" height="15.0" fill="rgb(249,4,8)" rx="2" ry="2" />
<text  x="36.56" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (26 samples, 0.02%)</title><rect x="1188.0" y="213" width="0.2" height="15.0" fill="rgb(229,98,5)" rx="2" ry="2" />
<text  x="1191.00" y="223.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Write (15 samples, 0.01%)</title><rect x="13.1" y="325" width="0.1" height="15.0" fill="rgb(241,26,8)" rx="2" ry="2" />
<text  x="16.07" y="335.5" ></text>
</g>
<g >
<title>kvm_vcpu_wake_up (21 samples, 0.02%)</title><rect x="40.5" y="261" width="0.2" height="15.0" fill="rgb(253,0,29)" rx="2" ry="2" />
<text  x="43.54" y="271.5" ></text>
</g>
<g >
<title>__sched_text_start (28 samples, 0.02%)</title><rect x="39.8" y="309" width="0.3" height="15.0" fill="rgb(225,146,48)" rx="2" ry="2" />
<text  x="42.85" y="319.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (27 samples, 0.02%)</title><rect x="29.6" y="373" width="0.2" height="15.0" fill="rgb(233,89,22)" rx="2" ry="2" />
<text  x="32.60" y="383.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (47 samples, 0.03%)</title><rect x="33.6" y="325" width="0.4" height="15.0" fill="rgb(213,44,19)" rx="2" ry="2" />
<text  x="36.61" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.01%)</title><rect x="1188.2" y="229" width="0.1" height="15.0" fill="rgb(223,75,46)" rx="2" ry="2" />
<text  x="1191.24" y="239.5" ></text>
</g>
<g >
<title>do_syscall_64 (26 samples, 0.02%)</title><rect x="1189.4" y="325" width="0.2" height="15.0" fill="rgb(221,99,11)" rx="2" ry="2" />
<text  x="1192.40" y="335.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/github.com/containerd/continuity/fs.RootPath (14 samples, 0.01%)</title><rect x="15.7" y="261" width="0.1" height="15.0" fill="rgb(212,164,6)" rx="2" ry="2" />
<text  x="18.71" y="271.5" ></text>
</g>
<g >
<title>[newlogd] (13 samples, 0.01%)</title><rect x="22.6" y="325" width="0.2" height="15.0" fill="rgb(216,64,34)" rx="2" ry="2" />
<text  x="25.65" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (21 samples, 0.02%)</title><rect x="1189.2" y="325" width="0.2" height="15.0" fill="rgb(235,98,7)" rx="2" ry="2" />
<text  x="1192.22" y="335.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (12 samples, 0.01%)</title><rect x="1178.9" y="197" width="0.1" height="15.0" fill="rgb(223,113,9)" rx="2" ry="2" />
<text  x="1181.94" y="207.5" ></text>
</g>
<g >
<title>[newlogd] (16 samples, 0.01%)</title><rect x="22.8" y="453" width="0.2" height="15.0" fill="rgb(228,148,36)" rx="2" ry="2" />
<text  x="25.83" y="463.5" ></text>
</g>
<g >
<title>[ld-musl-x86_64.so.1] (81 samples, 0.06%)</title><rect x="23.2" y="485" width="0.7" height="15.0" fill="rgb(249,37,32)" rx="2" ry="2" />
<text  x="26.20" y="495.5" ></text>
</g>
<g >
<title>[memlogd] (14 samples, 0.01%)</title><rect x="22.2" y="485" width="0.1" height="15.0" fill="rgb(212,0,33)" rx="2" ry="2" />
<text  x="25.16" y="495.5" ></text>
</g>
<g >
<title>ksys_write (42 samples, 0.03%)</title><rect x="31.1" y="421" width="0.3" height="15.0" fill="rgb(207,29,54)" rx="2" ry="2" />
<text  x="34.08" y="431.5" ></text>
</g>
<g >
<title>do_vfs_ioctl (754 samples, 0.55%)</title><rect x="34.2" y="405" width="6.6" height="15.0" fill="rgb(216,188,8)" rx="2" ry="2" />
<text  x="37.23" y="415.5" ></text>
</g>
<g >
<title>kvm_fetch_guest_virt (25 samples, 0.02%)</title><rect x="35.6" y="261" width="0.2" height="15.0" fill="rgb(214,21,14)" rx="2" ry="2" />
<text  x="38.60" y="271.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive/compression.(*readCloserWrapper).Read (203 samples, 0.15%)</title><rect x="13.4" y="149" width="1.8" height="15.0" fill="rgb(252,151,40)" rx="2" ry="2" />
<text  x="16.39" y="159.5" ></text>
</g>
<g >
<title>blk_mq_sched_insert_requests (16 samples, 0.01%)</title><rect x="18.9" y="373" width="0.1" height="15.0" fill="rgb(211,100,2)" rx="2" ry="2" />
<text  x="21.88" y="383.5" ></text>
</g>
<g >
<title>kvm_apic_accept_pic_intr (16 samples, 0.01%)</title><rect x="38.4" y="261" width="0.1" height="15.0" fill="rgb(224,206,20)" rx="2" ry="2" />
<text  x="41.37" y="271.5" ></text>
</g>
<g >
<title>do_futex (22 samples, 0.02%)</title><rect x="23.5" y="421" width="0.2" height="15.0" fill="rgb(240,163,44)" rx="2" ry="2" />
<text  x="26.47" y="431.5" ></text>
</g>
<g >
<title>[memlogd] (12 samples, 0.01%)</title><rect x="22.2" y="437" width="0.1" height="15.0" fill="rgb(225,145,49)" rx="2" ry="2" />
<text  x="25.18" y="447.5" ></text>
</g>
<g >
<title>__do_sys_close (12 samples, 0.01%)</title><rect x="25.1" y="421" width="0.1" height="15.0" fill="rgb(242,200,1)" rx="2" ry="2" />
<text  x="28.14" y="431.5" ></text>
</g>
<g >
<title>futex_wake (51 samples, 0.04%)</title><rect x="33.6" y="389" width="0.4" height="15.0" fill="rgb(217,175,48)" rx="2" ry="2" />
<text  x="36.57" y="399.5" ></text>
</g>
<g >
<title>vfs_ioctl (754 samples, 0.55%)</title><rect x="34.2" y="389" width="6.6" height="15.0" fill="rgb(230,116,28)" rx="2" ry="2" />
<text  x="37.23" y="399.5" ></text>
</g>
<g >
<title>napi_gro_receive (39 samples, 0.03%)</title><rect x="1178.8" y="277" width="0.4" height="15.0" fill="rgb(245,162,4)" rx="2" ry="2" />
<text  x="1181.81" y="287.5" ></text>
</g>
<g >
<title>ret_from_intr (134 samples, 0.10%)</title><rect x="1178.0" y="389" width="1.2" height="15.0" fill="rgb(247,16,41)" rx="2" ry="2" />
<text  x="1181.03" y="399.5" ></text>
</g>
<g >
<title>all (135,869 samples, 100%)</title><rect x="10.0" y="517" width="1180.0" height="15.0" fill="rgb(247,116,2)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/api/services/content/v1._Content_Write_Handler (26 samples, 0.02%)</title><rect x="13.0" y="405" width="0.2" height="15.0" fill="rgb(247,119,38)" rx="2" ry="2" />
<text  x="16.00" y="415.5" ></text>
</g>
<g >
<title>kjournald2 (81 samples, 0.06%)</title><rect x="18.7" y="453" width="0.7" height="15.0" fill="rgb(230,145,24)" rx="2" ry="2" />
<text  x="21.69" y="463.5" ></text>
</g>
<g >
<title>do_syscall_64 (13 samples, 0.01%)</title><rect x="1181.2" y="357" width="0.1" height="15.0" fill="rgb(250,141,51)" rx="2" ry="2" />
<text  x="1184.20" y="367.5" ></text>
</g>
<g >
<title>secondary_startup_64 (131,188 samples, 96.55%)</title><rect x="41.3" y="485" width="1139.3" height="15.0" fill="rgb(221,56,37)" rx="2" ry="2" />
<text  x="44.29" y="495.5" >secondary_startup_64</text>
</g>
<g >
<title>[zedbox] (605 samples, 0.45%)</title><rect x="1184.1" y="341" width="5.3" height="15.0" fill="rgb(228,88,54)" rx="2" ry="2" />
<text  x="1187.15" y="351.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/github.com/containerd/continuity/fs.RootPath (16 samples, 0.01%)</title><rect x="16.9" y="229" width="0.1" height="15.0" fill="rgb(228,31,36)" rx="2" ry="2" />
<text  x="19.89" y="239.5" ></text>
</g>
<g >
<title>containerd-shim (54 samples, 0.04%)</title><rect x="10.0" y="501" width="0.5" height="15.0" fill="rgb(251,100,52)" rx="2" ry="2" />
<text  x="13.03" y="511.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).huffmanBlock (74 samples, 0.05%)</title><rect x="14.4" y="85" width="0.6" height="15.0" fill="rgb(242,221,34)" rx="2" ry="2" />
<text  x="17.35" y="95.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/github.com/grpc-ecosystem/go-grpc-prometheus.(*ServerMetrics).StreamServerInterceptor.func1 (27 samples, 0.02%)</title><rect x="13.0" y="421" width="0.2" height="15.0" fill="rgb(218,117,31)" rx="2" ry="2" />
<text  x="15.99" y="431.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/diff/apply.(*readCounter).Read (76 samples, 0.06%)</title><rect x="15.9" y="165" width="0.7" height="15.0" fill="rgb(223,42,36)" rx="2" ry="2" />
<text  x="18.93" y="175.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).huffmanBlock (36 samples, 0.03%)</title><rect x="15.9" y="69" width="0.4" height="15.0" fill="rgb(251,78,5)" rx="2" ry="2" />
<text  x="18.95" y="79.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (27 samples, 0.02%)</title><rect x="18.0" y="437" width="0.2" height="15.0" fill="rgb(246,105,37)" rx="2" ry="2" />
<text  x="20.96" y="447.5" ></text>
</g>
<g >
<title>do_syscall_64 (16 samples, 0.01%)</title><rect x="1189.0" y="277" width="0.1" height="15.0" fill="rgb(238,90,20)" rx="2" ry="2" />
<text  x="1191.96" y="287.5" ></text>
</g>
<g >
<title>do_syscall_64 (49 samples, 0.04%)</title><rect x="23.5" y="453" width="0.4" height="15.0" fill="rgb(236,159,15)" rx="2" ry="2" />
<text  x="26.46" y="463.5" ></text>
</g>
<g >
<title>irq_exit (29 samples, 0.02%)</title><rect x="1177.7" y="357" width="0.3" height="15.0" fill="rgb(251,181,45)" rx="2" ry="2" />
<text  x="1180.70" y="367.5" ></text>
</g>
<g >
<title>[memlogd] (14 samples, 0.01%)</title><rect x="22.2" y="469" width="0.1" height="15.0" fill="rgb(246,197,17)" rx="2" ry="2" />
<text  x="25.16" y="479.5" ></text>
</g>
<g >
<title>virtnet_poll (45 samples, 0.03%)</title><rect x="1178.8" y="309" width="0.4" height="15.0" fill="rgb(211,10,53)" rx="2" ry="2" />
<text  x="1181.80" y="319.5" ></text>
</g>
<g >
<title>[newlogd] (33 samples, 0.02%)</title><rect x="22.5" y="405" width="0.3" height="15.0" fill="rgb(230,222,37)" rx="2" ry="2" />
<text  x="25.54" y="415.5" ></text>
</g>
<g >
<title>do_epoll_wait (13 samples, 0.01%)</title><rect x="1189.6" y="309" width="0.1" height="15.0" fill="rgb(238,27,32)" rx="2" ry="2" />
<text  x="1192.64" y="319.5" ></text>
</g>
<g >
<title>[zedbox] (731 samples, 0.54%)</title><rect x="1183.4" y="373" width="6.4" height="15.0" fill="rgb(246,137,10)" rx="2" ry="2" />
<text  x="1186.43" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.01%)</title><rect x="1188.8" y="277" width="0.2" height="15.0" fill="rgb(229,193,46)" rx="2" ry="2" />
<text  x="1191.83" y="287.5" ></text>
</g>
<g >
<title>__generic_file_write_iter (18 samples, 0.01%)</title><rect x="23.7" y="309" width="0.2" height="15.0" fill="rgb(219,14,15)" rx="2" ry="2" />
<text  x="26.70" y="319.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/github.com/grpc-ecosystem/go-grpc-prometheus.(*ServerMetrics).UnaryServerInterceptor.func1 (443 samples, 0.33%)</title><rect x="13.2" y="405" width="3.9" height="15.0" fill="rgb(215,81,10)" rx="2" ry="2" />
<text  x="16.22" y="415.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (29 samples, 0.02%)</title><rect x="1188.4" y="245" width="0.2" height="15.0" fill="rgb(252,44,48)" rx="2" ry="2" />
<text  x="1191.36" y="255.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/content/local.(*writer).Write (15 samples, 0.01%)</title><rect x="13.1" y="357" width="0.1" height="15.0" fill="rgb(217,148,33)" rx="2" ry="2" />
<text  x="16.07" y="367.5" ></text>
</g>
<g >
<title>__blk_mq_delay_run_hw_queue (14 samples, 0.01%)</title><rect x="18.9" y="341" width="0.1" height="15.0" fill="rgb(214,171,9)" rx="2" ry="2" />
<text  x="21.88" y="351.5" ></text>
</g>
<g >
<title>__do_insn_fetch_bytes (27 samples, 0.02%)</title><rect x="35.6" y="277" width="0.2" height="15.0" fill="rgb(213,27,7)" rx="2" ry="2" />
<text  x="38.59" y="287.5" ></text>
</g>
<g >
<title>end_bio_bh_io_sync (14 samples, 0.01%)</title><rect x="1178.5" y="261" width="0.1" height="15.0" fill="rgb(244,205,52)" rx="2" ry="2" />
<text  x="1181.49" y="271.5" ></text>
</g>
<g >
<title>[zedbox] (45 samples, 0.03%)</title><rect x="1180.9" y="421" width="0.4" height="15.0" fill="rgb(217,82,27)" rx="2" ry="2" />
<text  x="1183.92" y="431.5" ></text>
</g>
<g >
<title>memlogd (30 samples, 0.02%)</title><rect x="22.2" y="501" width="0.2" height="15.0" fill="rgb(217,183,48)" rx="2" ry="2" />
<text  x="25.16" y="511.5" ></text>
</g>
<g >
<title>scsi_queue_rq (19 samples, 0.01%)</title><rect x="21.7" y="309" width="0.1" height="15.0" fill="rgb(235,161,27)" rx="2" ry="2" />
<text  x="24.68" y="319.5" ></text>
</g>
<g >
<title>eventfd_write (31 samples, 0.02%)</title><rect x="31.1" y="389" width="0.3" height="15.0" fill="rgb(228,195,51)" rx="2" ry="2" />
<text  x="34.15" y="399.5" ></text>
</g>
<g >
<title>schedule_idle (125 samples, 0.09%)</title><rect x="1179.5" y="421" width="1.1" height="15.0" fill="rgb(248,71,3)" rx="2" ry="2" />
<text  x="1182.52" y="431.5" ></text>
</g>
<g >
<title>process_one_work (25 samples, 0.02%)</title><rect x="21.6" y="437" width="0.3" height="15.0" fill="rgb(241,54,24)" rx="2" ry="2" />
<text  x="24.64" y="447.5" ></text>
</g>
<g >
<title>generic_perform_write (33 samples, 0.02%)</title><rect x="15.2" y="69" width="0.3" height="15.0" fill="rgb(220,0,10)" rx="2" ry="2" />
<text  x="18.18" y="79.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (21 samples, 0.02%)</title><rect x="40.5" y="245" width="0.2" height="15.0" fill="rgb(250,181,7)" rx="2" ry="2" />
<text  x="43.54" y="255.5" ></text>
</g>
<g >
<title>__cpuidle_text_start (32,419 samples, 23.86%)</title><rect x="41.3" y="421" width="281.6" height="15.0" fill="rgb(251,29,30)" rx="2" ry="2" />
<text  x="44.31" y="431.5" >__cpuidle_text_start</text>
</g>
<g >
<title>ksoftirqd/2 (14 samples, 0.01%)</title><rect x="21.2" y="501" width="0.2" height="15.0" fill="rgb(247,33,29)" rx="2" ry="2" />
<text  x="24.23" y="511.5" ></text>
</g>
<g >
<title>native_safe_halt (98,536 samples, 72.52%)</title><rect x="323.4" y="405" width="855.8" height="15.0" fill="rgb(231,99,10)" rx="2" ry="2" />
<text  x="326.43" y="415.5" >native_safe_halt</text>
</g>
<g >
<title>blk_mq_sched_dispatch_requests (22 samples, 0.02%)</title><rect x="21.7" y="341" width="0.2" height="15.0" fill="rgb(224,67,51)" rx="2" ry="2" />
<text  x="24.66" y="351.5" ></text>
</g>
<g >
<title>ret_from_fork (14 samples, 0.01%)</title><rect x="21.2" y="485" width="0.2" height="15.0" fill="rgb(237,135,53)" rx="2" ry="2" />
<text  x="24.23" y="495.5" ></text>
</g>
<g >
<title>kvm_send_userspace_msi (31 samples, 0.02%)</title><rect x="40.5" y="357" width="0.3" height="15.0" fill="rgb(228,203,24)" rx="2" ry="2" />
<text  x="43.51" y="367.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/mount.WithTempMount (139 samples, 0.10%)</title><rect x="15.9" y="293" width="1.2" height="15.0" fill="rgb(233,140,29)" rx="2" ry="2" />
<text  x="18.86" y="303.5" ></text>
</g>
<g >
<title>blk_mq_dispatch_rq_list (13 samples, 0.01%)</title><rect x="18.9" y="277" width="0.1" height="15.0" fill="rgb(233,104,11)" rx="2" ry="2" />
<text  x="21.88" y="287.5" ></text>
</g>
<g >
<title>do_futex (16 samples, 0.01%)</title><rect x="1181.0" y="293" width="0.2" height="15.0" fill="rgb(252,212,8)" rx="2" ry="2" />
<text  x="1184.05" y="303.5" ></text>
</g>
<g >
<title>io.(*teeReader).Read (204 samples, 0.15%)</title><rect x="13.4" y="181" width="1.8" height="15.0" fill="rgb(223,98,44)" rx="2" ry="2" />
<text  x="16.38" y="191.5" ></text>
</g>
<g >
<title>journal_submit_commit_record (14 samples, 0.01%)</title><rect x="19.1" y="421" width="0.1" height="15.0" fill="rgb(231,227,45)" rx="2" ry="2" />
<text  x="22.13" y="431.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (19 samples, 0.01%)</title><rect x="23.7" y="325" width="0.2" height="15.0" fill="rgb(254,219,9)" rx="2" ry="2" />
<text  x="26.70" y="335.5" ></text>
</g>
<g >
<title>__fget (93 samples, 0.07%)</title><rect x="26.2" y="373" width="0.8" height="15.0" fill="rgb(243,45,51)" rx="2" ry="2" />
<text  x="29.16" y="383.5" ></text>
</g>
<g >
<title>[zedbox] (432 samples, 0.32%)</title><rect x="1185.2" y="293" width="3.8" height="15.0" fill="rgb(232,219,10)" rx="2" ry="2" />
<text  x="1188.21" y="303.5" ></text>
</g>
<g >
<title>fput_many (38 samples, 0.03%)</title><rect x="28.5" y="389" width="0.3" height="15.0" fill="rgb(223,5,21)" rx="2" ry="2" />
<text  x="31.47" y="399.5" ></text>
</g>
<g >
<title>receive_buf (45 samples, 0.03%)</title><rect x="1178.8" y="293" width="0.4" height="15.0" fill="rgb(250,175,53)" rx="2" ry="2" />
<text  x="1181.80" y="303.5" ></text>
</g>
<g >
<title>kvm_skip_emulated_instruction (45 samples, 0.03%)</title><rect x="35.5" y="341" width="0.4" height="15.0" fill="rgb(219,6,54)" rx="2" ry="2" />
<text  x="38.46" y="351.5" ></text>
</g>
<g >
<title>kvm_vcpu_kick (24 samples, 0.02%)</title><rect x="40.5" y="277" width="0.2" height="15.0" fill="rgb(214,191,19)" rx="2" ry="2" />
<text  x="43.54" y="287.5" ></text>
</g>
<g >
<title>[zedbox] (14 samples, 0.01%)</title><rect x="1187.6" y="117" width="0.1" height="15.0" fill="rgb(208,197,25)" rx="2" ry="2" />
<text  x="1190.55" y="127.5" ></text>
</g>
<g >
<title>schedule (16 samples, 0.01%)</title><rect x="23.5" y="373" width="0.2" height="15.0" fill="rgb(206,63,13)" rx="2" ry="2" />
<text  x="26.51" y="383.5" ></text>
</g>
<g >
<title>futex_wait (21 samples, 0.02%)</title><rect x="23.5" y="405" width="0.2" height="15.0" fill="rgb(214,191,15)" rx="2" ry="2" />
<text  x="26.48" y="415.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (39 samples, 0.03%)</title><rect x="1178.8" y="261" width="0.4" height="15.0" fill="rgb(246,87,9)" rx="2" ry="2" />
<text  x="1181.81" y="271.5" ></text>
</g>
<g >
<title>jbd2/sda9-8 (87 samples, 0.06%)</title><rect x="18.6" y="501" width="0.8" height="15.0" fill="rgb(246,3,31)" rx="2" ry="2" />
<text  x="21.64" y="511.5" ></text>
</g>
<g >
<title>new_sync_write (14 samples, 0.01%)</title><rect x="13.1" y="229" width="0.1" height="15.0" fill="rgb(220,158,27)" rx="2" ry="2" />
<text  x="16.08" y="239.5" ></text>
</g>
<g >
<title>do_syscall_64 (23 samples, 0.02%)</title><rect x="1188.6" y="245" width="0.2" height="15.0" fill="rgb(224,130,26)" rx="2" ry="2" />
<text  x="1191.62" y="255.5" ></text>
</g>
<g >
<title>vfs_write (34 samples, 0.03%)</title><rect x="31.1" y="405" width="0.3" height="15.0" fill="rgb(205,14,18)" rx="2" ry="2" />
<text  x="34.15" y="415.5" ></text>
</g>
<g >
<title>__blk_mq_delay_run_hw_queue (22 samples, 0.02%)</title><rect x="21.7" y="373" width="0.2" height="15.0" fill="rgb(228,29,4)" rx="2" ry="2" />
<text  x="24.66" y="383.5" ></text>
</g>
<g >
<title>do_syscall_64 (17 samples, 0.01%)</title><rect x="1189.6" y="341" width="0.2" height="15.0" fill="rgb(246,222,27)" rx="2" ry="2" />
<text  x="1192.63" y="351.5" ></text>
</g>
<g >
<title>wb_writeback (13 samples, 0.01%)</title><rect x="22.0" y="405" width="0.1" height="15.0" fill="rgb(215,112,52)" rx="2" ry="2" />
<text  x="24.98" y="415.5" ></text>
</g>
<g >
<title>apic_has_pending_timer (15 samples, 0.01%)</title><rect x="37.3" y="309" width="0.2" height="15.0" fill="rgb(206,42,1)" rx="2" ry="2" />
<text  x="40.34" y="319.5" ></text>
</g>
<g >
<title>__raw_spin_unlock_irq (14 samples, 0.01%)</title><rect x="23.5" y="325" width="0.1" height="15.0" fill="rgb(240,126,30)" rx="2" ry="2" />
<text  x="26.52" y="335.5" ></text>
</g>
<g >
<title>syscall.Syscall (36 samples, 0.03%)</title><rect x="15.2" y="197" width="0.3" height="15.0" fill="rgb(244,41,44)" rx="2" ry="2" />
<text  x="18.15" y="207.5" ></text>
</g>
<g >
<title>ovl_write_iter (23 samples, 0.02%)</title><rect x="23.7" y="373" width="0.2" height="15.0" fill="rgb(220,116,24)" rx="2" ry="2" />
<text  x="26.69" y="383.5" ></text>
</g>
<g >
<title>runtime.systemstack (23 samples, 0.02%)</title><rect x="10.3" y="453" width="0.2" height="15.0" fill="rgb(214,58,54)" rx="2" ry="2" />
<text  x="13.26" y="463.5" ></text>
</g>
<g >
<title>ksys_write (14 samples, 0.01%)</title><rect x="13.1" y="261" width="0.1" height="15.0" fill="rgb(211,40,25)" rx="2" ry="2" />
<text  x="16.08" y="271.5" ></text>
</g>
<g >
<title>net_rx_action (46 samples, 0.03%)</title><rect x="1178.8" y="325" width="0.4" height="15.0" fill="rgb(220,159,22)" rx="2" ry="2" />
<text  x="1181.80" y="335.5" ></text>
</g>
<g >
<title>__sched_text_start (16 samples, 0.01%)</title><rect x="23.5" y="357" width="0.2" height="15.0" fill="rgb(250,93,33)" rx="2" ry="2" />
<text  x="26.51" y="367.5" ></text>
</g>
<g >
<title>[newlogd] (16 samples, 0.01%)</title><rect x="22.8" y="469" width="0.2" height="15.0" fill="rgb(209,18,7)" rx="2" ry="2" />
<text  x="25.83" y="479.5" ></text>
</g>
<g >
<title>__sched_text_start (17 samples, 0.01%)</title><rect x="29.7" y="341" width="0.1" height="15.0" fill="rgb(242,71,47)" rx="2" ry="2" />
<text  x="32.69" y="351.5" ></text>
</g>
<g >
<title>do_syscall_64 (14 samples, 0.01%)</title><rect x="13.1" y="277" width="0.1" height="15.0" fill="rgb(247,120,10)" rx="2" ry="2" />
<text  x="16.08" y="287.5" ></text>
</g>
<g >
<title>__cpuidle_text_start (98,538 samples, 72.52%)</title><rect x="323.4" y="421" width="855.8" height="15.0" fill="rgb(234,5,43)" rx="2" ry="2" />
<text  x="326.41" y="431.5" >__cpuidle_text_start</text>
</g>
<g >
<title>[newlogd] (16 samples, 0.01%)</title><rect x="22.8" y="421" width="0.2" height="15.0" fill="rgb(236,204,1)" rx="2" ry="2" />
<text  x="25.83" y="431.5" ></text>
</g>
<g >
<title>kthread (14 samples, 0.01%)</title><rect x="21.2" y="469" width="0.2" height="15.0" fill="rgb(223,76,48)" rx="2" ry="2" />
<text  x="24.23" y="479.5" ></text>
</g>
<g >
<title>[zedbox] (26 samples, 0.02%)</title><rect x="1187.5" y="133" width="0.3" height="15.0" fill="rgb(211,52,48)" rx="2" ry="2" />
<text  x="1190.53" y="143.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (117 samples, 0.09%)</title><rect x="1179.6" y="357" width="1.0" height="15.0" fill="rgb(236,51,24)" rx="2" ry="2" />
<text  x="1182.58" y="367.5" ></text>
</g>
<g >
<title>__raw_spin_unlock_irq (15 samples, 0.01%)</title><rect x="29.7" y="309" width="0.1" height="15.0" fill="rgb(207,186,1)" rx="2" ry="2" />
<text  x="32.71" y="319.5" ></text>
</g>
<g >
<title>runtime.gcDrain (23 samples, 0.02%)</title><rect x="10.3" y="421" width="0.2" height="15.0" fill="rgb(248,71,47)" rx="2" ry="2" />
<text  x="13.26" y="431.5" ></text>
</g>
<g >
<title>blk_mq_dispatch_rq_list (21 samples, 0.02%)</title><rect x="21.7" y="325" width="0.1" height="15.0" fill="rgb(249,147,35)" rx="2" ry="2" />
<text  x="24.66" y="335.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (51 samples, 0.04%)</title><rect x="34.4" y="245" width="0.5" height="15.0" fill="rgb(232,143,2)" rx="2" ry="2" />
<text  x="37.41" y="255.5" ></text>
</g>
<g >
<title>ksys_write (35 samples, 0.03%)</title><rect x="15.2" y="149" width="0.3" height="15.0" fill="rgb(240,213,10)" rx="2" ry="2" />
<text  x="18.16" y="159.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/github.com/containerd/continuity/fs.walkLinks (16 samples, 0.01%)</title><rect x="16.9" y="213" width="0.1" height="15.0" fill="rgb(236,164,5)" rx="2" ry="2" />
<text  x="19.89" y="223.5" ></text>
</g>
<g >
<title>[zedbox] (554 samples, 0.41%)</title><rect x="1184.4" y="325" width="4.8" height="15.0" fill="rgb(228,203,25)" rx="2" ry="2" />
<text  x="1187.41" y="335.5" ></text>
</g>
<g >
<title>[unknown] (68 samples, 0.05%)</title><rect x="20.5" y="485" width="0.6" height="15.0" fill="rgb(243,200,19)" rx="2" ry="2" />
<text  x="23.50" y="495.5" ></text>
</g>
<g >
<title>finish_task_switch (44 samples, 0.03%)</title><rect x="323.0" y="389" width="0.4" height="15.0" fill="rgb(226,93,51)" rx="2" ry="2" />
<text  x="325.99" y="399.5" ></text>
</g>
<g >
<title>containerd (777 samples, 0.57%)</title><rect x="10.5" y="501" width="6.7" height="15.0" fill="rgb(218,97,19)" rx="2" ry="2" />
<text  x="13.50" y="511.5" ></text>
</g>
<g >
<title>zedbox (1,045 samples, 0.77%)</title><rect x="1180.9" y="501" width="9.1" height="15.0" fill="rgb(212,178,5)" rx="2" ry="2" />
<text  x="1183.92" y="511.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).nextBlock (91 samples, 0.07%)</title><rect x="14.3" y="101" width="0.8" height="15.0" fill="rgb(239,157,5)" rx="2" ry="2" />
<text  x="17.31" y="111.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/diff/apply.apply (443 samples, 0.33%)</title><rect x="13.2" y="309" width="3.9" height="15.0" fill="rgb(207,131,49)" rx="2" ry="2" />
<text  x="16.22" y="319.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (757 samples, 0.56%)</title><rect x="34.2" y="437" width="6.6" height="15.0" fill="rgb(231,214,23)" rx="2" ry="2" />
<text  x="37.21" y="447.5" ></text>
</g>
<g >
<title>[newlogd] (16 samples, 0.01%)</title><rect x="22.8" y="437" width="0.2" height="15.0" fill="rgb(238,40,5)" rx="2" ry="2" />
<text  x="25.83" y="447.5" ></text>
</g>
<g >
<title>single_task_running (15 samples, 0.01%)</title><rect x="40.1" y="325" width="0.1" height="15.0" fill="rgb(217,221,20)" rx="2" ry="2" />
<text  x="43.09" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (52 samples, 0.04%)</title><rect x="33.6" y="453" width="0.4" height="15.0" fill="rgb(205,18,11)" rx="2" ry="2" />
<text  x="36.56" y="463.5" ></text>
</g>
<g >
<title>kvm_cpu_has_extint (21 samples, 0.02%)</title><rect x="38.3" y="277" width="0.2" height="15.0" fill="rgb(214,45,45)" rx="2" ry="2" />
<text  x="41.33" y="287.5" ></text>
</g>
<g >
<title>runtime.systemstack (47 samples, 0.03%)</title><rect x="10.9" y="453" width="0.4" height="15.0" fill="rgb(252,142,36)" rx="2" ry="2" />
<text  x="13.86" y="463.5" ></text>
</g>
<g >
<title>jbd2_journal_commit_transaction (80 samples, 0.06%)</title><rect x="18.7" y="437" width="0.7" height="15.0" fill="rgb(239,175,44)" rx="2" ry="2" />
<text  x="21.69" y="447.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.01%)</title><rect x="1181.2" y="373" width="0.1" height="15.0" fill="rgb(246,24,5)" rx="2" ry="2" />
<text  x="1184.20" y="383.5" ></text>
</g>
<g >
<title>__do_sys_nanosleep (13 samples, 0.01%)</title><rect x="1181.2" y="341" width="0.1" height="15.0" fill="rgb(248,21,35)" rx="2" ry="2" />
<text  x="1184.20" y="351.5" ></text>
</g>
<g >
<title>kvm_cpu_has_interrupt (68 samples, 0.05%)</title><rect x="37.9" y="293" width="0.6" height="15.0" fill="rgb(223,100,3)" rx="2" ry="2" />
<text  x="40.93" y="303.5" ></text>
</g>
<g >
<title>new_sync_write (34 samples, 0.03%)</title><rect x="15.2" y="117" width="0.3" height="15.0" fill="rgb(229,95,2)" rx="2" ry="2" />
<text  x="18.17" y="127.5" ></text>
</g>
</g>
</svg>
