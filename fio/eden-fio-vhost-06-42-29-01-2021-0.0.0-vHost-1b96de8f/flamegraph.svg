<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="566" onload="init(evt)" viewBox="0 0 1200 566" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="566.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="549" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="549" > </text>
<g id="frames">
<g >
<title>do_syscall_64 (19 samples, 0.01%)</title><rect x="14.3" y="165" width="0.1" height="15.0" fill="rgb(228,31,6)" rx="2" ry="2" />
<text  x="17.26" y="175.5" ></text>
</g>
<g >
<title>receive_buf (22 samples, 0.01%)</title><rect x="1180.1" y="293" width="0.2" height="15.0" fill="rgb(232,11,2)" rx="2" ry="2" />
<text  x="1183.09" y="303.5" ></text>
</g>
<g >
<title>end_bio_bh_io_sync (14 samples, 0.01%)</title><rect x="1179.8" y="261" width="0.1" height="15.0" fill="rgb(230,94,52)" rx="2" ry="2" />
<text  x="1182.82" y="271.5" ></text>
</g>
<g >
<title>fput_many (17 samples, 0.01%)</title><rect x="26.7" y="373" width="0.2" height="15.0" fill="rgb(216,47,13)" rx="2" ry="2" />
<text  x="29.74" y="383.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive.createTarFile (126 samples, 0.08%)</title><rect x="14.9" y="229" width="1.0" height="15.0" fill="rgb(245,211,41)" rx="2" ry="2" />
<text  x="17.95" y="239.5" ></text>
</g>
<g >
<title>syscall.Syscall (21 samples, 0.01%)</title><rect x="14.2" y="197" width="0.2" height="15.0" fill="rgb(207,59,53)" rx="2" ry="2" />
<text  x="17.24" y="207.5" ></text>
</g>
<g >
<title>[newlogd] (19 samples, 0.01%)</title><rect x="21.0" y="341" width="0.1" height="15.0" fill="rgb(225,151,38)" rx="2" ry="2" />
<text  x="24.00" y="351.5" ></text>
</g>
<g >
<title>schedule (13 samples, 0.01%)</title><rect x="10.5" y="341" width="0.1" height="15.0" fill="rgb(233,79,6)" rx="2" ry="2" />
<text  x="13.54" y="351.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive.Apply (306 samples, 0.20%)</title><rect x="12.5" y="293" width="2.4" height="15.0" fill="rgb(232,7,24)" rx="2" ry="2" />
<text  x="15.51" y="303.5" ></text>
</g>
<g >
<title>generic_perform_write (16 samples, 0.01%)</title><rect x="21.9" y="293" width="0.1" height="15.0" fill="rgb(232,138,15)" rx="2" ry="2" />
<text  x="24.87" y="303.5" ></text>
</g>
<g >
<title>eventfd_signal (54 samples, 0.04%)</title><rect x="31.3" y="277" width="0.4" height="15.0" fill="rgb(250,219,45)" rx="2" ry="2" />
<text  x="34.27" y="287.5" ></text>
</g>
<g >
<title>__sched_text_start (116 samples, 0.08%)</title><rect x="1180.6" y="405" width="0.9" height="15.0" fill="rgb(232,32,37)" rx="2" ry="2" />
<text  x="1183.63" y="415.5" ></text>
</g>
<g >
<title>new_sync_write (19 samples, 0.01%)</title><rect x="1189.6" y="277" width="0.1" height="15.0" fill="rgb(210,229,44)" rx="2" ry="2" />
<text  x="1192.56" y="287.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (33 samples, 0.02%)</title><rect x="1180.3" y="421" width="0.2" height="15.0" fill="rgb(210,74,12)" rx="2" ry="2" />
<text  x="1183.29" y="431.5" ></text>
</g>
<g >
<title>[ld-musl-x86_64.so.1] (839 samples, 0.55%)</title><rect x="22.4" y="469" width="6.5" height="15.0" fill="rgb(225,199,49)" rx="2" ry="2" />
<text  x="25.36" y="479.5" ></text>
</g>
<g >
<title>ret_from_fork (28 samples, 0.02%)</title><rect x="20.2" y="485" width="0.2" height="15.0" fill="rgb(219,138,38)" rx="2" ry="2" />
<text  x="23.20" y="495.5" ></text>
</g>
<g >
<title>[zedbox] (25 samples, 0.02%)</title><rect x="1181.8" y="421" width="0.2" height="15.0" fill="rgb(222,85,34)" rx="2" ry="2" />
<text  x="1184.81" y="431.5" ></text>
</g>
<g >
<title>apic_has_interrupt_for_ppr (15 samples, 0.01%)</title><rect x="35.5" y="261" width="0.2" height="15.0" fill="rgb(235,190,8)" rx="2" ry="2" />
<text  x="38.54" y="271.5" ></text>
</g>
<g >
<title>[zedbox] (842 samples, 0.56%)</title><rect x="1183.4" y="405" width="6.5" height="15.0" fill="rgb(230,12,38)" rx="2" ry="2" />
<text  x="1186.39" y="415.5" ></text>
</g>
<g >
<title>__generic_file_write_iter (17 samples, 0.01%)</title><rect x="14.3" y="85" width="0.1" height="15.0" fill="rgb(252,194,5)" rx="2" ry="2" />
<text  x="17.27" y="95.5" ></text>
</g>
<g >
<title>kvm_arch_vcpu_ioctl_run (856 samples, 0.56%)</title><rect x="31.1" y="357" width="6.7" height="15.0" fill="rgb(237,184,51)" rx="2" ry="2" />
<text  x="34.13" y="367.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/google.golang.org/grpc.(*Server).handleStream (494 samples, 0.33%)</title><rect x="12.3" y="453" width="3.8" height="15.0" fill="rgb(234,65,21)" rx="2" ry="2" />
<text  x="15.29" y="463.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).nextBlock (31 samples, 0.02%)</title><rect x="15.4" y="69" width="0.2" height="15.0" fill="rgb(225,139,11)" rx="2" ry="2" />
<text  x="18.39" y="79.5" ></text>
</g>
<g >
<title>[zedbox] (931 samples, 0.61%)</title><rect x="1182.7" y="469" width="7.2" height="15.0" fill="rgb(246,41,21)" rx="2" ry="2" />
<text  x="1185.70" y="479.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/api/services/diff/v1._Diff_Apply_Handler.func1 (451 samples, 0.30%)</title><rect x="12.5" y="389" width="3.5" height="15.0" fill="rgb(246,119,12)" rx="2" ry="2" />
<text  x="15.51" y="399.5" ></text>
</g>
<g >
<title>[zedbox] (562 samples, 0.37%)</title><rect x="1184.9" y="325" width="4.4" height="15.0" fill="rgb(245,213,26)" rx="2" ry="2" />
<text  x="1187.89" y="335.5" ></text>
</g>
<g >
<title>seq_read (14 samples, 0.01%)</title><rect x="1188.6" y="181" width="0.2" height="15.0" fill="rgb(205,155,18)" rx="2" ry="2" />
<text  x="1191.65" y="191.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive.applyNaive (145 samples, 0.10%)</title><rect x="14.9" y="245" width="1.1" height="15.0" fill="rgb(244,121,52)" rx="2" ry="2" />
<text  x="17.89" y="255.5" ></text>
</g>
<g >
<title>[unknown] (121 samples, 0.08%)</title><rect x="10.1" y="469" width="1.0" height="15.0" fill="rgb(236,200,8)" rx="2" ry="2" />
<text  x="13.14" y="479.5" ></text>
</g>
<g >
<title>kvm_irq_delivery_to_apic_fast (19 samples, 0.01%)</title><rect x="31.9" y="245" width="0.2" height="15.0" fill="rgb(208,223,36)" rx="2" ry="2" />
<text  x="34.93" y="255.5" ></text>
</g>
<g >
<title>x86_emulate_instruction (29 samples, 0.02%)</title><rect x="32.4" y="309" width="0.2" height="15.0" fill="rgb(224,104,27)" rx="2" ry="2" />
<text  x="35.40" y="319.5" ></text>
</g>
<g >
<title>[zedbox] (15 samples, 0.01%)</title><rect x="1181.8" y="357" width="0.2" height="15.0" fill="rgb(211,187,24)" rx="2" ry="2" />
<text  x="1184.85" y="367.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/github.com/grpc-ecosystem/go-grpc-prometheus.(*ServerMetrics).UnaryServerInterceptor.func1 (451 samples, 0.30%)</title><rect x="12.5" y="405" width="3.5" height="15.0" fill="rgb(246,171,46)" rx="2" ry="2" />
<text  x="15.51" y="415.5" ></text>
</g>
<g >
<title>archive/tar.(*Reader).Read (88 samples, 0.06%)</title><rect x="15.0" y="197" width="0.7" height="15.0" fill="rgb(210,33,15)" rx="2" ry="2" />
<text  x="17.98" y="207.5" ></text>
</g>
<g >
<title>[zedbox] (22 samples, 0.01%)</title><rect x="1187.7" y="117" width="0.2" height="15.0" fill="rgb(227,14,32)" rx="2" ry="2" />
<text  x="1190.74" y="127.5" ></text>
</g>
<g >
<title>worker_thread (28 samples, 0.02%)</title><rect x="20.2" y="453" width="0.2" height="15.0" fill="rgb(228,74,49)" rx="2" ry="2" />
<text  x="23.20" y="463.5" ></text>
</g>
<g >
<title>finish_task_switch (45 samples, 0.03%)</title><rect x="321.0" y="389" width="0.3" height="15.0" fill="rgb(209,137,38)" rx="2" ry="2" />
<text  x="323.97" y="399.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (44 samples, 0.03%)</title><rect x="321.0" y="357" width="0.3" height="15.0" fill="rgb(224,31,5)" rx="2" ry="2" />
<text  x="323.97" y="367.5" ></text>
</g>
<g >
<title>vmx_vcpu_load (19 samples, 0.01%)</title><rect x="37.3" y="261" width="0.1" height="15.0" fill="rgb(240,68,48)" rx="2" ry="2" />
<text  x="40.26" y="271.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).huffSym (14 samples, 0.01%)</title><rect x="15.5" y="37" width="0.1" height="15.0" fill="rgb(226,4,45)" rx="2" ry="2" />
<text  x="18.47" y="47.5" ></text>
</g>
<g >
<title>do_syscall_64 (35 samples, 0.02%)</title><rect x="16.7" y="453" width="0.3" height="15.0" fill="rgb(213,127,32)" rx="2" ry="2" />
<text  x="19.74" y="463.5" ></text>
</g>
<g >
<title>blk_mq_sched_dispatch_requests (23 samples, 0.02%)</title><rect x="20.2" y="341" width="0.2" height="15.0" fill="rgb(222,229,11)" rx="2" ry="2" />
<text  x="23.22" y="351.5" ></text>
</g>
<g >
<title>[zedbox] (380 samples, 0.25%)</title><rect x="1186.0" y="277" width="2.9" height="15.0" fill="rgb(238,6,48)" rx="2" ry="2" />
<text  x="1188.98" y="287.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (53 samples, 0.03%)</title><rect x="31.3" y="261" width="0.4" height="15.0" fill="rgb(208,108,42)" rx="2" ry="2" />
<text  x="34.28" y="271.5" ></text>
</g>
<g >
<title>do_syscall_64 (48 samples, 0.03%)</title><rect x="21.6" y="453" width="0.4" height="15.0" fill="rgb(209,6,36)" rx="2" ry="2" />
<text  x="24.65" y="463.5" ></text>
</g>
<g >
<title>kvm_vcpu_wake_up (26 samples, 0.02%)</title><rect x="37.8" y="261" width="0.2" height="15.0" fill="rgb(207,51,34)" rx="2" ry="2" />
<text  x="40.80" y="271.5" ></text>
</g>
<g >
<title>native_safe_halt (110,383 samples, 72.79%)</title><rect x="321.4" y="405" width="858.9" height="15.0" fill="rgb(239,30,15)" rx="2" ry="2" />
<text  x="324.39" y="415.5" >native_safe_halt</text>
</g>
<g >
<title>github.com/containerd/containerd/archive.Apply (145 samples, 0.10%)</title><rect x="14.9" y="261" width="1.1" height="15.0" fill="rgb(205,97,48)" rx="2" ry="2" />
<text  x="17.89" y="271.5" ></text>
</g>
<g >
<title>scsi_queue_rq (22 samples, 0.01%)</title><rect x="20.2" y="309" width="0.2" height="15.0" fill="rgb(247,99,51)" rx="2" ry="2" />
<text  x="23.23" y="319.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).huffmanBlock (48 samples, 0.03%)</title><rect x="15.0" y="69" width="0.4" height="15.0" fill="rgb(210,188,48)" rx="2" ry="2" />
<text  x="18.01" y="79.5" ></text>
</g>
<g >
<title>__raw_spin_unlock_irq (112 samples, 0.07%)</title><rect x="1180.7" y="373" width="0.8" height="15.0" fill="rgb(210,166,51)" rx="2" ry="2" />
<text  x="1183.66" y="383.5" ></text>
</g>
<g >
<title>read_tsc (75 samples, 0.05%)</title><rect x="33.0" y="293" width="0.6" height="15.0" fill="rgb(229,66,42)" rx="2" ry="2" />
<text  x="36.03" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (17 samples, 0.01%)</title><rect x="1188.8" y="245" width="0.1" height="15.0" fill="rgb(215,161,26)" rx="2" ry="2" />
<text  x="1191.76" y="255.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (16 samples, 0.01%)</title><rect x="21.9" y="325" width="0.1" height="15.0" fill="rgb(223,118,15)" rx="2" ry="2" />
<text  x="24.87" y="335.5" ></text>
</g>
<g >
<title>compress/gzip.(*Reader).Read (88 samples, 0.06%)</title><rect x="15.0" y="101" width="0.7" height="15.0" fill="rgb(232,51,15)" rx="2" ry="2" />
<text  x="17.98" y="111.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (16 samples, 0.01%)</title><rect x="21.9" y="341" width="0.1" height="15.0" fill="rgb(232,170,10)" rx="2" ry="2" />
<text  x="24.87" y="351.5" ></text>
</g>
<g >
<title>generic_perform_write (19 samples, 0.01%)</title><rect x="1189.6" y="229" width="0.1" height="15.0" fill="rgb(216,160,13)" rx="2" ry="2" />
<text  x="1192.56" y="239.5" ></text>
</g>
<g >
<title>kjournald2 (90 samples, 0.06%)</title><rect x="17.5" y="453" width="0.7" height="15.0" fill="rgb(247,75,52)" rx="2" ry="2" />
<text  x="20.53" y="463.5" ></text>
</g>
<g >
<title>[zedbox] (900 samples, 0.59%)</title><rect x="1182.9" y="421" width="7.0" height="15.0" fill="rgb(243,36,13)" rx="2" ry="2" />
<text  x="1185.94" y="431.5" ></text>
</g>
<g >
<title>do_sys_open (73 samples, 0.05%)</title><rect x="27.8" y="421" width="0.6" height="15.0" fill="rgb(225,97,23)" rx="2" ry="2" />
<text  x="30.79" y="431.5" ></text>
</g>
<g >
<title>[unknown] (20 samples, 0.01%)</title><rect x="29.9" y="453" width="0.2" height="15.0" fill="rgb(253,11,27)" rx="2" ry="2" />
<text  x="32.94" y="463.5" ></text>
</g>
<g >
<title>[qemu-system-x86_64] (14 samples, 0.01%)</title><rect x="29.8" y="453" width="0.1" height="15.0" fill="rgb(236,34,5)" rx="2" ry="2" />
<text  x="32.83" y="463.5" ></text>
</g>
<g >
<title>rcu_core (13 samples, 0.01%)</title><rect x="1179.2" y="325" width="0.1" height="15.0" fill="rgb(227,84,24)" rx="2" ry="2" />
<text  x="1182.17" y="335.5" ></text>
</g>
<g >
<title>native_safe_halt (36,285 samples, 23.93%)</title><rect x="38.5" y="405" width="282.4" height="15.0" fill="rgb(218,72,38)" rx="2" ry="2" />
<text  x="41.54" y="415.5" >native_safe_halt</text>
</g>
<g >
<title>blk_done_softirq (61 samples, 0.04%)</title><rect x="1179.6" y="325" width="0.5" height="15.0" fill="rgb(244,184,43)" rx="2" ry="2" />
<text  x="1182.62" y="335.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).huffmanBlock (109 samples, 0.07%)</title><rect x="12.6" y="101" width="0.9" height="15.0" fill="rgb(228,222,24)" rx="2" ry="2" />
<text  x="15.65" y="111.5" ></text>
</g>
<g >
<title>__fget (90 samples, 0.06%)</title><rect x="23.9" y="373" width="0.7" height="15.0" fill="rgb(220,6,12)" rx="2" ry="2" />
<text  x="26.90" y="383.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/google.golang.org/grpc.(*Server).serveStreams.func1.1 (494 samples, 0.33%)</title><rect x="12.3" y="469" width="3.8" height="15.0" fill="rgb(239,15,12)" rx="2" ry="2" />
<text  x="15.29" y="479.5" ></text>
</g>
<g >
<title>__cpuidle_text_start (36,287 samples, 23.93%)</title><rect x="38.5" y="421" width="282.4" height="15.0" fill="rgb(243,72,30)" rx="2" ry="2" />
<text  x="41.52" y="431.5" >__cpuidle_text_start</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (19 samples, 0.01%)</title><rect x="14.3" y="181" width="0.1" height="15.0" fill="rgb(223,136,26)" rx="2" ry="2" />
<text  x="17.26" y="191.5" ></text>
</g>
<g >
<title>futex_wait (27 samples, 0.02%)</title><rect x="21.7" y="405" width="0.2" height="15.0" fill="rgb(253,207,33)" rx="2" ry="2" />
<text  x="24.66" y="415.5" ></text>
</g>
<g >
<title>__cpuidle_text_start (110,385 samples, 72.79%)</title><rect x="321.4" y="421" width="858.9" height="15.0" fill="rgb(252,185,12)" rx="2" ry="2" />
<text  x="324.37" y="431.5" >__cpuidle_text_start</text>
</g>
<g >
<title>runtime.futex (13 samples, 0.01%)</title><rect x="10.2" y="437" width="0.1" height="15.0" fill="rgb(210,145,4)" rx="2" ry="2" />
<text  x="13.23" y="447.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (56 samples, 0.04%)</title><rect x="30.5" y="453" width="0.4" height="15.0" fill="rgb(245,151,51)" rx="2" ry="2" />
<text  x="33.49" y="463.5" ></text>
</g>
<g >
<title>containerd (780 samples, 0.51%)</title><rect x="10.1" y="501" width="6.1" height="15.0" fill="rgb(234,89,43)" rx="2" ry="2" />
<text  x="13.14" y="511.5" ></text>
</g>
<g >
<title>apic_has_pending_timer (42 samples, 0.03%)</title><rect x="34.4" y="309" width="0.3" height="15.0" fill="rgb(218,170,28)" rx="2" ry="2" />
<text  x="37.36" y="319.5" ></text>
</g>
<g >
<title>wake_up_q (41 samples, 0.03%)</title><rect x="30.6" y="373" width="0.3" height="15.0" fill="rgb(226,172,42)" rx="2" ry="2" />
<text  x="33.58" y="383.5" ></text>
</g>
<g >
<title>kthread (28 samples, 0.02%)</title><rect x="20.2" y="469" width="0.2" height="15.0" fill="rgb(240,167,48)" rx="2" ry="2" />
<text  x="23.20" y="479.5" ></text>
</g>
<g >
<title>[jq] (135 samples, 0.09%)</title><rect x="18.2" y="485" width="1.1" height="15.0" fill="rgb(211,19,24)" rx="2" ry="2" />
<text  x="21.23" y="495.5" ></text>
</g>
<g >
<title>do_syscall_64 (738 samples, 0.49%)</title><rect x="23.0" y="437" width="5.8" height="15.0" fill="rgb(207,65,47)" rx="2" ry="2" />
<text  x="26.05" y="447.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (25 samples, 0.02%)</title><rect x="16.8" y="437" width="0.2" height="15.0" fill="rgb(230,110,44)" rx="2" ry="2" />
<text  x="19.82" y="447.5" ></text>
</g>
<g >
<title>runtime.scanobject (33 samples, 0.02%)</title><rect x="10.7" y="405" width="0.3" height="15.0" fill="rgb(219,174,53)" rx="2" ry="2" />
<text  x="13.75" y="415.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive/compression.(*readCloserWrapper).Read (205 samples, 0.14%)</title><rect x="12.6" y="149" width="1.6" height="15.0" fill="rgb(248,216,6)" rx="2" ry="2" />
<text  x="15.63" y="159.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (112 samples, 0.07%)</title><rect x="1180.7" y="357" width="0.8" height="15.0" fill="rgb(214,45,39)" rx="2" ry="2" />
<text  x="1183.66" y="367.5" ></text>
</g>
<g >
<title>__sched_text_start (45 samples, 0.03%)</title><rect x="321.0" y="405" width="0.3" height="15.0" fill="rgb(231,169,12)" rx="2" ry="2" />
<text  x="323.97" y="415.5" ></text>
</g>
<g >
<title>irq_exit (108 samples, 0.07%)</title><rect x="1179.4" y="357" width="0.9" height="15.0" fill="rgb(220,208,47)" rx="2" ry="2" />
<text  x="1182.43" y="367.5" ></text>
</g>
<g >
<title>[zedbox] (938 samples, 0.62%)</title><rect x="1182.7" y="485" width="7.3" height="15.0" fill="rgb(248,104,40)" rx="2" ry="2" />
<text  x="1185.70" y="495.5" ></text>
</g>
<g >
<title>__fget_light (102 samples, 0.07%)</title><rect x="23.8" y="389" width="0.8" height="15.0" fill="rgb(212,40,17)" rx="2" ry="2" />
<text  x="26.80" y="399.5" ></text>
</g>
<g >
<title>schedule (29 samples, 0.02%)</title><rect x="27.0" y="357" width="0.3" height="15.0" fill="rgb(248,183,7)" rx="2" ry="2" />
<text  x="30.05" y="367.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (13 samples, 0.01%)</title><rect x="10.2" y="453" width="0.1" height="15.0" fill="rgb(235,219,30)" rx="2" ry="2" />
<text  x="13.23" y="463.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (53 samples, 0.03%)</title><rect x="31.3" y="245" width="0.4" height="15.0" fill="rgb(223,115,41)" rx="2" ry="2" />
<text  x="34.28" y="255.5" ></text>
</g>
<g >
<title>dnsmasq (109 samples, 0.07%)</title><rect x="16.2" y="501" width="0.9" height="15.0" fill="rgb(216,156,3)" rx="2" ry="2" />
<text  x="19.23" y="511.5" ></text>
</g>
<g >
<title>kworker/3:1H-kb (28 samples, 0.02%)</title><rect x="20.2" y="501" width="0.2" height="15.0" fill="rgb(250,199,12)" rx="2" ry="2" />
<text  x="23.20" y="511.5" ></text>
</g>
<g >
<title>do_syscall_64 (23 samples, 0.02%)</title><rect x="10.5" y="405" width="0.2" height="15.0" fill="rgb(208,82,18)" rx="2" ry="2" />
<text  x="13.48" y="415.5" ></text>
</g>
<g >
<title>[ld-musl-x86_64.so.1] (78 samples, 0.05%)</title><rect x="21.5" y="485" width="0.6" height="15.0" fill="rgb(242,148,5)" rx="2" ry="2" />
<text  x="24.46" y="495.5" ></text>
</g>
<g >
<title>[zedbox] (14 samples, 0.01%)</title><rect x="1187.8" y="101" width="0.1" height="15.0" fill="rgb(239,3,29)" rx="2" ry="2" />
<text  x="1190.80" y="111.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (751 samples, 0.50%)</title><rect x="23.0" y="453" width="5.9" height="15.0" fill="rgb(220,144,13)" rx="2" ry="2" />
<text  x="26.05" y="463.5" ></text>
</g>
<g >
<title>[newlogd] (34 samples, 0.02%)</title><rect x="20.9" y="437" width="0.3" height="15.0" fill="rgb(241,85,49)" rx="2" ry="2" />
<text  x="23.92" y="447.5" ></text>
</g>
<g >
<title>ksys_write (19 samples, 0.01%)</title><rect x="14.3" y="149" width="0.1" height="15.0" fill="rgb(229,136,21)" rx="2" ry="2" />
<text  x="17.26" y="159.5" ></text>
</g>
<g >
<title>[newlogd] (34 samples, 0.02%)</title><rect x="20.9" y="421" width="0.3" height="15.0" fill="rgb(206,65,36)" rx="2" ry="2" />
<text  x="23.92" y="431.5" ></text>
</g>
<g >
<title>cpu_startup_entry (36,350 samples, 23.97%)</title><rect x="38.5" y="453" width="282.8" height="15.0" fill="rgb(207,29,2)" rx="2" ry="2" />
<text  x="41.50" y="463.5" >cpu_startup_entry</text>
</g>
<g >
<title>arch_local_irq_restore (41 samples, 0.03%)</title><rect x="30.6" y="325" width="0.3" height="15.0" fill="rgb(250,87,54)" rx="2" ry="2" />
<text  x="33.58" y="335.5" ></text>
</g>
<g >
<title>scsi_end_request (59 samples, 0.04%)</title><rect x="1179.6" y="293" width="0.5" height="15.0" fill="rgb(231,223,8)" rx="2" ry="2" />
<text  x="1182.64" y="303.5" ></text>
</g>
<g >
<title>timekeeping_get_ns (117 samples, 0.08%)</title><rect x="32.8" y="309" width="0.9" height="15.0" fill="rgb(243,194,18)" rx="2" ry="2" />
<text  x="35.77" y="319.5" ></text>
</g>
<g >
<title>eventfd_write (41 samples, 0.03%)</title><rect x="28.4" y="389" width="0.4" height="15.0" fill="rgb(232,95,24)" rx="2" ry="2" />
<text  x="31.45" y="399.5" ></text>
</g>
<g >
<title>[qemu-system-x86_64] (66 samples, 0.04%)</title><rect x="29.2" y="469" width="0.6" height="15.0" fill="rgb(222,43,43)" rx="2" ry="2" />
<text  x="32.24" y="479.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (28 samples, 0.02%)</title><rect x="1189.3" y="325" width="0.2" height="15.0" fill="rgb(233,147,9)" rx="2" ry="2" />
<text  x="1192.26" y="335.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (28 samples, 0.02%)</title><rect x="27.1" y="293" width="0.2" height="15.0" fill="rgb(213,143,9)" rx="2" ry="2" />
<text  x="30.06" y="303.5" ></text>
</g>
<g >
<title>memmove (14 samples, 0.01%)</title><rect x="38.2" y="485" width="0.1" height="15.0" fill="rgb(250,68,9)" rx="2" ry="2" />
<text  x="41.15" y="495.5" ></text>
</g>
<g >
<title>runtime.gcDrain (44 samples, 0.03%)</title><rect x="10.7" y="421" width="0.3" height="15.0" fill="rgb(217,37,53)" rx="2" ry="2" />
<text  x="13.66" y="431.5" ></text>
</g>
<g >
<title>net_rx_action (22 samples, 0.01%)</title><rect x="1180.1" y="325" width="0.2" height="15.0" fill="rgb(211,7,27)" rx="2" ry="2" />
<text  x="1183.09" y="335.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/github.com/containerd/continuity/fs.RootPath (14 samples, 0.01%)</title><rect x="14.8" y="261" width="0.1" height="15.0" fill="rgb(221,52,48)" rx="2" ry="2" />
<text  x="17.76" y="271.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/diff/apply.apply.func1 (145 samples, 0.10%)</title><rect x="14.9" y="277" width="1.1" height="15.0" fill="rgb(205,5,30)" rx="2" ry="2" />
<text  x="17.89" y="287.5" ></text>
</g>
<g >
<title>kvm_set_msr_common (27 samples, 0.02%)</title><rect x="31.9" y="293" width="0.2" height="15.0" fill="rgb(231,184,51)" rx="2" ry="2" />
<text  x="34.92" y="303.5" ></text>
</g>
<g >
<title>path_openat (47 samples, 0.03%)</title><rect x="27.8" y="389" width="0.4" height="15.0" fill="rgb(228,149,26)" rx="2" ry="2" />
<text  x="30.81" y="399.5" ></text>
</g>
<g >
<title>do_syscall_64 (20 samples, 0.01%)</title><rect x="1189.0" y="277" width="0.1" height="15.0" fill="rgb(234,32,17)" rx="2" ry="2" />
<text  x="1191.99" y="287.5" ></text>
</g>
<g >
<title>__sched_text_start (13 samples, 0.01%)</title><rect x="21.7" y="357" width="0.1" height="15.0" fill="rgb(212,55,7)" rx="2" ry="2" />
<text  x="24.70" y="367.5" ></text>
</g>
<g >
<title>vfs_write (19 samples, 0.01%)</title><rect x="1189.6" y="293" width="0.1" height="15.0" fill="rgb(236,79,3)" rx="2" ry="2" />
<text  x="1192.56" y="303.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 0.05%)</title><rect x="19.3" y="485" width="0.6" height="15.0" fill="rgb(246,62,17)" rx="2" ry="2" />
<text  x="22.30" y="495.5" ></text>
</g>
<g >
<title>secondary_startup_64 (146,906 samples, 96.87%)</title><rect x="38.5" y="485" width="1143.1" height="15.0" fill="rgb(222,81,12)" rx="2" ry="2" />
<text  x="41.50" y="495.5" >secondary_startup_64</text>
</g>
<g >
<title>github.com/containerd/containerd/diff/walking/plugin.(*diffPlugin).Apply (451 samples, 0.30%)</title><rect x="12.5" y="341" width="3.5" height="15.0" fill="rgb(222,38,1)" rx="2" ry="2" />
<text  x="15.51" y="351.5" ></text>
</g>
<g >
<title>__raw_spin_unlock_irq (28 samples, 0.02%)</title><rect x="27.1" y="309" width="0.2" height="15.0" fill="rgb(244,172,4)" rx="2" ry="2" />
<text  x="30.06" y="319.5" ></text>
</g>
<g >
<title>kvm_vm_ioctl (33 samples, 0.02%)</title><rect x="37.8" y="373" width="0.2" height="15.0" fill="rgb(209,175,33)" rx="2" ry="2" />
<text  x="40.79" y="383.5" ></text>
</g>
<g >
<title>[zedbox] (25 samples, 0.02%)</title><rect x="1181.8" y="405" width="0.2" height="15.0" fill="rgb(242,143,48)" rx="2" ry="2" />
<text  x="1184.81" y="415.5" ></text>
</g>
<g >
<title>[zedbox] (184 samples, 0.12%)</title><rect x="1186.9" y="229" width="1.5" height="15.0" fill="rgb(240,3,39)" rx="2" ry="2" />
<text  x="1189.94" y="239.5" ></text>
</g>
<g >
<title>[zedbox] (72 samples, 0.05%)</title><rect x="1187.4" y="181" width="0.6" height="15.0" fill="rgb(215,209,6)" rx="2" ry="2" />
<text  x="1190.44" y="191.5" ></text>
</g>
<g >
<title>[newlogd] (14 samples, 0.01%)</title><rect x="21.0" y="325" width="0.1" height="15.0" fill="rgb(207,78,16)" rx="2" ry="2" />
<text  x="24.02" y="335.5" ></text>
</g>
<g >
<title>all (151,654 samples, 100%)</title><rect x="10.0" y="517" width="1180.0" height="15.0" fill="rgb(248,165,35)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker.func2 (44 samples, 0.03%)</title><rect x="10.7" y="437" width="0.3" height="15.0" fill="rgb(241,221,24)" rx="2" ry="2" />
<text  x="13.66" y="447.5" ></text>
</g>
<g >
<title>wwan-init.sh (17 samples, 0.01%)</title><rect x="1181.7" y="501" width="0.1" height="15.0" fill="rgb(235,144,46)" rx="2" ry="2" />
<text  x="1184.68" y="511.5" ></text>
</g>
<g >
<title>handle_ept_misconfig (58 samples, 0.04%)</title><rect x="31.3" y="341" width="0.4" height="15.0" fill="rgb(241,73,9)" rx="2" ry="2" />
<text  x="34.27" y="351.5" ></text>
</g>
<g >
<title>ksys_write (44 samples, 0.03%)</title><rect x="28.4" y="421" width="0.4" height="15.0" fill="rgb(236,59,32)" rx="2" ry="2" />
<text  x="31.45" y="431.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/diff.(*compressedProcessor).Read (205 samples, 0.14%)</title><rect x="12.6" y="165" width="1.6" height="15.0" fill="rgb(227,205,9)" rx="2" ry="2" />
<text  x="15.63" y="175.5" ></text>
</g>
<g >
<title>ovl_write_iter (18 samples, 0.01%)</title><rect x="21.9" y="373" width="0.1" height="15.0" fill="rgb(252,112,53)" rx="2" ry="2" />
<text  x="24.87" y="383.5" ></text>
</g>
<g >
<title>try_to_wake_up (41 samples, 0.03%)</title><rect x="30.6" y="357" width="0.3" height="15.0" fill="rgb(243,170,43)" rx="2" ry="2" />
<text  x="33.58" y="367.5" ></text>
</g>
<g >
<title>__raw_spin_unlock_irq (14 samples, 0.01%)</title><rect x="37.1" y="277" width="0.2" height="15.0" fill="rgb(207,220,51)" rx="2" ry="2" />
<text  x="40.15" y="287.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (13 samples, 0.01%)</title><rect x="25.4" y="341" width="0.1" height="15.0" fill="rgb(226,23,19)" rx="2" ry="2" />
<text  x="28.40" y="351.5" ></text>
</g>
<g >
<title>__apic_update_ppr (19 samples, 0.01%)</title><rect x="35.4" y="261" width="0.1" height="15.0" fill="rgb(205,128,43)" rx="2" ry="2" />
<text  x="38.40" y="271.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/github.com/containerd/continuity/fs.walkLinks (13 samples, 0.01%)</title><rect x="14.8" y="229" width="0.1" height="15.0" fill="rgb(239,142,54)" rx="2" ry="2" />
<text  x="17.77" y="239.5" ></text>
</g>
<g >
<title>kvm_vcpu_kick (29 samples, 0.02%)</title><rect x="37.8" y="277" width="0.2" height="15.0" fill="rgb(253,100,30)" rx="2" ry="2" />
<text  x="40.79" y="287.5" ></text>
</g>
<g >
<title>kvm_irq_delivery_to_apic_fast (30 samples, 0.02%)</title><rect x="37.8" y="309" width="0.2" height="15.0" fill="rgb(206,8,38)" rx="2" ry="2" />
<text  x="40.79" y="319.5" ></text>
</g>
<g >
<title>eventfd_poll (151 samples, 0.10%)</title><rect x="24.7" y="389" width="1.2" height="15.0" fill="rgb(226,199,38)" rx="2" ry="2" />
<text  x="27.71" y="399.5" ></text>
</g>
<g >
<title>kvm_fetch_guest_virt (20 samples, 0.01%)</title><rect x="32.5" y="261" width="0.1" height="15.0" fill="rgb(225,3,15)" rx="2" ry="2" />
<text  x="35.46" y="271.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (32 samples, 0.02%)</title><rect x="1188.5" y="245" width="0.3" height="15.0" fill="rgb(245,225,2)" rx="2" ry="2" />
<text  x="1191.51" y="255.5" ></text>
</g>
<g >
<title>do_futex (53 samples, 0.03%)</title><rect x="30.5" y="405" width="0.4" height="15.0" fill="rgb(215,29,46)" rx="2" ry="2" />
<text  x="33.49" y="415.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive.openFile (26 samples, 0.02%)</title><rect x="14.5" y="245" width="0.2" height="15.0" fill="rgb(240,197,16)" rx="2" ry="2" />
<text  x="17.48" y="255.5" ></text>
</g>
<g >
<title>blk_mq_requeue_work (24 samples, 0.02%)</title><rect x="20.2" y="421" width="0.2" height="15.0" fill="rgb(224,152,19)" rx="2" ry="2" />
<text  x="23.22" y="431.5" ></text>
</g>
<g >
<title>ip6tables (15 samples, 0.01%)</title><rect x="17.1" y="501" width="0.1" height="15.0" fill="rgb(220,15,51)" rx="2" ry="2" />
<text  x="20.13" y="511.5" ></text>
</g>
<g >
<title>do_syscall_64 (25 samples, 0.02%)</title><rect x="1188.2" y="197" width="0.2" height="15.0" fill="rgb(213,20,16)" rx="2" ry="2" />
<text  x="1191.16" y="207.5" ></text>
</g>
<g >
<title>virtscsi_add_cmd (22 samples, 0.01%)</title><rect x="20.2" y="277" width="0.2" height="15.0" fill="rgb(212,32,9)" rx="2" ry="2" />
<text  x="23.23" y="287.5" ></text>
</g>
<g >
<title>do_filp_open (48 samples, 0.03%)</title><rect x="27.8" y="405" width="0.4" height="15.0" fill="rgb(218,88,43)" rx="2" ry="2" />
<text  x="30.81" y="415.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).nextBlock (87 samples, 0.06%)</title><rect x="13.5" y="101" width="0.7" height="15.0" fill="rgb(251,122,28)" rx="2" ry="2" />
<text  x="16.50" y="111.5" ></text>
</g>
<g >
<title>[ld-musl-x86_64.so.1] (101 samples, 0.07%)</title><rect x="16.2" y="485" width="0.8" height="15.0" fill="rgb(220,125,4)" rx="2" ry="2" />
<text  x="19.23" y="495.5" ></text>
</g>
<g >
<title>finish_task_switch (115 samples, 0.08%)</title><rect x="1180.6" y="389" width="0.9" height="15.0" fill="rgb(234,68,23)" rx="2" ry="2" />
<text  x="1183.64" y="399.5" ></text>
</g>
<g >
<title>vmx_set_msr (29 samples, 0.02%)</title><rect x="31.9" y="309" width="0.2" height="15.0" fill="rgb(232,156,6)" rx="2" ry="2" />
<text  x="34.90" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (36 samples, 0.02%)</title><rect x="16.7" y="469" width="0.3" height="15.0" fill="rgb(221,149,28)" rx="2" ry="2" />
<text  x="19.74" y="479.5" ></text>
</g>
<g >
<title>swapper (146,908 samples, 96.87%)</title><rect x="38.5" y="501" width="1143.1" height="15.0" fill="rgb(231,20,11)" rx="2" ry="2" />
<text  x="41.49" y="511.5" >swapper</text>
</g>
<g >
<title>do_iter_readv_writev (18 samples, 0.01%)</title><rect x="21.9" y="389" width="0.1" height="15.0" fill="rgb(209,199,46)" rx="2" ry="2" />
<text  x="24.87" y="399.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (42 samples, 0.03%)</title><rect x="25.5" y="373" width="0.3" height="15.0" fill="rgb(208,108,15)" rx="2" ry="2" />
<text  x="28.50" y="383.5" ></text>
</g>
<g >
<title>syscall.Syscall6 (19 samples, 0.01%)</title><rect x="14.5" y="197" width="0.1" height="15.0" fill="rgb(249,130,12)" rx="2" ry="2" />
<text  x="17.50" y="207.5" ></text>
</g>
<g >
<title>do_futex (28 samples, 0.02%)</title><rect x="21.7" y="421" width="0.2" height="15.0" fill="rgb(234,189,44)" rx="2" ry="2" />
<text  x="24.66" y="431.5" ></text>
</g>
<g >
<title>vfs_writev (19 samples, 0.01%)</title><rect x="21.9" y="421" width="0.1" height="15.0" fill="rgb(228,92,54)" rx="2" ry="2" />
<text  x="24.87" y="431.5" ></text>
</g>
<g >
<title>vp_notify (20 samples, 0.01%)</title><rect x="20.2" y="245" width="0.2" height="15.0" fill="rgb(211,65,54)" rx="2" ry="2" />
<text  x="23.25" y="255.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (60 samples, 0.04%)</title><rect x="26.3" y="373" width="0.4" height="15.0" fill="rgb(254,139,33)" rx="2" ry="2" />
<text  x="29.25" y="383.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive/compression.(*readCloserWrapper).Read (88 samples, 0.06%)</title><rect x="15.0" y="117" width="0.7" height="15.0" fill="rgb(243,36,5)" rx="2" ry="2" />
<text  x="17.98" y="127.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (24 samples, 0.02%)</title><rect x="1179.2" y="341" width="0.2" height="15.0" fill="rgb(215,80,43)" rx="2" ry="2" />
<text  x="1182.17" y="351.5" ></text>
</g>
<g >
<title>archive/tar.(*Reader).Read (205 samples, 0.14%)</title><rect x="12.6" y="229" width="1.6" height="15.0" fill="rgb(217,58,31)" rx="2" ry="2" />
<text  x="15.63" y="239.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (39 samples, 0.03%)</title><rect x="25.5" y="357" width="0.3" height="15.0" fill="rgb(239,55,7)" rx="2" ry="2" />
<text  x="28.52" y="367.5" ></text>
</g>
<g >
<title>__apic_accept_irq (30 samples, 0.02%)</title><rect x="37.8" y="293" width="0.2" height="15.0" fill="rgb(251,28,30)" rx="2" ry="2" />
<text  x="40.79" y="303.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Write (23 samples, 0.02%)</title><rect x="14.2" y="213" width="0.2" height="15.0" fill="rgb(225,69,12)" rx="2" ry="2" />
<text  x="17.23" y="223.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/google.golang.org/grpc.(*Server).processUnaryRPC (466 samples, 0.31%)</title><rect x="12.5" y="437" width="3.6" height="15.0" fill="rgb(234,134,25)" rx="2" ry="2" />
<text  x="15.51" y="447.5" ></text>
</g>
<g >
<title>kvm_io_bus_write (58 samples, 0.04%)</title><rect x="31.3" y="325" width="0.4" height="15.0" fill="rgb(245,138,8)" rx="2" ry="2" />
<text  x="34.27" y="335.5" ></text>
</g>
<g >
<title>finish_task_switch (35 samples, 0.02%)</title><rect x="37.1" y="293" width="0.3" height="15.0" fill="rgb(207,185,22)" rx="2" ry="2" />
<text  x="40.15" y="303.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/diff/apply.apply (451 samples, 0.30%)</title><rect x="12.5" y="309" width="3.5" height="15.0" fill="rgb(252,82,7)" rx="2" ry="2" />
<text  x="15.51" y="319.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (24 samples, 0.02%)</title><rect x="1179.2" y="389" width="0.2" height="15.0" fill="rgb(212,8,46)" rx="2" ry="2" />
<text  x="1182.17" y="399.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive.applyNaive (305 samples, 0.20%)</title><rect x="12.5" y="277" width="2.4" height="15.0" fill="rgb(228,120,36)" rx="2" ry="2" />
<text  x="15.52" y="287.5" ></text>
</g>
<g >
<title>kvm_irq_delivery_to_apic (19 samples, 0.01%)</title><rect x="31.9" y="261" width="0.2" height="15.0" fill="rgb(253,77,8)" rx="2" ry="2" />
<text  x="34.93" y="271.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (25 samples, 0.02%)</title><rect x="1188.2" y="213" width="0.2" height="15.0" fill="rgb(248,198,49)" rx="2" ry="2" />
<text  x="1191.16" y="223.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (16 samples, 0.01%)</title><rect x="21.7" y="389" width="0.1" height="15.0" fill="rgb(208,112,43)" rx="2" ry="2" />
<text  x="24.68" y="399.5" ></text>
</g>
<g >
<title>__srcu_read_unlock (24 samples, 0.02%)</title><rect x="34.2" y="309" width="0.2" height="15.0" fill="rgb(218,101,2)" rx="2" ry="2" />
<text  x="37.18" y="319.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive.createTarFile (280 samples, 0.18%)</title><rect x="12.6" y="261" width="2.2" height="15.0" fill="rgb(236,74,23)" rx="2" ry="2" />
<text  x="15.58" y="271.5" ></text>
</g>
<g >
<title>__apic_accept_irq (16 samples, 0.01%)</title><rect x="31.9" y="229" width="0.2" height="15.0" fill="rgb(223,132,2)" rx="2" ry="2" />
<text  x="34.95" y="239.5" ></text>
</g>
<g >
<title>vfs_write (18 samples, 0.01%)</title><rect x="14.3" y="133" width="0.1" height="15.0" fill="rgb(230,203,53)" rx="2" ry="2" />
<text  x="17.26" y="143.5" ></text>
</g>
<g >
<title>__fcheck_files (29 samples, 0.02%)</title><rect x="24.4" y="357" width="0.2" height="15.0" fill="rgb(253,124,34)" rx="2" ry="2" />
<text  x="27.36" y="367.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/github.com/containerd/continuity/fs.walkLinks (13 samples, 0.01%)</title><rect x="14.8" y="213" width="0.1" height="15.0" fill="rgb(206,40,45)" rx="2" ry="2" />
<text  x="17.77" y="223.5" ></text>
</g>
<g >
<title>journal_submit_commit_record (19 samples, 0.01%)</title><rect x="18.0" y="421" width="0.1" height="15.0" fill="rgb(225,1,34)" rx="2" ry="2" />
<text  x="20.95" y="431.5" ></text>
</g>
<g >
<title>do_syscall_64 (893 samples, 0.59%)</title><rect x="31.1" y="453" width="7.0" height="15.0" fill="rgb(216,209,33)" rx="2" ry="2" />
<text  x="34.11" y="463.5" ></text>
</g>
<g >
<title>do_iter_write (16 samples, 0.01%)</title><rect x="21.9" y="357" width="0.1" height="15.0" fill="rgb(227,25,29)" rx="2" ry="2" />
<text  x="24.87" y="367.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/services/content/contentserver.(*service).Write (25 samples, 0.02%)</title><rect x="12.3" y="389" width="0.2" height="15.0" fill="rgb(206,133,1)" rx="2" ry="2" />
<text  x="15.30" y="399.5" ></text>
</g>
<g >
<title>__raw_spin_unlock_irq (38 samples, 0.03%)</title><rect x="28.5" y="373" width="0.3" height="15.0" fill="rgb(241,64,23)" rx="2" ry="2" />
<text  x="31.46" y="383.5" ></text>
</g>
<g >
<title>[libglib-2.0.so.0.6400.6] (45 samples, 0.03%)</title><rect x="28.9" y="469" width="0.3" height="15.0" fill="rgb(233,64,10)" rx="2" ry="2" />
<text  x="31.89" y="479.5" ></text>
</g>
<g >
<title>os.openFileNolog (21 samples, 0.01%)</title><rect x="14.5" y="213" width="0.1" height="15.0" fill="rgb(205,88,51)" rx="2" ry="2" />
<text  x="17.48" y="223.5" ></text>
</g>
<g >
<title>[zedbox] (16 samples, 0.01%)</title><rect x="1181.8" y="373" width="0.2" height="15.0" fill="rgb(225,70,9)" rx="2" ry="2" />
<text  x="1184.84" y="383.5" ></text>
</g>
<g >
<title>irq_exit (24 samples, 0.02%)</title><rect x="1179.2" y="357" width="0.2" height="15.0" fill="rgb(244,150,16)" rx="2" ry="2" />
<text  x="1182.17" y="367.5" ></text>
</g>
<g >
<title>vmx_interrupt_allowed (137 samples, 0.09%)</title><rect x="35.9" y="293" width="1.1" height="15.0" fill="rgb(233,101,10)" rx="2" ry="2" />
<text  x="38.94" y="303.5" ></text>
</g>
<g >
<title>kvm_cpu_has_extint (18 samples, 0.01%)</title><rect x="35.7" y="277" width="0.1" height="15.0" fill="rgb(214,9,13)" rx="2" ry="2" />
<text  x="38.68" y="287.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive.openFile (14 samples, 0.01%)</title><rect x="15.8" y="213" width="0.1" height="15.0" fill="rgb(246,103,33)" rx="2" ry="2" />
<text  x="18.79" y="223.5" ></text>
</g>
<g >
<title>do_syscall_64 (15 samples, 0.01%)</title><rect x="1188.4" y="213" width="0.1" height="15.0" fill="rgb(245,19,47)" rx="2" ry="2" />
<text  x="1191.37" y="223.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).huffmanBlock (23 samples, 0.02%)</title><rect x="15.4" y="53" width="0.2" height="15.0" fill="rgb(247,104,5)" rx="2" ry="2" />
<text  x="18.41" y="63.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/diff/apply.(*readCounter).Read (88 samples, 0.06%)</title><rect x="15.0" y="165" width="0.7" height="15.0" fill="rgb(246,47,15)" rx="2" ry="2" />
<text  x="17.98" y="175.5" ></text>
</g>
<g >
<title>__blk_mq_delay_run_hw_queue (24 samples, 0.02%)</title><rect x="20.2" y="373" width="0.2" height="15.0" fill="rgb(216,26,48)" rx="2" ry="2" />
<text  x="23.22" y="383.5" ></text>
</g>
<g >
<title>ioeventfd_write (55 samples, 0.04%)</title><rect x="31.3" y="293" width="0.4" height="15.0" fill="rgb(236,4,53)" rx="2" ry="2" />
<text  x="34.27" y="303.5" ></text>
</g>
<g >
<title>kvm_arch_vcpu_runnable (298 samples, 0.20%)</title><rect x="34.7" y="309" width="2.3" height="15.0" fill="rgb(218,92,15)" rx="2" ry="2" />
<text  x="37.69" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (20 samples, 0.01%)</title><rect x="1189.0" y="293" width="0.1" height="15.0" fill="rgb(248,76,20)" rx="2" ry="2" />
<text  x="1191.99" y="303.5" ></text>
</g>
<g >
<title>[zedbox] (25 samples, 0.02%)</title><rect x="1181.8" y="453" width="0.2" height="15.0" fill="rgb(211,116,47)" rx="2" ry="2" />
<text  x="1184.81" y="463.5" ></text>
</g>
<g >
<title>[newlogd] (27 samples, 0.02%)</title><rect x="21.0" y="373" width="0.2" height="15.0" fill="rgb(212,225,45)" rx="2" ry="2" />
<text  x="23.97" y="383.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (891 samples, 0.59%)</title><rect x="31.1" y="437" width="6.9" height="15.0" fill="rgb(215,54,23)" rx="2" ry="2" />
<text  x="34.11" y="447.5" ></text>
</g>
<g >
<title>process_one_work (25 samples, 0.02%)</title><rect x="20.2" y="437" width="0.2" height="15.0" fill="rgb(206,146,46)" rx="2" ry="2" />
<text  x="23.21" y="447.5" ></text>
</g>
<g >
<title>runtime.systemstack (44 samples, 0.03%)</title><rect x="10.7" y="453" width="0.3" height="15.0" fill="rgb(240,66,52)" rx="2" ry="2" />
<text  x="13.66" y="463.5" ></text>
</g>
<g >
<title>[qemu-system-x86_64] (35 samples, 0.02%)</title><rect x="22.1" y="485" width="0.3" height="15.0" fill="rgb(249,150,45)" rx="2" ry="2" />
<text  x="25.09" y="495.5" ></text>
</g>
<g >
<title>new_sync_write (18 samples, 0.01%)</title><rect x="14.3" y="117" width="0.1" height="15.0" fill="rgb(234,12,34)" rx="2" ry="2" />
<text  x="17.26" y="127.5" ></text>
</g>
<g >
<title>do_syscall_64 (28 samples, 0.02%)</title><rect x="1189.3" y="309" width="0.2" height="15.0" fill="rgb(231,219,17)" rx="2" ry="2" />
<text  x="1192.26" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (28 samples, 0.02%)</title><rect x="1189.5" y="325" width="0.2" height="15.0" fill="rgb(219,2,26)" rx="2" ry="2" />
<text  x="1192.49" y="335.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (24 samples, 0.02%)</title><rect x="1179.2" y="373" width="0.2" height="15.0" fill="rgb(210,55,33)" rx="2" ry="2" />
<text  x="1182.17" y="383.5" ></text>
</g>
<g >
<title>__do_sys_futex (53 samples, 0.03%)</title><rect x="30.5" y="421" width="0.4" height="15.0" fill="rgb(228,156,39)" rx="2" ry="2" />
<text  x="33.49" y="431.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (41 samples, 0.03%)</title><rect x="27.0" y="373" width="0.3" height="15.0" fill="rgb(246,54,46)" rx="2" ry="2" />
<text  x="29.95" y="383.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (25 samples, 0.02%)</title><rect x="1179.4" y="325" width="0.2" height="15.0" fill="rgb(239,130,16)" rx="2" ry="2" />
<text  x="1182.43" y="335.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).huffmanBlock (69 samples, 0.05%)</title><rect x="13.5" y="85" width="0.6" height="15.0" fill="rgb(206,54,12)" rx="2" ry="2" />
<text  x="16.52" y="95.5" ></text>
</g>
<g >
<title>do_iter_write (18 samples, 0.01%)</title><rect x="21.9" y="405" width="0.1" height="15.0" fill="rgb(229,226,47)" rx="2" ry="2" />
<text  x="24.87" y="415.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/services/diff.(*service).Apply (451 samples, 0.30%)</title><rect x="12.5" y="373" width="3.5" height="15.0" fill="rgb(213,37,39)" rx="2" ry="2" />
<text  x="15.51" y="383.5" ></text>
</g>
<g >
<title>jq (225 samples, 0.15%)</title><rect x="18.2" y="501" width="1.8" height="15.0" fill="rgb(222,210,9)" rx="2" ry="2" />
<text  x="21.23" y="511.5" ></text>
</g>
<g >
<title>[newlogd] (31 samples, 0.02%)</title><rect x="20.9" y="405" width="0.3" height="15.0" fill="rgb(211,134,0)" rx="2" ry="2" />
<text  x="23.95" y="415.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/github.com/containerd/continuity/fs.walkLinks (13 samples, 0.01%)</title><rect x="14.8" y="197" width="0.1" height="15.0" fill="rgb(221,28,49)" rx="2" ry="2" />
<text  x="17.77" y="207.5" ></text>
</g>
<g >
<title>[zedbox] (88 samples, 0.06%)</title><rect x="1182.0" y="469" width="0.7" height="15.0" fill="rgb(238,163,50)" rx="2" ry="2" />
<text  x="1185.01" y="479.5" ></text>
</g>
<g >
<title>[zedbox] (752 samples, 0.50%)</title><rect x="1184.0" y="373" width="5.8" height="15.0" fill="rgb(242,219,3)" rx="2" ry="2" />
<text  x="1186.95" y="383.5" ></text>
</g>
<g >
<title>scsi_io_completion (59 samples, 0.04%)</title><rect x="1179.6" y="309" width="0.5" height="15.0" fill="rgb(227,205,49)" rx="2" ry="2" />
<text  x="1182.64" y="319.5" ></text>
</g>
<g >
<title>do_pwritev (19 samples, 0.01%)</title><rect x="21.9" y="437" width="0.1" height="15.0" fill="rgb(222,118,9)" rx="2" ry="2" />
<text  x="24.87" y="447.5" ></text>
</g>
<g >
<title>poll_schedule_timeout.constprop.9 (43 samples, 0.03%)</title><rect x="26.9" y="389" width="0.4" height="15.0" fill="rgb(245,98,29)" rx="2" ry="2" />
<text  x="29.94" y="399.5" ></text>
</g>
<g >
<title>__pollwait (50 samples, 0.03%)</title><rect x="25.1" y="373" width="0.4" height="15.0" fill="rgb(212,113,13)" rx="2" ry="2" />
<text  x="28.11" y="383.5" ></text>
</g>
<g >
<title>vfs_write (44 samples, 0.03%)</title><rect x="28.4" y="405" width="0.4" height="15.0" fill="rgb(234,79,8)" rx="2" ry="2" />
<text  x="31.45" y="415.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive.copyBuffered (229 samples, 0.15%)</title><rect x="12.6" y="245" width="1.8" height="15.0" fill="rgb(233,187,6)" rx="2" ry="2" />
<text  x="15.63" y="255.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (26 samples, 0.02%)</title><rect x="37.8" y="229" width="0.2" height="15.0" fill="rgb(250,223,42)" rx="2" ry="2" />
<text  x="40.80" y="239.5" ></text>
</g>
<g >
<title>[unknown] (60 samples, 0.04%)</title><rect x="29.8" y="469" width="0.4" height="15.0" fill="rgb(247,70,47)" rx="2" ry="2" />
<text  x="32.76" y="479.5" ></text>
</g>
<g >
<title>iptables (31 samples, 0.02%)</title><rect x="17.3" y="501" width="0.2" height="15.0" fill="rgb(207,126,44)" rx="2" ry="2" />
<text  x="20.25" y="511.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (15 samples, 0.01%)</title><rect x="10.5" y="373" width="0.1" height="15.0" fill="rgb(252,30,40)" rx="2" ry="2" />
<text  x="13.53" y="383.5" ></text>
</g>
<g >
<title>[jq] (70 samples, 0.05%)</title><rect x="19.3" y="469" width="0.5" height="15.0" fill="rgb(236,10,41)" rx="2" ry="2" />
<text  x="22.30" y="479.5" ></text>
</g>
<g >
<title>blk_update_request (31 samples, 0.02%)</title><rect x="1179.8" y="277" width="0.2" height="15.0" fill="rgb(250,113,30)" rx="2" ry="2" />
<text  x="1182.79" y="287.5" ></text>
</g>
<g >
<title>ksys_ioctl (891 samples, 0.59%)</title><rect x="31.1" y="421" width="6.9" height="15.0" fill="rgb(231,106,51)" rx="2" ry="2" />
<text  x="34.11" y="431.5" ></text>
</g>
<g >
<title>crypto/sha256.block (131 samples, 0.09%)</title><rect x="11.1" y="469" width="1.0" height="15.0" fill="rgb(234,96,24)" rx="2" ry="2" />
<text  x="14.08" y="479.5" ></text>
</g>
<g >
<title>do_idle (36,350 samples, 23.97%)</title><rect x="38.5" y="437" width="282.8" height="15.0" fill="rgb(230,178,36)" rx="2" ry="2" />
<text  x="41.50" y="447.5" >do_idle</text>
</g>
<g >
<title>[zedbox] (238 samples, 0.16%)</title><rect x="1186.7" y="245" width="1.8" height="15.0" fill="rgb(242,142,32)" rx="2" ry="2" />
<text  x="1189.65" y="255.5" ></text>
</g>
<g >
<title>memlogd (19 samples, 0.01%)</title><rect x="20.7" y="501" width="0.1" height="15.0" fill="rgb(236,228,11)" rx="2" ry="2" />
<text  x="23.65" y="511.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (26 samples, 0.02%)</title><rect x="37.8" y="245" width="0.2" height="15.0" fill="rgb(214,164,53)" rx="2" ry="2" />
<text  x="40.80" y="255.5" ></text>
</g>
<g >
<title>__get_free_pages (14 samples, 0.01%)</title><rect x="25.4" y="357" width="0.1" height="15.0" fill="rgb(225,83,31)" rx="2" ry="2" />
<text  x="28.39" y="367.5" ></text>
</g>
<g >
<title>[newlogd] (35 samples, 0.02%)</title><rect x="20.9" y="453" width="0.3" height="15.0" fill="rgb(228,166,51)" rx="2" ry="2" />
<text  x="23.92" y="463.5" ></text>
</g>
<g >
<title>kvm_vcpu_kick (14 samples, 0.01%)</title><rect x="31.9" y="213" width="0.2" height="15.0" fill="rgb(239,165,30)" rx="2" ry="2" />
<text  x="34.95" y="223.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/services/diff.(*local).Apply (451 samples, 0.30%)</title><rect x="12.5" y="357" width="3.5" height="15.0" fill="rgb(248,36,15)" rx="2" ry="2" />
<text  x="15.51" y="367.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/google.golang.org/grpc.(*Server).processStreamingRPC (28 samples, 0.02%)</title><rect x="12.3" y="437" width="0.2" height="15.0" fill="rgb(246,174,37)" rx="2" ry="2" />
<text  x="15.29" y="447.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (22 samples, 0.01%)</title><rect x="1180.1" y="261" width="0.2" height="15.0" fill="rgb(216,80,26)" rx="2" ry="2" />
<text  x="1183.09" y="271.5" ></text>
</g>
<g >
<title>qemu-system-x86 (2,164 samples, 1.43%)</title><rect x="21.4" y="501" width="16.9" height="15.0" fill="rgb(237,227,33)" rx="2" ry="2" />
<text  x="24.44" y="511.5" ></text>
</g>
<g >
<title>[newlogd] (35 samples, 0.02%)</title><rect x="20.9" y="485" width="0.3" height="15.0" fill="rgb(210,106,7)" rx="2" ry="2" />
<text  x="23.92" y="495.5" ></text>
</g>
<g >
<title>[zedbox] (930 samples, 0.61%)</title><rect x="1182.7" y="453" width="7.2" height="15.0" fill="rgb(212,24,45)" rx="2" ry="2" />
<text  x="1185.71" y="463.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).huffSym (25 samples, 0.02%)</title><rect x="15.2" y="53" width="0.2" height="15.0" fill="rgb(252,8,1)" rx="2" ry="2" />
<text  x="18.19" y="63.5" ></text>
</g>
<g >
<title>ktime_get (127 samples, 0.08%)</title><rect x="32.7" y="325" width="1.0" height="15.0" fill="rgb(241,167,4)" rx="2" ry="2" />
<text  x="35.70" y="335.5" ></text>
</g>
<g >
<title>vfs_ioctl (890 samples, 0.59%)</title><rect x="31.1" y="389" width="6.9" height="15.0" fill="rgb(214,126,30)" rx="2" ry="2" />
<text  x="34.12" y="399.5" ></text>
</g>
<g >
<title>[zedbox] (131 samples, 0.09%)</title><rect x="1187.1" y="213" width="1.1" height="15.0" fill="rgb(217,227,7)" rx="2" ry="2" />
<text  x="1190.14" y="223.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (51 samples, 0.03%)</title><rect x="21.6" y="469" width="0.4" height="15.0" fill="rgb(252,6,42)" rx="2" ry="2" />
<text  x="24.65" y="479.5" ></text>
</g>
<g >
<title>os.OpenFile (21 samples, 0.01%)</title><rect x="14.5" y="229" width="0.1" height="15.0" fill="rgb(216,76,47)" rx="2" ry="2" />
<text  x="17.48" y="239.5" ></text>
</g>
<g >
<title>[zedbox] (627 samples, 0.41%)</title><rect x="1184.6" y="341" width="4.9" height="15.0" fill="rgb(226,7,21)" rx="2" ry="2" />
<text  x="1187.60" y="351.5" ></text>
</g>
<g >
<title>[newlogd] (28 samples, 0.02%)</title><rect x="21.0" y="389" width="0.2" height="15.0" fill="rgb(240,169,52)" rx="2" ry="2" />
<text  x="23.96" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.01%)</title><rect x="1188.4" y="229" width="0.1" height="15.0" fill="rgb(237,204,8)" rx="2" ry="2" />
<text  x="1191.37" y="239.5" ></text>
</g>
<g >
<title>napi_gro_receive (22 samples, 0.01%)</title><rect x="1180.1" y="277" width="0.2" height="15.0" fill="rgb(211,40,9)" rx="2" ry="2" />
<text  x="1183.09" y="287.5" ></text>
</g>
<g >
<title>__sched_text_start (28 samples, 0.02%)</title><rect x="27.1" y="341" width="0.2" height="15.0" fill="rgb(215,221,52)" rx="2" ry="2" />
<text  x="30.06" y="351.5" ></text>
</g>
<g >
<title>runtime.usleep (32 samples, 0.02%)</title><rect x="10.4" y="437" width="0.3" height="15.0" fill="rgb(210,218,1)" rx="2" ry="2" />
<text  x="13.41" y="447.5" ></text>
</g>
<g >
<title>do_idle (110,555 samples, 72.90%)</title><rect x="321.3" y="437" width="860.3" height="15.0" fill="rgb(218,168,28)" rx="2" ry="2" />
<text  x="324.34" y="447.5" >do_idle</text>
</g>
<g >
<title>jbd2/sda9-8 (95 samples, 0.06%)</title><rect x="17.5" y="501" width="0.7" height="15.0" fill="rgb(251,111,40)" rx="2" ry="2" />
<text  x="20.49" y="511.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).huffSym (40 samples, 0.03%)</title><rect x="13.7" y="69" width="0.3" height="15.0" fill="rgb(221,142,2)" rx="2" ry="2" />
<text  x="16.72" y="79.5" ></text>
</g>
<g >
<title>start_kernel (36,350 samples, 23.97%)</title><rect x="38.5" y="469" width="282.8" height="15.0" fill="rgb(207,224,12)" rx="2" ry="2" />
<text  x="41.50" y="479.5" >start_kernel</text>
</g>
<g >
<title>__kvm_io_bus_write (58 samples, 0.04%)</title><rect x="31.3" y="309" width="0.4" height="15.0" fill="rgb(231,52,11)" rx="2" ry="2" />
<text  x="34.27" y="319.5" ></text>
</g>
<g >
<title>__blk_mq_run_hw_queue (23 samples, 0.02%)</title><rect x="20.2" y="357" width="0.2" height="15.0" fill="rgb(236,219,12)" rx="2" ry="2" />
<text  x="23.22" y="367.5" ></text>
</g>
<g >
<title>[zedbox] (803 samples, 0.53%)</title><rect x="1183.7" y="389" width="6.2" height="15.0" fill="rgb(249,111,54)" rx="2" ry="2" />
<text  x="1186.65" y="399.5" ></text>
</g>
<g >
<title>finish_task_switch (28 samples, 0.02%)</title><rect x="27.1" y="325" width="0.2" height="15.0" fill="rgb(235,213,36)" rx="2" ry="2" />
<text  x="30.06" y="335.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/github.com/grpc-ecosystem/go-grpc-prometheus.(*ServerMetrics).StreamServerInterceptor.func1 (28 samples, 0.02%)</title><rect x="12.3" y="421" width="0.2" height="15.0" fill="rgb(225,129,45)" rx="2" ry="2" />
<text  x="15.29" y="431.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/github.com/containerd/continuity/fs.walkLinks (14 samples, 0.01%)</title><rect x="14.8" y="245" width="0.1" height="15.0" fill="rgb(212,46,42)" rx="2" ry="2" />
<text  x="17.76" y="255.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (23 samples, 0.02%)</title><rect x="10.5" y="421" width="0.2" height="15.0" fill="rgb(207,32,12)" rx="2" ry="2" />
<text  x="13.48" y="431.5" ></text>
</g>
<g >
<title>schedule (36 samples, 0.02%)</title><rect x="37.1" y="325" width="0.3" height="15.0" fill="rgb(225,205,36)" rx="2" ry="2" />
<text  x="40.14" y="335.5" ></text>
</g>
<g >
<title>ksys_read (17 samples, 0.01%)</title><rect x="1188.6" y="213" width="0.2" height="15.0" fill="rgb(213,50,16)" rx="2" ry="2" />
<text  x="1191.62" y="223.5" ></text>
</g>
<g >
<title>skip_emulated_instruction (31 samples, 0.02%)</title><rect x="32.4" y="325" width="0.2" height="15.0" fill="rgb(225,14,8)" rx="2" ry="2" />
<text  x="35.39" y="335.5" ></text>
</g>
<g >
<title>kvm_skip_emulated_instruction (32 samples, 0.02%)</title><rect x="32.4" y="341" width="0.2" height="15.0" fill="rgb(227,154,27)" rx="2" ry="2" />
<text  x="35.38" y="351.5" ></text>
</g>
<g >
<title>blk_mq_dispatch_rq_list (23 samples, 0.02%)</title><rect x="20.2" y="325" width="0.2" height="15.0" fill="rgb(238,21,32)" rx="2" ry="2" />
<text  x="23.22" y="335.5" ></text>
</g>
<g >
<title>kthread (90 samples, 0.06%)</title><rect x="17.5" y="469" width="0.7" height="15.0" fill="rgb(247,175,37)" rx="2" ry="2" />
<text  x="20.53" y="479.5" ></text>
</g>
<g >
<title>archive/tar.(*regFileReader).Read (88 samples, 0.06%)</title><rect x="15.0" y="181" width="0.7" height="15.0" fill="rgb(225,121,47)" rx="2" ry="2" />
<text  x="17.98" y="191.5" ></text>
</g>
<g >
<title>do_syscall_64 (32 samples, 0.02%)</title><rect x="1188.5" y="229" width="0.3" height="15.0" fill="rgb(213,184,17)" rx="2" ry="2" />
<text  x="1191.51" y="239.5" ></text>
</g>
<g >
<title>os.(*File).Write (23 samples, 0.02%)</title><rect x="14.2" y="229" width="0.2" height="15.0" fill="rgb(247,159,26)" rx="2" ry="2" />
<text  x="17.23" y="239.5" ></text>
</g>
<g >
<title>kvm_emulate_wrmsr (31 samples, 0.02%)</title><rect x="31.9" y="341" width="0.2" height="15.0" fill="rgb(240,14,35)" rx="2" ry="2" />
<text  x="34.90" y="351.5" ></text>
</g>
<g >
<title>schedule (13 samples, 0.01%)</title><rect x="21.7" y="373" width="0.1" height="15.0" fill="rgb(208,107,29)" rx="2" ry="2" />
<text  x="24.70" y="383.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).Read (203 samples, 0.13%)</title><rect x="12.6" y="117" width="1.6" height="15.0" fill="rgb(242,225,19)" rx="2" ry="2" />
<text  x="15.63" y="127.5" ></text>
</g>
<g >
<title>do_sys_poll (552 samples, 0.36%)</title><rect x="23.1" y="405" width="4.3" height="15.0" fill="rgb(215,93,46)" rx="2" ry="2" />
<text  x="26.12" y="415.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (19 samples, 0.01%)</title><rect x="1189.6" y="261" width="0.1" height="15.0" fill="rgb(213,76,34)" rx="2" ry="2" />
<text  x="1192.56" y="271.5" ></text>
</g>
<g >
<title>do_IRQ (108 samples, 0.07%)</title><rect x="1179.4" y="373" width="0.9" height="15.0" fill="rgb(206,90,10)" rx="2" ry="2" />
<text  x="1182.43" y="383.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (17 samples, 0.01%)</title><rect x="14.3" y="101" width="0.1" height="15.0" fill="rgb(244,207,48)" rx="2" ry="2" />
<text  x="17.27" y="111.5" ></text>
</g>
<g >
<title>jbd2_journal_commit_transaction (90 samples, 0.06%)</title><rect x="17.5" y="437" width="0.7" height="15.0" fill="rgb(222,73,20)" rx="2" ry="2" />
<text  x="20.53" y="447.5" ></text>
</g>
<g >
<title>[zedbox] (24 samples, 0.02%)</title><rect x="1181.8" y="389" width="0.2" height="15.0" fill="rgb(222,148,31)" rx="2" ry="2" />
<text  x="1184.82" y="399.5" ></text>
</g>
<g >
<title>__generic_file_write_iter (16 samples, 0.01%)</title><rect x="21.9" y="309" width="0.1" height="15.0" fill="rgb(230,115,24)" rx="2" ry="2" />
<text  x="24.87" y="319.5" ></text>
</g>
<g >
<title>kvm_arch_vcpu_load (19 samples, 0.01%)</title><rect x="37.3" y="277" width="0.1" height="15.0" fill="rgb(241,193,50)" rx="2" ry="2" />
<text  x="40.26" y="287.5" ></text>
</g>
<g >
<title>finish_task_switch (13 samples, 0.01%)</title><rect x="21.7" y="341" width="0.1" height="15.0" fill="rgb(221,140,28)" rx="2" ry="2" />
<text  x="24.70" y="351.5" ></text>
</g>
<g >
<title>__do_sys_ppoll (559 samples, 0.37%)</title><rect x="23.1" y="421" width="4.4" height="15.0" fill="rgb(249,196,32)" rx="2" ry="2" />
<text  x="26.12" y="431.5" ></text>
</g>
<g >
<title>[newlogd] (35 samples, 0.02%)</title><rect x="20.9" y="469" width="0.3" height="15.0" fill="rgb(212,83,3)" rx="2" ry="2" />
<text  x="23.92" y="479.5" ></text>
</g>
<g >
<title>virtscsi_queuecommand (22 samples, 0.01%)</title><rect x="20.2" y="293" width="0.2" height="15.0" fill="rgb(250,120,28)" rx="2" ry="2" />
<text  x="23.23" y="303.5" ></text>
</g>
<g >
<title>[zedbox] (696 samples, 0.46%)</title><rect x="1184.3" y="357" width="5.4" height="15.0" fill="rgb(209,128,16)" rx="2" ry="2" />
<text  x="1187.30" y="367.5" ></text>
</g>
<g >
<title>[zedbox] (493 samples, 0.33%)</title><rect x="1185.3" y="309" width="3.9" height="15.0" fill="rgb(239,181,16)" rx="2" ry="2" />
<text  x="1188.32" y="319.5" ></text>
</g>
<g >
<title>[zedbox] (55 samples, 0.04%)</title><rect x="1187.6" y="165" width="0.4" height="15.0" fill="rgb(242,223,46)" rx="2" ry="2" />
<text  x="1190.57" y="175.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (28 samples, 0.02%)</title><rect x="1189.5" y="341" width="0.2" height="15.0" fill="rgb(214,66,18)" rx="2" ry="2" />
<text  x="1192.49" y="351.5" ></text>
</g>
<g >
<title>proc_single_show (13 samples, 0.01%)</title><rect x="1188.6" y="165" width="0.1" height="15.0" fill="rgb(248,193,4)" rx="2" ry="2" />
<text  x="1191.65" y="175.5" ></text>
</g>
<g >
<title>[unknown] (1,110 samples, 0.73%)</title><rect x="22.4" y="485" width="8.6" height="15.0" fill="rgb(247,187,16)" rx="2" ry="2" />
<text  x="25.36" y="495.5" ></text>
</g>
<g >
<title>[zedbox] (34 samples, 0.02%)</title><rect x="1187.7" y="133" width="0.3" height="15.0" fill="rgb(230,220,17)" rx="2" ry="2" />
<text  x="1190.70" y="143.5" ></text>
</g>
<g >
<title>getname_flags (17 samples, 0.01%)</title><rect x="28.2" y="405" width="0.1" height="15.0" fill="rgb(206,106,17)" rx="2" ry="2" />
<text  x="31.20" y="415.5" ></text>
</g>
<g >
<title>kvm_send_userspace_msi (30 samples, 0.02%)</title><rect x="37.8" y="357" width="0.2" height="15.0" fill="rgb(222,181,7)" rx="2" ry="2" />
<text  x="40.79" y="367.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (59 samples, 0.04%)</title><rect x="26.3" y="357" width="0.4" height="15.0" fill="rgb(223,182,10)" rx="2" ry="2" />
<text  x="29.26" y="367.5" ></text>
</g>
<g >
<title>zedbox (1,052 samples, 0.69%)</title><rect x="1181.8" y="501" width="8.2" height="15.0" fill="rgb(237,137,34)" rx="2" ry="2" />
<text  x="1184.81" y="511.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (41 samples, 0.03%)</title><rect x="30.6" y="341" width="0.3" height="15.0" fill="rgb(220,56,25)" rx="2" ry="2" />
<text  x="33.58" y="351.5" ></text>
</g>
<g >
<title>poll_freewait (94 samples, 0.06%)</title><rect x="26.2" y="389" width="0.7" height="15.0" fill="rgb(224,81,49)" rx="2" ry="2" />
<text  x="29.21" y="399.5" ></text>
</g>
<g >
<title>__sched_text_start (36 samples, 0.02%)</title><rect x="37.1" y="309" width="0.3" height="15.0" fill="rgb(216,49,8)" rx="2" ry="2" />
<text  x="40.14" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (22 samples, 0.01%)</title><rect x="1188.8" y="261" width="0.1" height="15.0" fill="rgb(237,133,19)" rx="2" ry="2" />
<text  x="1191.76" y="271.5" ></text>
</g>
<g >
<title>__kvm_set_msr (29 samples, 0.02%)</title><rect x="31.9" y="325" width="0.2" height="15.0" fill="rgb(240,98,28)" rx="2" ry="2" />
<text  x="34.90" y="335.5" ></text>
</g>
<g >
<title>compress/gzip.(*Reader).Read (205 samples, 0.14%)</title><rect x="12.6" y="133" width="1.6" height="15.0" fill="rgb(224,206,21)" rx="2" ry="2" />
<text  x="15.63" y="143.5" ></text>
</g>
<g >
<title>__generic_file_write_iter (19 samples, 0.01%)</title><rect x="1189.6" y="245" width="0.1" height="15.0" fill="rgb(252,109,52)" rx="2" ry="2" />
<text  x="1192.56" y="255.5" ></text>
</g>
<g >
<title>__srcu_read_lock (45 samples, 0.03%)</title><rect x="33.8" y="309" width="0.4" height="15.0" fill="rgb(254,77,48)" rx="2" ry="2" />
<text  x="36.83" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (898 samples, 0.59%)</title><rect x="31.1" y="469" width="7.0" height="15.0" fill="rgb(221,130,8)" rx="2" ry="2" />
<text  x="34.11" y="479.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (22 samples, 0.01%)</title><rect x="1180.1" y="245" width="0.2" height="15.0" fill="rgb(250,207,20)" rx="2" ry="2" />
<text  x="1183.09" y="255.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (14 samples, 0.01%)</title><rect x="37.1" y="261" width="0.2" height="15.0" fill="rgb(216,228,0)" rx="2" ry="2" />
<text  x="40.15" y="271.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (31 samples, 0.02%)</title><rect x="27.5" y="421" width="0.3" height="15.0" fill="rgb(232,31,38)" rx="2" ry="2" />
<text  x="30.51" y="431.5" ></text>
</g>
<g >
<title>ret_from_intr (108 samples, 0.07%)</title><rect x="1179.4" y="389" width="0.9" height="15.0" fill="rgb(222,17,36)" rx="2" ry="2" />
<text  x="1182.43" y="399.5" ></text>
</g>
<g >
<title>kvm_vcpu_block (626 samples, 0.41%)</title><rect x="32.6" y="341" width="4.9" height="15.0" fill="rgb(213,11,10)" rx="2" ry="2" />
<text  x="35.63" y="351.5" ></text>
</g>
<g >
<title>apic_enabled (29 samples, 0.02%)</title><rect x="34.5" y="293" width="0.2" height="15.0" fill="rgb(248,51,49)" rx="2" ry="2" />
<text  x="37.46" y="303.5" ></text>
</g>
<g >
<title>futex_wake (52 samples, 0.03%)</title><rect x="30.5" y="389" width="0.4" height="15.0" fill="rgb(244,144,28)" rx="2" ry="2" />
<text  x="33.49" y="399.5" ></text>
</g>
<g >
<title>[zedbox] (25 samples, 0.02%)</title><rect x="1181.8" y="437" width="0.2" height="15.0" fill="rgb(239,205,30)" rx="2" ry="2" />
<text  x="1184.81" y="447.5" ></text>
</g>
<g >
<title>generic_perform_write (16 samples, 0.01%)</title><rect x="14.3" y="69" width="0.1" height="15.0" fill="rgb(224,171,49)" rx="2" ry="2" />
<text  x="17.28" y="79.5" ></text>
</g>
<g >
<title>[zedbox] (420 samples, 0.28%)</title><rect x="1185.7" y="293" width="3.3" height="15.0" fill="rgb(235,224,0)" rx="2" ry="2" />
<text  x="1188.72" y="303.5" ></text>
</g>
<g >
<title>ret_from_fork (90 samples, 0.06%)</title><rect x="17.5" y="485" width="0.7" height="15.0" fill="rgb(234,39,27)" rx="2" ry="2" />
<text  x="20.53" y="495.5" ></text>
</g>
<g >
<title>kvm_vcpu_wake_up (13 samples, 0.01%)</title><rect x="32.0" y="197" width="0.1" height="15.0" fill="rgb(245,66,10)" rx="2" ry="2" />
<text  x="34.96" y="207.5" ></text>
</g>
<g >
<title>blk_mq_run_hw_queues (24 samples, 0.02%)</title><rect x="20.2" y="405" width="0.2" height="15.0" fill="rgb(219,226,27)" rx="2" ry="2" />
<text  x="23.22" y="415.5" ></text>
</g>
<g >
<title>__raw_spin_unlock_irq (44 samples, 0.03%)</title><rect x="321.0" y="373" width="0.3" height="15.0" fill="rgb(224,141,28)" rx="2" ry="2" />
<text  x="323.97" y="383.5" ></text>
</g>
<g >
<title>ksys_write (19 samples, 0.01%)</title><rect x="1189.6" y="309" width="0.1" height="15.0" fill="rgb(208,181,7)" rx="2" ry="2" />
<text  x="1192.56" y="319.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).huffSym (59 samples, 0.04%)</title><rect x="13.0" y="85" width="0.4" height="15.0" fill="rgb(251,78,50)" rx="2" ry="2" />
<text  x="15.98" y="95.5" ></text>
</g>
<g >
<title>[newlogd] (22 samples, 0.01%)</title><rect x="21.0" y="357" width="0.2" height="15.0" fill="rgb(241,37,6)" rx="2" ry="2" />
<text  x="23.99" y="367.5" ></text>
</g>
<g >
<title>__do_sys_futex (28 samples, 0.02%)</title><rect x="21.7" y="437" width="0.2" height="15.0" fill="rgb(241,32,22)" rx="2" ry="2" />
<text  x="24.66" y="447.5" ></text>
</g>
<g >
<title>io.(*teeReader).Read (205 samples, 0.14%)</title><rect x="12.6" y="181" width="1.6" height="15.0" fill="rgb(229,154,39)" rx="2" ry="2" />
<text  x="15.63" y="191.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive.copyBuffered (98 samples, 0.06%)</title><rect x="15.0" y="213" width="0.7" height="15.0" fill="rgb(244,77,37)" rx="2" ry="2" />
<text  x="17.97" y="223.5" ></text>
</g>
<g >
<title>schedule_idle (116 samples, 0.08%)</title><rect x="1180.6" y="421" width="0.9" height="15.0" fill="rgb(218,91,4)" rx="2" ry="2" />
<text  x="1183.63" y="431.5" ></text>
</g>
<g >
<title>ioctl (908 samples, 0.60%)</title><rect x="31.0" y="485" width="7.1" height="15.0" fill="rgb(234,182,34)" rx="2" ry="2" />
<text  x="34.03" y="495.5" ></text>
</g>
<g >
<title>fput_many (40 samples, 0.03%)</title><rect x="25.9" y="389" width="0.3" height="15.0" fill="rgb(226,125,17)" rx="2" ry="2" />
<text  x="28.90" y="399.5" ></text>
</g>
<g >
<title>kvm_cpu_has_interrupt (90 samples, 0.06%)</title><rect x="35.1" y="293" width="0.7" height="15.0" fill="rgb(210,21,52)" rx="2" ry="2" />
<text  x="38.14" y="303.5" ></text>
</g>
<g >
<title>[zedbox] (44 samples, 0.03%)</title><rect x="1187.6" y="149" width="0.4" height="15.0" fill="rgb(216,102,11)" rx="2" ry="2" />
<text  x="1190.64" y="159.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).Read (86 samples, 0.06%)</title><rect x="15.0" y="85" width="0.6" height="15.0" fill="rgb(222,119,39)" rx="2" ry="2" />
<text  x="17.98" y="95.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/diff/apply.(*readCounter).Read (205 samples, 0.14%)</title><rect x="12.6" y="197" width="1.6" height="15.0" fill="rgb(243,111,49)" rx="2" ry="2" />
<text  x="15.63" y="207.5" ></text>
</g>
<g >
<title>cpu_startup_entry (110,556 samples, 72.90%)</title><rect x="321.3" y="453" width="860.3" height="15.0" fill="rgb(227,113,47)" rx="2" ry="2" />
<text  x="324.34" y="463.5" >cpu_startup_entry</text>
</g>
<g >
<title>start_secondary (110,556 samples, 72.90%)</title><rect x="321.3" y="469" width="860.3" height="15.0" fill="rgb(227,156,46)" rx="2" ry="2" />
<text  x="324.34" y="479.5" >start_secondary</text>
</g>
<g >
<title>sem_post (62 samples, 0.04%)</title><rect x="30.4" y="469" width="0.5" height="15.0" fill="rgb(235,78,32)" rx="2" ry="2" />
<text  x="33.44" y="479.5" ></text>
</g>
<g >
<title>newlogd (44 samples, 0.03%)</title><rect x="20.9" y="501" width="0.4" height="15.0" fill="rgb(252,197,29)" rx="2" ry="2" />
<text  x="23.92" y="511.5" ></text>
</g>
<g >
<title>[zedbox] (322 samples, 0.21%)</title><rect x="1186.2" y="261" width="2.6" height="15.0" fill="rgb(229,153,14)" rx="2" ry="2" />
<text  x="1189.25" y="271.5" ></text>
</g>
<g >
<title>kvm_vcpu_check_block (443 samples, 0.29%)</title><rect x="33.7" y="325" width="3.4" height="15.0" fill="rgb(249,192,50)" rx="2" ry="2" />
<text  x="36.68" y="335.5" ></text>
</g>
<g >
<title>__do_insn_fetch_bytes (21 samples, 0.01%)</title><rect x="32.4" y="277" width="0.2" height="15.0" fill="rgb(238,170,30)" rx="2" ry="2" />
<text  x="35.45" y="287.5" ></text>
</g>
<g >
<title>runtime.sysmon (38 samples, 0.03%)</title><rect x="10.4" y="453" width="0.3" height="15.0" fill="rgb(237,229,9)" rx="2" ry="2" />
<text  x="13.37" y="463.5" ></text>
</g>
<g >
<title>bufio.(*Reader).ReadByte (15 samples, 0.01%)</title><rect x="13.3" y="69" width="0.1" height="15.0" fill="rgb(209,187,31)" rx="2" ry="2" />
<text  x="16.32" y="79.5" ></text>
</g>
<g >
<title>vfs_read (17 samples, 0.01%)</title><rect x="1188.6" y="197" width="0.2" height="15.0" fill="rgb(223,182,35)" rx="2" ry="2" />
<text  x="1191.62" y="207.5" ></text>
</g>
<g >
<title>__do_sys_nanosleep (21 samples, 0.01%)</title><rect x="10.5" y="389" width="0.1" height="15.0" fill="rgb(209,100,34)" rx="2" ry="2" />
<text  x="13.48" y="399.5" ></text>
</g>
<g >
<title>iowrite16 (19 samples, 0.01%)</title><rect x="20.3" y="229" width="0.1" height="15.0" fill="rgb(212,75,24)" rx="2" ry="2" />
<text  x="23.26" y="239.5" ></text>
</g>
<g >
<title>runtime.goexit (527 samples, 0.35%)</title><rect x="12.1" y="485" width="4.1" height="15.0" fill="rgb(209,168,33)" rx="2" ry="2" />
<text  x="15.11" y="495.5" ></text>
</g>
<g >
<title>archive/tar.(*regFileReader).Read (205 samples, 0.14%)</title><rect x="12.6" y="213" width="1.6" height="15.0" fill="rgb(254,181,11)" rx="2" ry="2" />
<text  x="15.63" y="223.5" ></text>
</g>
<g >
<title>x86_decode_insn (24 samples, 0.02%)</title><rect x="32.4" y="293" width="0.2" height="15.0" fill="rgb(229,26,48)" rx="2" ry="2" />
<text  x="35.44" y="303.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/diff/apply.(*fsApplier).Apply (451 samples, 0.30%)</title><rect x="12.5" y="325" width="3.5" height="15.0" fill="rgb(240,130,15)" rx="2" ry="2" />
<text  x="15.51" y="335.5" ></text>
</g>
<g >
<title>virtqueue_notify (20 samples, 0.01%)</title><rect x="20.2" y="261" width="0.2" height="15.0" fill="rgb(227,140,1)" rx="2" ry="2" />
<text  x="23.25" y="271.5" ></text>
</g>
<g >
<title>do_vfs_ioctl (891 samples, 0.59%)</title><rect x="31.1" y="405" width="6.9" height="15.0" fill="rgb(225,116,26)" rx="2" ry="2" />
<text  x="34.11" y="415.5" ></text>
</g>
<g >
<title>io.(*teeReader).Read (88 samples, 0.06%)</title><rect x="15.0" y="149" width="0.7" height="15.0" fill="rgb(240,27,15)" rx="2" ry="2" />
<text  x="17.98" y="159.5" ></text>
</g>
<g >
<title>containerd-shim (13 samples, 0.01%)</title><rect x="10.0" y="501" width="0.1" height="15.0" fill="rgb(232,183,5)" rx="2" ry="2" />
<text  x="13.04" y="511.5" ></text>
</g>
<g >
<title>kvm_irq_delivery_to_apic (30 samples, 0.02%)</title><rect x="37.8" y="325" width="0.2" height="15.0" fill="rgb(207,218,19)" rx="2" ry="2" />
<text  x="40.79" y="335.5" ></text>
</g>
<g >
<title>[zedbox] (96 samples, 0.06%)</title><rect x="1187.3" y="197" width="0.8" height="15.0" fill="rgb(217,2,4)" rx="2" ry="2" />
<text  x="1190.32" y="207.5" ></text>
</g>
<g >
<title>blk_mq_run_hw_queue (24 samples, 0.02%)</title><rect x="20.2" y="389" width="0.2" height="15.0" fill="rgb(239,41,14)" rx="2" ry="2" />
<text  x="23.22" y="399.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/api/services/diff/v1._Diff_Apply_Handler (451 samples, 0.30%)</title><rect x="12.5" y="421" width="3.5" height="15.0" fill="rgb(254,6,7)" rx="2" ry="2" />
<text  x="15.51" y="431.5" ></text>
</g>
<g >
<title>[zedbox] (921 samples, 0.61%)</title><rect x="1182.8" y="437" width="7.1" height="15.0" fill="rgb(238,64,22)" rx="2" ry="2" />
<text  x="1185.78" y="447.5" ></text>
</g>
<g >
<title>virtnet_poll (22 samples, 0.01%)</title><rect x="1180.1" y="309" width="0.2" height="15.0" fill="rgb(232,93,22)" rx="2" ry="2" />
<text  x="1183.09" y="319.5" ></text>
</g>
<g >
<title>[unknown] (114 samples, 0.08%)</title><rect x="1181.8" y="485" width="0.9" height="15.0" fill="rgb(228,195,52)" rx="2" ry="2" />
<text  x="1184.81" y="495.5" ></text>
</g>
<g >
<title>kvm_vcpu_ioctl (856 samples, 0.56%)</title><rect x="31.1" y="373" width="6.7" height="15.0" fill="rgb(223,218,30)" rx="2" ry="2" />
<text  x="34.13" y="383.5" ></text>
</g>
<g >
<title>kvm_lapic_reg_write (25 samples, 0.02%)</title><rect x="31.9" y="277" width="0.2" height="15.0" fill="rgb(240,85,18)" rx="2" ry="2" />
<text  x="34.92" y="287.5" ></text>
</g>
<g >
<title>kvm_apic_has_interrupt (52 samples, 0.03%)</title><rect x="35.3" y="277" width="0.4" height="15.0" fill="rgb(206,92,7)" rx="2" ry="2" />
<text  x="38.27" y="287.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (108 samples, 0.07%)</title><rect x="1179.4" y="341" width="0.9" height="15.0" fill="rgb(252,40,32)" rx="2" ry="2" />
<text  x="1182.43" y="351.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/diff.(*compressedProcessor).Read (88 samples, 0.06%)</title><rect x="15.0" y="133" width="0.7" height="15.0" fill="rgb(251,201,46)" rx="2" ry="2" />
<text  x="17.98" y="143.5" ></text>
</g>
<g >
<title>[unknown] (25 samples, 0.02%)</title><rect x="1181.8" y="469" width="0.2" height="15.0" fill="rgb(230,205,41)" rx="2" ry="2" />
<text  x="1184.81" y="479.5" ></text>
</g>
<g >
<title>schedule_idle (47 samples, 0.03%)</title><rect x="321.0" y="421" width="0.3" height="15.0" fill="rgb(248,45,24)" rx="2" ry="2" />
<text  x="323.95" y="431.5" ></text>
</g>
<g >
<title>do_nanosleep (15 samples, 0.01%)</title><rect x="10.5" y="357" width="0.1" height="15.0" fill="rgb(232,29,38)" rx="2" ry="2" />
<text  x="13.53" y="367.5" ></text>
</g>
<g >
<title>kvm_set_msi (30 samples, 0.02%)</title><rect x="37.8" y="341" width="0.2" height="15.0" fill="rgb(252,90,18)" rx="2" ry="2" />
<text  x="40.79" y="351.5" ></text>
</g>
<g >
<title>do_syscall_64 (56 samples, 0.04%)</title><rect x="30.5" y="437" width="0.4" height="15.0" fill="rgb(247,111,1)" rx="2" ry="2" />
<text  x="33.49" y="447.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/mount.WithTempMount (145 samples, 0.10%)</title><rect x="14.9" y="293" width="1.1" height="15.0" fill="rgb(250,185,44)" rx="2" ry="2" />
<text  x="17.89" y="303.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/api/services/content/v1._Content_Write_Handler (25 samples, 0.02%)</title><rect x="12.3" y="405" width="0.2" height="15.0" fill="rgb(239,38,8)" rx="2" ry="2" />
<text  x="15.30" y="415.5" ></text>
</g>
<g >
<title>[unknown] (252 samples, 0.17%)</title><rect x="10.1" y="485" width="2.0" height="15.0" fill="rgb(252,114,16)" rx="2" ry="2" />
<text  x="13.14" y="495.5" ></text>
</g>
</g>
</svg>
