<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="566" onload="init(evt)" viewBox="0 0 1200 566" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="566.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="549" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="549" > </text>
<g id="frames">
<g >
<title>do_syscall_64 (15 samples, 0.01%)</title><rect x="17.4" y="133" width="0.1" height="15.0" fill="rgb(215,74,1)" rx="2" ry="2" />
<text  x="20.38" y="143.5" ></text>
</g>
<g >
<title>net_rx_action (18 samples, 0.01%)</title><rect x="1179.2" y="325" width="0.2" height="15.0" fill="rgb(222,229,34)" rx="2" ry="2" />
<text  x="1182.25" y="335.5" ></text>
</g>
<g >
<title>__apic_update_ppr (15 samples, 0.01%)</title><rect x="39.5" y="261" width="0.1" height="15.0" fill="rgb(254,56,36)" rx="2" ry="2" />
<text  x="42.49" y="271.5" ></text>
</g>
<g >
<title>[memlogd] (18 samples, 0.01%)</title><rect x="22.5" y="485" width="0.2" height="15.0" fill="rgb(229,185,35)" rx="2" ry="2" />
<text  x="25.53" y="495.5" ></text>
</g>
<g >
<title>__raw_spin_unlock_irq (121 samples, 0.09%)</title><rect x="1179.8" y="373" width="1.0" height="15.0" fill="rgb(227,200,50)" rx="2" ry="2" />
<text  x="1182.77" y="383.5" ></text>
</g>
<g >
<title>blk_mq_run_hw_queues (15 samples, 0.01%)</title><rect x="22.2" y="405" width="0.1" height="15.0" fill="rgb(254,2,7)" rx="2" ry="2" />
<text  x="25.17" y="415.5" ></text>
</g>
<g >
<title>__sched_text_start (29 samples, 0.02%)</title><rect x="41.4" y="309" width="0.2" height="15.0" fill="rgb(217,87,33)" rx="2" ry="2" />
<text  x="44.38" y="319.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (73 samples, 0.05%)</title><rect x="29.4" y="357" width="0.6" height="15.0" fill="rgb(226,153,48)" rx="2" ry="2" />
<text  x="32.37" y="367.5" ></text>
</g>
<g >
<title>runtime.scanstack (21 samples, 0.02%)</title><rect x="10.2" y="357" width="0.2" height="15.0" fill="rgb(236,86,4)" rx="2" ry="2" />
<text  x="13.23" y="367.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/google.golang.org/grpc.(*Server).processStreamingRPC (21 samples, 0.02%)</title><rect x="13.7" y="437" width="0.2" height="15.0" fill="rgb(241,46,54)" rx="2" ry="2" />
<text  x="16.73" y="447.5" ></text>
</g>
<g >
<title>[zedbox] (775 samples, 0.58%)</title><rect x="1183.1" y="405" width="6.8" height="15.0" fill="rgb(207,66,4)" rx="2" ry="2" />
<text  x="1186.14" y="415.5" ></text>
</g>
<g >
<title>[ld-musl-x86_64.so.1] (91 samples, 0.07%)</title><rect x="23.4" y="485" width="0.8" height="15.0" fill="rgb(250,175,41)" rx="2" ry="2" />
<text  x="26.45" y="495.5" ></text>
</g>
<g >
<title>os.(*File).Write (38 samples, 0.03%)</title><rect x="15.8" y="229" width="0.3" height="15.0" fill="rgb(232,161,46)" rx="2" ry="2" />
<text  x="18.76" y="239.5" ></text>
</g>
<g >
<title>ret_from_fork (70 samples, 0.05%)</title><rect x="19.4" y="485" width="0.6" height="15.0" fill="rgb(248,11,42)" rx="2" ry="2" />
<text  x="22.43" y="495.5" ></text>
</g>
<g >
<title>do_filp_open (15 samples, 0.01%)</title><rect x="16.2" y="133" width="0.1" height="15.0" fill="rgb(251,0,37)" rx="2" ry="2" />
<text  x="19.17" y="143.5" ></text>
</g>
<g >
<title>generic_perform_write (14 samples, 0.01%)</title><rect x="1189.6" y="229" width="0.2" height="15.0" fill="rgb(238,102,32)" rx="2" ry="2" />
<text  x="1192.63" y="239.5" ></text>
</g>
<g >
<title>paravirt_read_msr (13 samples, 0.01%)</title><rect x="41.5" y="245" width="0.1" height="15.0" fill="rgb(236,165,14)" rx="2" ry="2" />
<text  x="44.51" y="255.5" ></text>
</g>
<g >
<title>io.(*teeReader).Read (198 samples, 0.15%)</title><rect x="14.0" y="181" width="1.8" height="15.0" fill="rgb(221,54,34)" rx="2" ry="2" />
<text  x="17.02" y="191.5" ></text>
</g>
<g >
<title>[zedbox] (23 samples, 0.02%)</title><rect x="1181.2" y="373" width="0.2" height="15.0" fill="rgb(252,38,22)" rx="2" ry="2" />
<text  x="1184.18" y="383.5" ></text>
</g>
<g >
<title>irq_exit (91 samples, 0.07%)</title><rect x="1178.6" y="357" width="0.8" height="15.0" fill="rgb(220,114,20)" rx="2" ry="2" />
<text  x="1181.61" y="367.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/api/services/content/v1.(*contentWriteServer).Recv (12 samples, 0.01%)</title><rect x="13.7" y="373" width="0.1" height="15.0" fill="rgb(205,196,27)" rx="2" ry="2" />
<text  x="16.73" y="383.5" ></text>
</g>
<g >
<title>cpu_startup_entry (32,024 samples, 23.84%)</title><rect x="42.7" y="453" width="281.4" height="15.0" fill="rgb(253,32,40)" rx="2" ry="2" />
<text  x="45.75" y="463.5" >cpu_startup_entry</text>
</g>
<g >
<title>wwan-init.sh (13 samples, 0.01%)</title><rect x="1181.0" y="501" width="0.1" height="15.0" fill="rgb(244,108,29)" rx="2" ry="2" />
<text  x="1184.00" y="511.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/diff/walking/plugin.(*diffPlugin).Apply (452 samples, 0.34%)</title><rect x="13.9" y="341" width="4.0" height="15.0" fill="rgb(206,86,31)" rx="2" ry="2" />
<text  x="16.94" y="351.5" ></text>
</g>
<g >
<title>[ld-musl-x86_64.so.1] (865 samples, 0.64%)</title><rect x="24.7" y="469" width="7.6" height="15.0" fill="rgb(217,106,24)" rx="2" ry="2" />
<text  x="27.68" y="479.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/google.golang.org/grpc.(*Server).serveStreams.func1.1 (483 samples, 0.36%)</title><rect x="13.7" y="469" width="4.3" height="15.0" fill="rgb(216,146,37)" rx="2" ry="2" />
<text  x="16.73" y="479.5" ></text>
</g>
<g >
<title>runtime.systemstack (38 samples, 0.03%)</title><rect x="10.2" y="453" width="0.3" height="15.0" fill="rgb(227,170,26)" rx="2" ry="2" />
<text  x="13.21" y="463.5" ></text>
</g>
<g >
<title>runtime.sysmon (16 samples, 0.01%)</title><rect x="11.1" y="453" width="0.1" height="15.0" fill="rgb(242,162,34)" rx="2" ry="2" />
<text  x="14.06" y="463.5" ></text>
</g>
<g >
<title>task_work_run (12 samples, 0.01%)</title><rect x="32.2" y="421" width="0.1" height="15.0" fill="rgb(207,177,40)" rx="2" ry="2" />
<text  x="35.17" y="431.5" ></text>
</g>
<g >
<title>__do_sys_futex (31 samples, 0.02%)</title><rect x="23.7" y="437" width="0.3" height="15.0" fill="rgb(209,229,21)" rx="2" ry="2" />
<text  x="26.74" y="447.5" ></text>
</g>
<g >
<title>os.openFileNolog (18 samples, 0.01%)</title><rect x="16.1" y="213" width="0.2" height="15.0" fill="rgb(228,79,45)" rx="2" ry="2" />
<text  x="19.15" y="223.5" ></text>
</g>
<g >
<title>start_kernel (32,024 samples, 23.84%)</title><rect x="42.7" y="469" width="281.4" height="15.0" fill="rgb(241,23,13)" rx="2" ry="2" />
<text  x="45.75" y="479.5" >start_kernel</text>
</g>
<g >
<title>irq_exit (90 samples, 0.07%)</title><rect x="322.6" y="357" width="0.8" height="15.0" fill="rgb(252,120,23)" rx="2" ry="2" />
<text  x="325.63" y="367.5" ></text>
</g>
<g >
<title>ret_from_fork (19 samples, 0.01%)</title><rect x="22.2" y="485" width="0.1" height="15.0" fill="rgb(232,216,14)" rx="2" ry="2" />
<text  x="25.17" y="495.5" ></text>
</g>
<g >
<title>ovl_write_iter (16 samples, 0.01%)</title><rect x="24.0" y="373" width="0.2" height="15.0" fill="rgb(252,75,0)" rx="2" ry="2" />
<text  x="27.03" y="383.5" ></text>
</g>
<g >
<title>[zedbox] (836 samples, 0.62%)</title><rect x="1182.6" y="421" width="7.4" height="15.0" fill="rgb(234,170,35)" rx="2" ry="2" />
<text  x="1185.63" y="431.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/services/diff.(*service).Apply (452 samples, 0.34%)</title><rect x="13.9" y="373" width="4.0" height="15.0" fill="rgb(216,19,0)" rx="2" ry="2" />
<text  x="16.94" y="383.5" ></text>
</g>
<g >
<title>do_sys_open (49 samples, 0.04%)</title><rect x="31.2" y="421" width="0.4" height="15.0" fill="rgb(254,200,44)" rx="2" ry="2" />
<text  x="34.19" y="431.5" ></text>
</g>
<g >
<title>[newlogd] (25 samples, 0.02%)</title><rect x="22.9" y="453" width="0.3" height="15.0" fill="rgb(253,167,14)" rx="2" ry="2" />
<text  x="25.95" y="463.5" ></text>
</g>
<g >
<title>runtime.timerproc (38 samples, 0.03%)</title><rect x="11.7" y="453" width="0.3" height="15.0" fill="rgb(250,41,44)" rx="2" ry="2" />
<text  x="14.68" y="463.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (19 samples, 0.01%)</title><rect x="30.4" y="293" width="0.2" height="15.0" fill="rgb(213,197,25)" rx="2" ry="2" />
<text  x="33.41" y="303.5" ></text>
</g>
<g >
<title>worker_thread (19 samples, 0.01%)</title><rect x="22.2" y="453" width="0.1" height="15.0" fill="rgb(218,126,14)" rx="2" ry="2" />
<text  x="25.17" y="463.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).huffmanBlock (30 samples, 0.02%)</title><rect x="17.1" y="53" width="0.2" height="15.0" fill="rgb(235,159,23)" rx="2" ry="2" />
<text  x="20.08" y="63.5" ></text>
</g>
<g >
<title>vmx_vcpu_load (14 samples, 0.01%)</title><rect x="41.5" y="261" width="0.1" height="15.0" fill="rgb(232,96,37)" rx="2" ry="2" />
<text  x="44.51" y="271.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (56 samples, 0.04%)</title><rect x="28.5" y="357" width="0.5" height="15.0" fill="rgb(207,97,45)" rx="2" ry="2" />
<text  x="31.48" y="367.5" ></text>
</g>
<g >
<title>native_read_msr (13 samples, 0.01%)</title><rect x="41.5" y="229" width="0.1" height="15.0" fill="rgb(215,132,15)" rx="2" ry="2" />
<text  x="44.51" y="239.5" ></text>
</g>
<g >
<title>do_syscall_64 (36 samples, 0.03%)</title><rect x="15.8" y="165" width="0.3" height="15.0" fill="rgb(212,208,14)" rx="2" ry="2" />
<text  x="18.77" y="175.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive/compression.(*readCloserWrapper).Read (197 samples, 0.15%)</title><rect x="14.0" y="149" width="1.8" height="15.0" fill="rgb(237,165,3)" rx="2" ry="2" />
<text  x="17.03" y="159.5" ></text>
</g>
<g >
<title>[libglib-2.0.so.0.6400.6] (54 samples, 0.04%)</title><rect x="32.3" y="469" width="0.5" height="15.0" fill="rgb(205,82,11)" rx="2" ry="2" />
<text  x="35.28" y="479.5" ></text>
</g>
<g >
<title>kvm_vcpu_wake_up (14 samples, 0.01%)</title><rect x="42.1" y="261" width="0.2" height="15.0" fill="rgb(215,35,6)" rx="2" ry="2" />
<text  x="45.13" y="271.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (29 samples, 0.02%)</title><rect x="1188.5" y="245" width="0.3" height="15.0" fill="rgb(205,178,22)" rx="2" ry="2" />
<text  x="1191.54" y="255.5" ></text>
</g>
<g >
<title>blk_mq_dispatch_rq_list (14 samples, 0.01%)</title><rect x="22.2" y="325" width="0.1" height="15.0" fill="rgb(222,214,26)" rx="2" ry="2" />
<text  x="25.18" y="335.5" ></text>
</g>
<g >
<title>[zedbox] (19 samples, 0.01%)</title><rect x="1181.2" y="357" width="0.2" height="15.0" fill="rgb(216,119,49)" rx="2" ry="2" />
<text  x="1184.22" y="367.5" ></text>
</g>
<g >
<title>path_openat (32 samples, 0.02%)</title><rect x="31.3" y="389" width="0.2" height="15.0" fill="rgb(247,25,12)" rx="2" ry="2" />
<text  x="34.26" y="399.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).huffmanBlock (39 samples, 0.03%)</title><rect x="16.7" y="69" width="0.4" height="15.0" fill="rgb(238,141,12)" rx="2" ry="2" />
<text  x="19.72" y="79.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/google.golang.org/grpc.(*Server).processUnaryRPC (462 samples, 0.34%)</title><rect x="13.9" y="437" width="4.1" height="15.0" fill="rgb(226,203,45)" rx="2" ry="2" />
<text  x="16.92" y="447.5" ></text>
</g>
<g >
<title>read_tsc (81 samples, 0.06%)</title><rect x="37.2" y="293" width="0.7" height="15.0" fill="rgb(222,21,42)" rx="2" ry="2" />
<text  x="40.16" y="303.5" ></text>
</g>
<g >
<title>ksys_read (13 samples, 0.01%)</title><rect x="1188.7" y="213" width="0.1" height="15.0" fill="rgb(220,86,38)" rx="2" ry="2" />
<text  x="1191.68" y="223.5" ></text>
</g>
<g >
<title>do_syscall_64 (17 samples, 0.01%)</title><rect x="1189.0" y="277" width="0.2" height="15.0" fill="rgb(219,98,22)" rx="2" ry="2" />
<text  x="1192.02" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (57 samples, 0.04%)</title><rect x="23.7" y="469" width="0.5" height="15.0" fill="rgb(239,70,54)" rx="2" ry="2" />
<text  x="26.74" y="479.5" ></text>
</g>
<g >
<title>__srcu_read_lock (40 samples, 0.03%)</title><rect x="38.0" y="309" width="0.4" height="15.0" fill="rgb(205,34,42)" rx="2" ry="2" />
<text  x="41.01" y="319.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).huffmanBlock (107 samples, 0.08%)</title><rect x="14.1" y="101" width="0.9" height="15.0" fill="rgb(241,104,48)" rx="2" ry="2" />
<text  x="17.10" y="111.5" ></text>
</g>
<g >
<title>memlogd (40 samples, 0.03%)</title><rect x="22.5" y="501" width="0.4" height="15.0" fill="rgb(216,141,22)" rx="2" ry="2" />
<text  x="25.53" y="511.5" ></text>
</g>
<g >
<title>kvm_io_bus_write (43 samples, 0.03%)</title><rect x="35.3" y="325" width="0.4" height="15.0" fill="rgb(241,66,39)" rx="2" ry="2" />
<text  x="38.29" y="335.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).huffSym (18 samples, 0.01%)</title><rect x="16.9" y="53" width="0.2" height="15.0" fill="rgb(233,60,17)" rx="2" ry="2" />
<text  x="19.90" y="63.5" ></text>
</g>
<g >
<title>__do_insn_fetch_bytes (24 samples, 0.02%)</title><rect x="36.5" y="277" width="0.2" height="15.0" fill="rgb(249,121,34)" rx="2" ry="2" />
<text  x="39.48" y="287.5" ></text>
</g>
<g >
<title>[jq] (66 samples, 0.05%)</title><rect x="21.1" y="469" width="0.6" height="15.0" fill="rgb(233,162,47)" rx="2" ry="2" />
<text  x="24.13" y="479.5" ></text>
</g>
<g >
<title>[zedbox] (46 samples, 0.03%)</title><rect x="1181.1" y="405" width="0.4" height="15.0" fill="rgb(234,4,41)" rx="2" ry="2" />
<text  x="1184.12" y="415.5" ></text>
</g>
<g >
<title>syscall.Syscall (17 samples, 0.01%)</title><rect x="17.4" y="165" width="0.1" height="15.0" fill="rgb(223,187,39)" rx="2" ry="2" />
<text  x="20.36" y="175.5" ></text>
</g>
<g >
<title>schedule_idle (124 samples, 0.09%)</title><rect x="1179.7" y="421" width="1.1" height="15.0" fill="rgb(243,226,46)" rx="2" ry="2" />
<text  x="1182.74" y="431.5" ></text>
</g>
<g >
<title>kvm_skip_emulated_instruction (38 samples, 0.03%)</title><rect x="36.4" y="341" width="0.3" height="15.0" fill="rgb(236,64,6)" rx="2" ry="2" />
<text  x="39.41" y="351.5" ></text>
</g>
<g >
<title>[unknown] (17 samples, 0.01%)</title><rect x="33.8" y="453" width="0.2" height="15.0" fill="rgb(252,160,32)" rx="2" ry="2" />
<text  x="36.84" y="463.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (48 samples, 0.04%)</title><rect x="18.6" y="469" width="0.4" height="15.0" fill="rgb(252,93,20)" rx="2" ry="2" />
<text  x="21.56" y="479.5" ></text>
</g>
<g >
<title>dnsmasq (110 samples, 0.08%)</title><rect x="18.1" y="501" width="0.9" height="15.0" fill="rgb(252,218,45)" rx="2" ry="2" />
<text  x="21.06" y="511.5" ></text>
</g>
<g >
<title>[memlogd] (17 samples, 0.01%)</title><rect x="22.5" y="437" width="0.2" height="15.0" fill="rgb(219,53,25)" rx="2" ry="2" />
<text  x="25.54" y="447.5" ></text>
</g>
<g >
<title>[unknown] (70 samples, 0.05%)</title><rect x="21.1" y="485" width="0.6" height="15.0" fill="rgb(244,108,46)" rx="2" ry="2" />
<text  x="24.13" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (826 samples, 0.61%)</title><rect x="35.1" y="469" width="7.3" height="15.0" fill="rgb(254,222,10)" rx="2" ry="2" />
<text  x="38.10" y="479.5" ></text>
</g>
<g >
<title>__sched_text_start (51 samples, 0.04%)</title><rect x="323.6" y="405" width="0.4" height="15.0" fill="rgb(248,191,13)" rx="2" ry="2" />
<text  x="326.60" y="415.5" ></text>
</g>
<g >
<title>vfs_write (34 samples, 0.03%)</title><rect x="15.8" y="133" width="0.3" height="15.0" fill="rgb(235,195,19)" rx="2" ry="2" />
<text  x="18.79" y="143.5" ></text>
</g>
<g >
<title>irq_exit (17 samples, 0.01%)</title><rect x="1178.4" y="357" width="0.1" height="15.0" fill="rgb(220,102,13)" rx="2" ry="2" />
<text  x="1181.40" y="367.5" ></text>
</g>
<g >
<title>[zedbox] (569 samples, 0.42%)</title><rect x="1184.5" y="341" width="5.0" height="15.0" fill="rgb(249,116,52)" rx="2" ry="2" />
<text  x="1187.50" y="351.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (90 samples, 0.07%)</title><rect x="322.6" y="341" width="0.8" height="15.0" fill="rgb(245,191,15)" rx="2" ry="2" />
<text  x="325.63" y="351.5" ></text>
</g>
<g >
<title>update_blocked_averages (45 samples, 0.03%)</title><rect x="322.9" y="309" width="0.4" height="15.0" fill="rgb(211,108,31)" rx="2" ry="2" />
<text  x="325.92" y="319.5" ></text>
</g>
<g >
<title>kvm_irq_delivery_to_apic_fast (18 samples, 0.01%)</title><rect x="35.9" y="245" width="0.2" height="15.0" fill="rgb(222,188,29)" rx="2" ry="2" />
<text  x="38.93" y="255.5" ></text>
</g>
<g >
<title>crypto/sha256.block (135 samples, 0.10%)</title><rect x="12.0" y="469" width="1.2" height="15.0" fill="rgb(220,92,2)" rx="2" ry="2" />
<text  x="15.03" y="479.5" ></text>
</g>
<g >
<title>runtime.systemstack (13 samples, 0.01%)</title><rect x="11.7" y="405" width="0.2" height="15.0" fill="rgb(222,102,14)" rx="2" ry="2" />
<text  x="14.74" y="415.5" ></text>
</g>
<g >
<title>[zedbox] (298 samples, 0.22%)</title><rect x="1186.2" y="261" width="2.6" height="15.0" fill="rgb(215,191,29)" rx="2" ry="2" />
<text  x="1189.18" y="271.5" ></text>
</g>
<g >
<title>run_rebalance_domains (45 samples, 0.03%)</title><rect x="322.9" y="325" width="0.4" height="15.0" fill="rgb(241,212,4)" rx="2" ry="2" />
<text  x="325.92" y="335.5" ></text>
</g>
<g >
<title>ret_from_fork (13 samples, 0.01%)</title><rect x="22.4" y="485" width="0.1" height="15.0" fill="rgb(233,33,16)" rx="2" ry="2" />
<text  x="25.35" y="495.5" ></text>
</g>
<g >
<title>ip6tables (16 samples, 0.01%)</title><rect x="19.1" y="501" width="0.1" height="15.0" fill="rgb(206,56,28)" rx="2" ry="2" />
<text  x="22.08" y="511.5" ></text>
</g>
<g >
<title>[memlogd] (13 samples, 0.01%)</title><rect x="22.6" y="357" width="0.1" height="15.0" fill="rgb(250,91,16)" rx="2" ry="2" />
<text  x="25.56" y="367.5" ></text>
</g>
<g >
<title>kworker/3:1H-kb (19 samples, 0.01%)</title><rect x="22.2" y="501" width="0.1" height="15.0" fill="rgb(211,96,29)" rx="2" ry="2" />
<text  x="25.17" y="511.5" ></text>
</g>
<g >
<title>kvm_vcpu_check_block (394 samples, 0.29%)</title><rect x="37.9" y="325" width="3.5" height="15.0" fill="rgb(205,197,10)" rx="2" ry="2" />
<text  x="40.91" y="335.5" ></text>
</g>
<g >
<title>syscall.Syscall6 (17 samples, 0.01%)</title><rect x="16.2" y="197" width="0.1" height="15.0" fill="rgb(247,161,29)" rx="2" ry="2" />
<text  x="19.16" y="207.5" ></text>
</g>
<g >
<title>do_vfs_ioctl (817 samples, 0.61%)</title><rect x="35.1" y="405" width="7.2" height="15.0" fill="rgb(252,44,42)" rx="2" ry="2" />
<text  x="38.11" y="415.5" ></text>
</g>
<g >
<title>do_sys_poll (580 samples, 0.43%)</title><rect x="25.7" y="405" width="5.1" height="15.0" fill="rgb(249,34,35)" rx="2" ry="2" />
<text  x="28.69" y="415.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (15 samples, 0.01%)</title><rect x="1189.6" y="261" width="0.2" height="15.0" fill="rgb(237,138,0)" rx="2" ry="2" />
<text  x="1192.63" y="271.5" ></text>
</g>
<g >
<title>new_sync_write (16 samples, 0.01%)</title><rect x="1189.6" y="277" width="0.2" height="15.0" fill="rgb(214,140,13)" rx="2" ry="2" />
<text  x="1192.63" y="287.5" ></text>
</g>
<g >
<title>vfs_write (14 samples, 0.01%)</title><rect x="17.4" y="101" width="0.1" height="15.0" fill="rgb(254,124,29)" rx="2" ry="2" />
<text  x="20.39" y="111.5" ></text>
</g>
<g >
<title>[newlogd] (25 samples, 0.02%)</title><rect x="22.9" y="469" width="0.3" height="15.0" fill="rgb(208,141,48)" rx="2" ry="2" />
<text  x="25.95" y="479.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive.openFile (28 samples, 0.02%)</title><rect x="16.1" y="245" width="0.3" height="15.0" fill="rgb(234,224,17)" rx="2" ry="2" />
<text  x="19.15" y="255.5" ></text>
</g>
<g >
<title>[memlogd] (13 samples, 0.01%)</title><rect x="22.6" y="373" width="0.1" height="15.0" fill="rgb(205,25,27)" rx="2" ry="2" />
<text  x="25.56" y="383.5" ></text>
</g>
<g >
<title>[memlogd] (17 samples, 0.01%)</title><rect x="22.5" y="421" width="0.2" height="15.0" fill="rgb(241,113,47)" rx="2" ry="2" />
<text  x="25.54" y="431.5" ></text>
</g>
<g >
<title>[unknown] (154 samples, 0.11%)</title><rect x="1181.1" y="485" width="1.4" height="15.0" fill="rgb(252,51,0)" rx="2" ry="2" />
<text  x="1184.12" y="495.5" ></text>
</g>
<g >
<title>do_filp_open (34 samples, 0.03%)</title><rect x="31.2" y="405" width="0.3" height="15.0" fill="rgb(206,123,11)" rx="2" ry="2" />
<text  x="34.24" y="415.5" ></text>
</g>
<g >
<title>__pollwait (42 samples, 0.03%)</title><rect x="28.1" y="373" width="0.3" height="15.0" fill="rgb(251,214,52)" rx="2" ry="2" />
<text  x="31.08" y="383.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (12 samples, 0.01%)</title><rect x="1181.3" y="229" width="0.1" height="15.0" fill="rgb(248,209,44)" rx="2" ry="2" />
<text  x="1184.27" y="239.5" ></text>
</g>
<g >
<title>__do_sys_ppoll (591 samples, 0.44%)</title><rect x="25.7" y="421" width="5.2" height="15.0" fill="rgb(235,16,44)" rx="2" ry="2" />
<text  x="28.69" y="431.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive.openFile (14 samples, 0.01%)</title><rect x="17.6" y="213" width="0.1" height="15.0" fill="rgb(236,168,1)" rx="2" ry="2" />
<text  x="20.56" y="223.5" ></text>
</g>
<g >
<title>__blk_mq_delay_run_hw_queue (15 samples, 0.01%)</title><rect x="22.2" y="373" width="0.1" height="15.0" fill="rgb(233,201,29)" rx="2" ry="2" />
<text  x="25.17" y="383.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (13 samples, 0.01%)</title><rect x="15.8" y="53" width="0.1" height="15.0" fill="rgb(239,80,26)" rx="2" ry="2" />
<text  x="18.81" y="63.5" ></text>
</g>
<g >
<title>blk_mq_sched_dispatch_requests (14 samples, 0.01%)</title><rect x="22.2" y="341" width="0.1" height="15.0" fill="rgb(232,143,31)" rx="2" ry="2" />
<text  x="25.18" y="351.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (34 samples, 0.03%)</title><rect x="15.8" y="101" width="0.3" height="15.0" fill="rgb(233,40,1)" rx="2" ry="2" />
<text  x="18.79" y="111.5" ></text>
</g>
<g >
<title>worker_thread (13 samples, 0.01%)</title><rect x="22.4" y="453" width="0.1" height="15.0" fill="rgb(244,187,53)" rx="2" ry="2" />
<text  x="25.35" y="463.5" ></text>
</g>
<g >
<title>blk_mq_run_hw_queue (12 samples, 0.01%)</title><rect x="19.6" y="357" width="0.1" height="15.0" fill="rgb(233,140,42)" rx="2" ry="2" />
<text  x="22.58" y="367.5" ></text>
</g>
<g >
<title>poll_freewait (117 samples, 0.09%)</title><rect x="29.3" y="389" width="1.0" height="15.0" fill="rgb(239,7,24)" rx="2" ry="2" />
<text  x="32.32" y="399.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/github.com/grpc-ecosystem/go-grpc-prometheus.(*monitoredServerStream).RecvMsg (12 samples, 0.01%)</title><rect x="13.7" y="357" width="0.1" height="15.0" fill="rgb(247,227,5)" rx="2" ry="2" />
<text  x="16.73" y="367.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (765 samples, 0.57%)</title><rect x="25.6" y="453" width="6.7" height="15.0" fill="rgb(236,219,49)" rx="2" ry="2" />
<text  x="28.56" y="463.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/mount.WithTempMount (147 samples, 0.11%)</title><rect x="16.6" y="293" width="1.3" height="15.0" fill="rgb(222,18,6)" rx="2" ry="2" />
<text  x="19.61" y="303.5" ></text>
</g>
<g >
<title>vfs_writev (17 samples, 0.01%)</title><rect x="24.0" y="421" width="0.2" height="15.0" fill="rgb(222,203,3)" rx="2" ry="2" />
<text  x="27.03" y="431.5" ></text>
</g>
<g >
<title>do_syscall_64 (29 samples, 0.02%)</title><rect x="1188.5" y="229" width="0.3" height="15.0" fill="rgb(223,28,8)" rx="2" ry="2" />
<text  x="1191.54" y="239.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).huffSym (22 samples, 0.02%)</title><rect x="17.2" y="37" width="0.1" height="15.0" fill="rgb(229,118,8)" rx="2" ry="2" />
<text  x="20.15" y="47.5" ></text>
</g>
<g >
<title>[zedbox] (30 samples, 0.02%)</title><rect x="1187.7" y="133" width="0.3" height="15.0" fill="rgb(220,143,42)" rx="2" ry="2" />
<text  x="1190.71" y="143.5" ></text>
</g>
<g >
<title>process_one_work (15 samples, 0.01%)</title><rect x="22.2" y="437" width="0.1" height="15.0" fill="rgb(249,2,29)" rx="2" ry="2" />
<text  x="25.17" y="447.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive.applyNaive (305 samples, 0.23%)</title><rect x="13.9" y="277" width="2.7" height="15.0" fill="rgb(225,28,4)" rx="2" ry="2" />
<text  x="16.94" y="287.5" ></text>
</g>
<g >
<title>schedule_idle (51 samples, 0.04%)</title><rect x="323.6" y="421" width="0.4" height="15.0" fill="rgb(205,157,47)" rx="2" ry="2" />
<text  x="326.60" y="431.5" ></text>
</g>
<g >
<title>blk_done_softirq (54 samples, 0.04%)</title><rect x="1178.8" y="325" width="0.4" height="15.0" fill="rgb(243,89,31)" rx="2" ry="2" />
<text  x="1181.77" y="335.5" ></text>
</g>
<g >
<title>bufio.(*Reader).ReadByte (19 samples, 0.01%)</title><rect x="14.8" y="69" width="0.2" height="15.0" fill="rgb(232,22,28)" rx="2" ry="2" />
<text  x="17.81" y="79.5" ></text>
</g>
<g >
<title>archive/tar.(*regFileReader).Read (75 samples, 0.06%)</title><rect x="16.7" y="181" width="0.7" height="15.0" fill="rgb(213,133,4)" rx="2" ry="2" />
<text  x="19.70" y="191.5" ></text>
</g>
<g >
<title>[zedbox] (17 samples, 0.01%)</title><rect x="1187.8" y="101" width="0.1" height="15.0" fill="rgb(208,56,46)" rx="2" ry="2" />
<text  x="1190.77" y="111.5" ></text>
</g>
<g >
<title>__do_sys_futex (43 samples, 0.03%)</title><rect x="34.5" y="421" width="0.4" height="15.0" fill="rgb(219,78,40)" rx="2" ry="2" />
<text  x="37.51" y="431.5" ></text>
</g>
<g >
<title>__do_sys_close (13 samples, 0.01%)</title><rect x="25.6" y="421" width="0.1" height="15.0" fill="rgb(228,62,1)" rx="2" ry="2" />
<text  x="28.57" y="431.5" ></text>
</g>
<g >
<title>do_syscall_64 (14 samples, 0.01%)</title><rect x="22.7" y="405" width="0.2" height="15.0" fill="rgb(205,195,34)" rx="2" ry="2" />
<text  x="25.74" y="415.5" ></text>
</g>
<g >
<title>[zedbox] (650 samples, 0.48%)</title><rect x="1184.1" y="357" width="5.7" height="15.0" fill="rgb(239,17,52)" rx="2" ry="2" />
<text  x="1187.08" y="367.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.01%)</title><rect x="10.8" y="421" width="0.1" height="15.0" fill="rgb(224,140,4)" rx="2" ry="2" />
<text  x="13.81" y="431.5" ></text>
</g>
<g >
<title>[unknown] (50 samples, 0.04%)</title><rect x="10.1" y="485" width="0.4" height="15.0" fill="rgb(236,174,33)" rx="2" ry="2" />
<text  x="13.11" y="495.5" ></text>
</g>
<g >
<title>writeback_sb_inodes (13 samples, 0.01%)</title><rect x="22.4" y="373" width="0.1" height="15.0" fill="rgb(220,90,43)" rx="2" ry="2" />
<text  x="25.35" y="383.5" ></text>
</g>
<g >
<title>[zedbox] (45 samples, 0.03%)</title><rect x="1181.1" y="389" width="0.4" height="15.0" fill="rgb(217,49,11)" rx="2" ry="2" />
<text  x="1184.13" y="399.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive.Apply (147 samples, 0.11%)</title><rect x="16.6" y="261" width="1.3" height="15.0" fill="rgb(252,2,13)" rx="2" ry="2" />
<text  x="19.61" y="271.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (20 samples, 0.01%)</title><rect x="1188.8" y="261" width="0.2" height="15.0" fill="rgb(250,72,40)" rx="2" ry="2" />
<text  x="1191.80" y="271.5" ></text>
</g>
<g >
<title>iptables (22 samples, 0.02%)</title><rect x="19.2" y="501" width="0.2" height="15.0" fill="rgb(214,205,31)" rx="2" ry="2" />
<text  x="22.22" y="511.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/diff/apply.apply.func1 (147 samples, 0.11%)</title><rect x="16.6" y="277" width="1.3" height="15.0" fill="rgb(205,130,31)" rx="2" ry="2" />
<text  x="19.61" y="287.5" ></text>
</g>
<g >
<title>x86_decode_insn (31 samples, 0.02%)</title><rect x="36.5" y="293" width="0.2" height="15.0" fill="rgb(241,166,38)" rx="2" ry="2" />
<text  x="39.48" y="303.5" ></text>
</g>
<g >
<title>[unknown] (162 samples, 0.12%)</title><rect x="10.6" y="469" width="1.4" height="15.0" fill="rgb(208,52,27)" rx="2" ry="2" />
<text  x="13.61" y="479.5" ></text>
</g>
<g >
<title>schedule (29 samples, 0.02%)</title><rect x="41.4" y="325" width="0.2" height="15.0" fill="rgb(235,119,29)" rx="2" ry="2" />
<text  x="44.38" y="335.5" ></text>
</g>
<g >
<title>generic_perform_write (33 samples, 0.02%)</title><rect x="15.8" y="69" width="0.3" height="15.0" fill="rgb(238,48,34)" rx="2" ry="2" />
<text  x="18.80" y="79.5" ></text>
</g>
<g >
<title>secondary_startup_64 (129,562 samples, 96.45%)</title><rect x="42.7" y="485" width="1138.2" height="15.0" fill="rgb(249,106,46)" rx="2" ry="2" />
<text  x="45.75" y="495.5" >secondary_startup_64</text>
</g>
<g >
<title>[unknown] (46 samples, 0.03%)</title><rect x="1181.1" y="469" width="0.4" height="15.0" fill="rgb(239,28,12)" rx="2" ry="2" />
<text  x="1184.12" y="479.5" ></text>
</g>
<g >
<title>ksys_read (14 samples, 0.01%)</title><rect x="31.6" y="421" width="0.1" height="15.0" fill="rgb(209,194,33)" rx="2" ry="2" />
<text  x="34.62" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.01%)</title><rect x="1181.2" y="341" width="0.2" height="15.0" fill="rgb(240,157,2)" rx="2" ry="2" />
<text  x="1184.22" y="351.5" ></text>
</g>
<g >
<title>jbd2/sda9-8 (72 samples, 0.05%)</title><rect x="19.4" y="501" width="0.6" height="15.0" fill="rgb(249,22,20)" rx="2" ry="2" />
<text  x="22.42" y="511.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).nextBlock (75 samples, 0.06%)</title><rect x="15.1" y="101" width="0.6" height="15.0" fill="rgb(232,200,35)" rx="2" ry="2" />
<text  x="18.05" y="111.5" ></text>
</g>
<g >
<title>runtime.startm (12 samples, 0.01%)</title><rect x="11.9" y="373" width="0.1" height="15.0" fill="rgb(223,109,46)" rx="2" ry="2" />
<text  x="14.87" y="383.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (14 samples, 0.01%)</title><rect x="35.9" y="165" width="0.2" height="15.0" fill="rgb(232,214,16)" rx="2" ry="2" />
<text  x="38.94" y="175.5" ></text>
</g>
<g >
<title>eventfd_poll (165 samples, 0.12%)</title><rect x="27.6" y="389" width="1.4" height="15.0" fill="rgb(223,191,49)" rx="2" ry="2" />
<text  x="30.60" y="399.5" ></text>
</g>
<g >
<title>blk_flush_plug_list (14 samples, 0.01%)</title><rect x="19.6" y="405" width="0.1" height="15.0" fill="rgb(229,93,2)" rx="2" ry="2" />
<text  x="22.57" y="415.5" ></text>
</g>
<g >
<title>schedule (20 samples, 0.01%)</title><rect x="30.4" y="357" width="0.2" height="15.0" fill="rgb(231,148,42)" rx="2" ry="2" />
<text  x="33.41" y="367.5" ></text>
</g>
<g >
<title>kvm_irq_delivery_to_apic (18 samples, 0.01%)</title><rect x="35.9" y="261" width="0.2" height="15.0" fill="rgb(220,208,30)" rx="2" ry="2" />
<text  x="38.93" y="271.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/diff/apply.(*fsApplier).Apply (452 samples, 0.34%)</title><rect x="13.9" y="325" width="4.0" height="15.0" fill="rgb(217,119,38)" rx="2" ry="2" />
<text  x="16.94" y="335.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (17 samples, 0.01%)</title><rect x="1178.4" y="389" width="0.1" height="15.0" fill="rgb(227,42,17)" rx="2" ry="2" />
<text  x="1181.40" y="399.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (60 samples, 0.04%)</title><rect x="28.4" y="373" width="0.6" height="15.0" fill="rgb(225,12,34)" rx="2" ry="2" />
<text  x="31.45" y="383.5" ></text>
</g>
<g >
<title>kvm_set_msi (20 samples, 0.01%)</title><rect x="42.1" y="341" width="0.2" height="15.0" fill="rgb(214,161,21)" rx="2" ry="2" />
<text  x="45.10" y="351.5" ></text>
</g>
<g >
<title>runtime.greyobject (13 samples, 0.01%)</title><rect x="11.6" y="389" width="0.1" height="15.0" fill="rgb(230,41,14)" rx="2" ry="2" />
<text  x="14.55" y="399.5" ></text>
</g>
<g >
<title>kvm_apic_has_interrupt (55 samples, 0.04%)</title><rect x="39.3" y="277" width="0.5" height="15.0" fill="rgb(221,85,23)" rx="2" ry="2" />
<text  x="42.28" y="287.5" ></text>
</g>
<g >
<title>vmx_interrupt_allowed (119 samples, 0.09%)</title><rect x="40.1" y="293" width="1.1" height="15.0" fill="rgb(214,225,50)" rx="2" ry="2" />
<text  x="43.13" y="303.5" ></text>
</g>
<g >
<title>runtime.scang (22 samples, 0.02%)</title><rect x="10.2" y="373" width="0.2" height="15.0" fill="rgb(250,220,4)" rx="2" ry="2" />
<text  x="13.22" y="383.5" ></text>
</g>
<g >
<title>futex_wake (12 samples, 0.01%)</title><rect x="1181.3" y="277" width="0.1" height="15.0" fill="rgb(226,170,46)" rx="2" ry="2" />
<text  x="1184.27" y="287.5" ></text>
</g>
<g >
<title>poll_schedule_timeout.constprop.9 (27 samples, 0.02%)</title><rect x="30.3" y="389" width="0.3" height="15.0" fill="rgb(219,203,19)" rx="2" ry="2" />
<text  x="33.34" y="399.5" ></text>
</g>
<g >
<title>kvm_arch_vcpu_load (16 samples, 0.01%)</title><rect x="41.5" y="277" width="0.1" height="15.0" fill="rgb(249,206,20)" rx="2" ry="2" />
<text  x="44.49" y="287.5" ></text>
</g>
<g >
<title>blk_mq_requeue_work (15 samples, 0.01%)</title><rect x="22.2" y="421" width="0.1" height="15.0" fill="rgb(251,206,53)" rx="2" ry="2" />
<text  x="25.17" y="431.5" ></text>
</g>
<g >
<title>do_syscall_64 (12 samples, 0.01%)</title><rect x="1189.2" y="293" width="0.1" height="15.0" fill="rgb(214,73,31)" rx="2" ry="2" />
<text  x="1192.17" y="303.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).huffmanBlock (68 samples, 0.05%)</title><rect x="15.1" y="85" width="0.6" height="15.0" fill="rgb(222,165,28)" rx="2" ry="2" />
<text  x="18.06" y="95.5" ></text>
</g>
<g >
<title>io.(*teeReader).Read (75 samples, 0.06%)</title><rect x="16.7" y="149" width="0.7" height="15.0" fill="rgb(232,153,34)" rx="2" ry="2" />
<text  x="19.70" y="159.5" ></text>
</g>
<g >
<title>kvm_vcpu_block (574 samples, 0.43%)</title><rect x="36.8" y="341" width="5.0" height="15.0" fill="rgb(208,180,25)" rx="2" ry="2" />
<text  x="39.76" y="351.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (17 samples, 0.01%)</title><rect x="1178.4" y="373" width="0.1" height="15.0" fill="rgb(211,73,4)" rx="2" ry="2" />
<text  x="1181.40" y="383.5" ></text>
</g>
<g >
<title>ksys_write (35 samples, 0.03%)</title><rect x="15.8" y="149" width="0.3" height="15.0" fill="rgb(226,189,37)" rx="2" ry="2" />
<text  x="18.78" y="159.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (39 samples, 0.03%)</title><rect x="35.3" y="245" width="0.4" height="15.0" fill="rgb(237,162,45)" rx="2" ry="2" />
<text  x="38.31" y="255.5" ></text>
</g>
<g >
<title>[zedbox] (19 samples, 0.01%)</title><rect x="1187.8" y="117" width="0.1" height="15.0" fill="rgb(225,222,30)" rx="2" ry="2" />
<text  x="1190.75" y="127.5" ></text>
</g>
<g >
<title>do_syscall_64 (14 samples, 0.01%)</title><rect x="1188.4" y="213" width="0.1" height="15.0" fill="rgb(217,18,9)" rx="2" ry="2" />
<text  x="1191.41" y="223.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (17 samples, 0.01%)</title><rect x="1178.4" y="341" width="0.1" height="15.0" fill="rgb(242,109,54)" rx="2" ry="2" />
<text  x="1181.40" y="351.5" ></text>
</g>
<g >
<title>runtime.gcDrain (38 samples, 0.03%)</title><rect x="10.2" y="421" width="0.3" height="15.0" fill="rgb(218,69,5)" rx="2" ry="2" />
<text  x="13.21" y="431.5" ></text>
</g>
<g >
<title>do_IRQ (91 samples, 0.07%)</title><rect x="1178.6" y="373" width="0.8" height="15.0" fill="rgb(234,107,46)" rx="2" ry="2" />
<text  x="1181.61" y="383.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (48 samples, 0.04%)</title><rect x="323.6" y="357" width="0.4" height="15.0" fill="rgb(242,20,33)" rx="2" ry="2" />
<text  x="326.63" y="367.5" ></text>
</g>
<g >
<title>ioeventfd_write (39 samples, 0.03%)</title><rect x="35.3" y="293" width="0.4" height="15.0" fill="rgb(238,195,36)" rx="2" ry="2" />
<text  x="38.31" y="303.5" ></text>
</g>
<g >
<title>wb_writeback (13 samples, 0.01%)</title><rect x="22.4" y="405" width="0.1" height="15.0" fill="rgb(250,168,29)" rx="2" ry="2" />
<text  x="25.35" y="415.5" ></text>
</g>
<g >
<title>finish_task_switch (48 samples, 0.04%)</title><rect x="323.6" y="389" width="0.4" height="15.0" fill="rgb(237,197,19)" rx="2" ry="2" />
<text  x="326.63" y="399.5" ></text>
</g>
<g >
<title>ksys_ioctl (818 samples, 0.61%)</title><rect x="35.1" y="421" width="7.2" height="15.0" fill="rgb(225,166,27)" rx="2" ry="2" />
<text  x="38.10" y="431.5" ></text>
</g>
<g >
<title>kvm_vm_ioctl (22 samples, 0.02%)</title><rect x="42.1" y="373" width="0.2" height="15.0" fill="rgb(221,46,3)" rx="2" ry="2" />
<text  x="45.09" y="383.5" ></text>
</g>
<g >
<title>ioctl (836 samples, 0.62%)</title><rect x="35.0" y="485" width="7.4" height="15.0" fill="rgb(216,130,51)" rx="2" ry="2" />
<text  x="38.01" y="495.5" ></text>
</g>
<g >
<title>[zedbox] (853 samples, 0.64%)</title><rect x="1182.5" y="453" width="7.5" height="15.0" fill="rgb(211,152,20)" rx="2" ry="2" />
<text  x="1185.49" y="463.5" ></text>
</g>
<g >
<title>[zedbox] (35 samples, 0.03%)</title><rect x="1187.7" y="149" width="0.3" height="15.0" fill="rgb(237,43,39)" rx="2" ry="2" />
<text  x="1190.66" y="159.5" ></text>
</g>
<g >
<title>__sched_text_start (20 samples, 0.01%)</title><rect x="23.8" y="357" width="0.2" height="15.0" fill="rgb(221,104,35)" rx="2" ry="2" />
<text  x="26.82" y="367.5" ></text>
</g>
<g >
<title>cpu_startup_entry (97,538 samples, 72.61%)</title><rect x="324.1" y="453" width="856.8" height="15.0" fill="rgb(240,128,23)" rx="2" ry="2" />
<text  x="327.06" y="463.5" >cpu_startup_entry</text>
</g>
<g >
<title>do_idle (97,538 samples, 72.61%)</title><rect x="324.1" y="437" width="856.8" height="15.0" fill="rgb(235,81,32)" rx="2" ry="2" />
<text  x="327.06" y="447.5" >do_idle</text>
</g>
<g >
<title>do_futex (43 samples, 0.03%)</title><rect x="34.5" y="405" width="0.4" height="15.0" fill="rgb(251,15,38)" rx="2" ry="2" />
<text  x="37.51" y="415.5" ></text>
</g>
<g >
<title>runtime.markroot (12 samples, 0.01%)</title><rect x="11.2" y="405" width="0.1" height="15.0" fill="rgb(239,160,18)" rx="2" ry="2" />
<text  x="14.24" y="415.5" ></text>
</g>
<g >
<title>do_syscall_64 (12 samples, 0.01%)</title><rect x="34.0" y="421" width="0.1" height="15.0" fill="rgb(233,100,22)" rx="2" ry="2" />
<text  x="37.03" y="431.5" ></text>
</g>
<g >
<title>[memlogd] (14 samples, 0.01%)</title><rect x="22.6" y="389" width="0.1" height="15.0" fill="rgb(229,76,14)" rx="2" ry="2" />
<text  x="25.55" y="399.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (31 samples, 0.02%)</title><rect x="1179.4" y="421" width="0.3" height="15.0" fill="rgb(235,222,37)" rx="2" ry="2" />
<text  x="1182.41" y="431.5" ></text>
</g>
<g >
<title>[zedbox] (395 samples, 0.29%)</title><rect x="1185.6" y="293" width="3.4" height="15.0" fill="rgb(216,214,28)" rx="2" ry="2" />
<text  x="1188.56" y="303.5" ></text>
</g>
<g >
<title>__writeback_inodes_wb (13 samples, 0.01%)</title><rect x="22.4" y="389" width="0.1" height="15.0" fill="rgb(209,171,30)" rx="2" ry="2" />
<text  x="25.35" y="399.5" ></text>
</g>
<g >
<title>do_syscall_64 (24 samples, 0.02%)</title><rect x="1189.3" y="309" width="0.2" height="15.0" fill="rgb(237,215,39)" rx="2" ry="2" />
<text  x="1192.28" y="319.5" ></text>
</g>
<g >
<title>[zedbox] (46 samples, 0.03%)</title><rect x="1181.1" y="453" width="0.4" height="15.0" fill="rgb(215,62,52)" rx="2" ry="2" />
<text  x="1184.12" y="463.5" ></text>
</g>
<g >
<title>runtime.markroot.func1 (22 samples, 0.02%)</title><rect x="10.2" y="389" width="0.2" height="15.0" fill="rgb(231,207,3)" rx="2" ry="2" />
<text  x="13.22" y="399.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/diff/apply.(*readCounter).Read (198 samples, 0.15%)</title><rect x="14.0" y="197" width="1.8" height="15.0" fill="rgb(237,209,40)" rx="2" ry="2" />
<text  x="17.02" y="207.5" ></text>
</g>
<g >
<title>new_sync_write (34 samples, 0.03%)</title><rect x="15.8" y="117" width="0.3" height="15.0" fill="rgb(235,4,23)" rx="2" ry="2" />
<text  x="18.79" y="127.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.01%)</title><rect x="1181.4" y="373" width="0.1" height="15.0" fill="rgb(228,152,39)" rx="2" ry="2" />
<text  x="1184.38" y="383.5" ></text>
</g>
<g >
<title>kvm_cpu_has_extint (19 samples, 0.01%)</title><rect x="39.8" y="277" width="0.1" height="15.0" fill="rgb(242,13,34)" rx="2" ry="2" />
<text  x="42.76" y="287.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (27 samples, 0.02%)</title><rect x="23.8" y="389" width="0.2" height="15.0" fill="rgb(249,135,26)" rx="2" ry="2" />
<text  x="26.76" y="399.5" ></text>
</g>
<g >
<title>kvm_set_msr_common (24 samples, 0.02%)</title><rect x="35.9" y="293" width="0.2" height="15.0" fill="rgb(212,170,48)" rx="2" ry="2" />
<text  x="38.91" y="303.5" ></text>
</g>
<g >
<title>process_one_work (13 samples, 0.01%)</title><rect x="22.4" y="437" width="0.1" height="15.0" fill="rgb(254,225,40)" rx="2" ry="2" />
<text  x="25.35" y="447.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (30 samples, 0.02%)</title><rect x="1189.5" y="341" width="0.3" height="15.0" fill="rgb(217,4,10)" rx="2" ry="2" />
<text  x="1192.51" y="351.5" ></text>
</g>
<g >
<title>__apic_accept_irq (16 samples, 0.01%)</title><rect x="35.9" y="229" width="0.2" height="15.0" fill="rgb(227,58,32)" rx="2" ry="2" />
<text  x="38.94" y="239.5" ></text>
</g>
<g >
<title>kvm_vcpu_wake_up (14 samples, 0.01%)</title><rect x="35.9" y="197" width="0.2" height="15.0" fill="rgb(205,60,53)" rx="2" ry="2" />
<text  x="38.94" y="207.5" ></text>
</g>
<g >
<title>__raw_spin_unlock_irq (48 samples, 0.04%)</title><rect x="323.6" y="373" width="0.4" height="15.0" fill="rgb(251,27,53)" rx="2" ry="2" />
<text  x="326.63" y="383.5" ></text>
</g>
<g >
<title>kthread (19 samples, 0.01%)</title><rect x="22.2" y="469" width="0.1" height="15.0" fill="rgb(214,31,45)" rx="2" ry="2" />
<text  x="25.17" y="479.5" ></text>
</g>
<g >
<title>ktime_get (123 samples, 0.09%)</title><rect x="36.8" y="325" width="1.1" height="15.0" fill="rgb(215,55,11)" rx="2" ry="2" />
<text  x="39.82" y="335.5" ></text>
</g>
<g >
<title>do_syscall_64 (44 samples, 0.03%)</title><rect x="34.5" y="437" width="0.4" height="15.0" fill="rgb(248,102,43)" rx="2" ry="2" />
<text  x="37.51" y="447.5" ></text>
</g>
<g >
<title>napi_gro_receive (16 samples, 0.01%)</title><rect x="1179.3" y="277" width="0.1" height="15.0" fill="rgb(212,216,36)" rx="2" ry="2" />
<text  x="1182.26" y="287.5" ></text>
</g>
<g >
<title>runtime.markroot (27 samples, 0.02%)</title><rect x="10.2" y="405" width="0.3" height="15.0" fill="rgb(215,28,49)" rx="2" ry="2" />
<text  x="13.22" y="415.5" ></text>
</g>
<g >
<title>kvm_vcpu_kick (15 samples, 0.01%)</title><rect x="35.9" y="213" width="0.2" height="15.0" fill="rgb(252,125,14)" rx="2" ry="2" />
<text  x="38.94" y="223.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Write (17 samples, 0.01%)</title><rect x="17.4" y="181" width="0.1" height="15.0" fill="rgb(210,107,50)" rx="2" ry="2" />
<text  x="20.36" y="191.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (90 samples, 0.07%)</title><rect x="322.6" y="389" width="0.8" height="15.0" fill="rgb(242,45,39)" rx="2" ry="2" />
<text  x="325.63" y="399.5" ></text>
</g>
<g >
<title>[zedbox] (107 samples, 0.08%)</title><rect x="1181.5" y="469" width="1.0" height="15.0" fill="rgb(251,229,30)" rx="2" ry="2" />
<text  x="1184.52" y="479.5" ></text>
</g>
<g >
<title>vfs_write (42 samples, 0.03%)</title><rect x="31.8" y="405" width="0.4" height="15.0" fill="rgb(227,139,17)" rx="2" ry="2" />
<text  x="34.79" y="415.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (24 samples, 0.02%)</title><rect x="1189.3" y="325" width="0.2" height="15.0" fill="rgb(210,218,49)" rx="2" ry="2" />
<text  x="1192.28" y="335.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive.applyNaive (146 samples, 0.11%)</title><rect x="16.6" y="245" width="1.3" height="15.0" fill="rgb(252,199,25)" rx="2" ry="2" />
<text  x="19.61" y="255.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.01%)</title><rect x="1188.1" y="197" width="0.1" height="15.0" fill="rgb(245,118,29)" rx="2" ry="2" />
<text  x="1191.09" y="207.5" ></text>
</g>
<g >
<title>[zedbox] (849 samples, 0.63%)</title><rect x="1182.5" y="437" width="7.5" height="15.0" fill="rgb(232,15,23)" rx="2" ry="2" />
<text  x="1185.52" y="447.5" ></text>
</g>
<g >
<title>os.(*File).Write (17 samples, 0.01%)</title><rect x="17.4" y="197" width="0.1" height="15.0" fill="rgb(218,28,3)" rx="2" ry="2" />
<text  x="20.36" y="207.5" ></text>
</g>
<g >
<title>__sched_text_start (20 samples, 0.01%)</title><rect x="30.4" y="341" width="0.2" height="15.0" fill="rgb(219,219,0)" rx="2" ry="2" />
<text  x="33.41" y="351.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/api/services/diff/v1._Diff_Apply_Handler (452 samples, 0.34%)</title><rect x="13.9" y="421" width="4.0" height="15.0" fill="rgb(251,28,22)" rx="2" ry="2" />
<text  x="16.94" y="431.5" ></text>
</g>
<g >
<title>runtime.handoffp (13 samples, 0.01%)</title><rect x="11.9" y="389" width="0.1" height="15.0" fill="rgb(230,181,1)" rx="2" ry="2" />
<text  x="14.86" y="399.5" ></text>
</g>
<g >
<title>ext4_da_write_end (13 samples, 0.01%)</title><rect x="15.9" y="53" width="0.1" height="15.0" fill="rgb(245,84,26)" rx="2" ry="2" />
<text  x="18.92" y="63.5" ></text>
</g>
<g >
<title>[zedbox] (857 samples, 0.64%)</title><rect x="1182.5" y="485" width="7.5" height="15.0" fill="rgb(224,132,47)" rx="2" ry="2" />
<text  x="1185.47" y="495.5" ></text>
</g>
<g >
<title>x86_emulate_instruction (37 samples, 0.03%)</title><rect x="36.4" y="309" width="0.3" height="15.0" fill="rgb(207,228,24)" rx="2" ry="2" />
<text  x="39.42" y="319.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (16 samples, 0.01%)</title><rect x="24.0" y="389" width="0.2" height="15.0" fill="rgb(252,108,41)" rx="2" ry="2" />
<text  x="27.03" y="399.5" ></text>
</g>
<g >
<title>[zedbox] (507 samples, 0.38%)</title><rect x="1184.8" y="325" width="4.5" height="15.0" fill="rgb(252,226,45)" rx="2" ry="2" />
<text  x="1187.83" y="335.5" ></text>
</g>
<g >
<title>runtime.gcDrain (53 samples, 0.04%)</title><rect x="11.2" y="421" width="0.5" height="15.0" fill="rgb(206,5,36)" rx="2" ry="2" />
<text  x="14.20" y="431.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (818 samples, 0.61%)</title><rect x="35.1" y="437" width="7.2" height="15.0" fill="rgb(218,135,50)" rx="2" ry="2" />
<text  x="38.10" y="447.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/github.com/grpc-ecosystem/go-grpc-prometheus.(*ServerMetrics).StreamServerInterceptor.func1 (21 samples, 0.02%)</title><rect x="13.7" y="421" width="0.2" height="15.0" fill="rgb(234,127,14)" rx="2" ry="2" />
<text  x="16.73" y="431.5" ></text>
</g>
<g >
<title>[unknown] (22 samples, 0.02%)</title><rect x="22.7" y="485" width="0.2" height="15.0" fill="rgb(218,215,19)" rx="2" ry="2" />
<text  x="25.68" y="495.5" ></text>
</g>
<g >
<title>newlogd (34 samples, 0.03%)</title><rect x="22.9" y="501" width="0.3" height="15.0" fill="rgb(210,41,30)" rx="2" ry="2" />
<text  x="25.95" y="511.5" ></text>
</g>
<g >
<title>ksys_write (47 samples, 0.03%)</title><rect x="31.7" y="421" width="0.5" height="15.0" fill="rgb(236,12,24)" rx="2" ry="2" />
<text  x="34.74" y="431.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive.createTarFile (279 samples, 0.21%)</title><rect x="14.0" y="261" width="2.5" height="15.0" fill="rgb(217,154,1)" rx="2" ry="2" />
<text  x="17.01" y="271.5" ></text>
</g>
<g >
<title>[zedbox] (46 samples, 0.03%)</title><rect x="1181.1" y="437" width="0.4" height="15.0" fill="rgb(222,188,27)" rx="2" ry="2" />
<text  x="1184.12" y="447.5" ></text>
</g>
<g >
<title>futex_wake (43 samples, 0.03%)</title><rect x="34.5" y="389" width="0.4" height="15.0" fill="rgb(251,186,45)" rx="2" ry="2" />
<text  x="37.51" y="399.5" ></text>
</g>
<g >
<title>scsi_end_request (47 samples, 0.03%)</title><rect x="1178.8" y="293" width="0.4" height="15.0" fill="rgb(221,149,10)" rx="2" ry="2" />
<text  x="1181.83" y="303.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (32 samples, 0.02%)</title><rect x="18.7" y="437" width="0.3" height="15.0" fill="rgb(223,8,6)" rx="2" ry="2" />
<text  x="21.67" y="447.5" ></text>
</g>
<g >
<title>do_syscall_64 (30 samples, 0.02%)</title><rect x="1189.5" y="325" width="0.3" height="15.0" fill="rgb(209,61,27)" rx="2" ry="2" />
<text  x="1192.51" y="335.5" ></text>
</g>
<g >
<title>qemu-system-x86 (2,177 samples, 1.62%)</title><rect x="23.4" y="501" width="19.2" height="15.0" fill="rgb(222,51,45)" rx="2" ry="2" />
<text  x="26.45" y="511.5" ></text>
</g>
<g >
<title>[zedbox] (854 samples, 0.64%)</title><rect x="1182.5" y="469" width="7.5" height="15.0" fill="rgb(225,79,47)" rx="2" ry="2" />
<text  x="1185.48" y="479.5" ></text>
</g>
<g >
<title>wake_up_q (42 samples, 0.03%)</title><rect x="34.5" y="373" width="0.4" height="15.0" fill="rgb(230,72,7)" rx="2" ry="2" />
<text  x="37.52" y="383.5" ></text>
</g>
<g >
<title>[zedbox] (168 samples, 0.13%)</title><rect x="1186.9" y="229" width="1.5" height="15.0" fill="rgb(239,33,38)" rx="2" ry="2" />
<text  x="1189.93" y="239.5" ></text>
</g>
<g >
<title>apic_has_pending_timer (28 samples, 0.02%)</title><rect x="38.5" y="309" width="0.2" height="15.0" fill="rgb(253,133,50)" rx="2" ry="2" />
<text  x="41.48" y="319.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (39 samples, 0.03%)</title><rect x="35.3" y="261" width="0.4" height="15.0" fill="rgb(244,22,2)" rx="2" ry="2" />
<text  x="38.31" y="271.5" ></text>
</g>
<g >
<title>eventfd_write (39 samples, 0.03%)</title><rect x="31.8" y="389" width="0.3" height="15.0" fill="rgb(249,1,7)" rx="2" ry="2" />
<text  x="34.79" y="399.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/gc/scheduler.(*gcScheduler).run (30 samples, 0.02%)</title><rect x="13.2" y="469" width="0.3" height="15.0" fill="rgb(238,168,13)" rx="2" ry="2" />
<text  x="16.23" y="479.5" ></text>
</g>
<g >
<title>finish_task_switch (20 samples, 0.01%)</title><rect x="23.8" y="341" width="0.2" height="15.0" fill="rgb(208,66,49)" rx="2" ry="2" />
<text  x="26.82" y="351.5" ></text>
</g>
<g >
<title>__sched_text_start (123 samples, 0.09%)</title><rect x="1179.7" y="405" width="1.1" height="15.0" fill="rgb(208,112,20)" rx="2" ry="2" />
<text  x="1182.75" y="415.5" ></text>
</g>
<g >
<title>[unknown] (297 samples, 0.22%)</title><rect x="10.6" y="485" width="2.6" height="15.0" fill="rgb(248,32,10)" rx="2" ry="2" />
<text  x="13.61" y="495.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/google.golang.org/grpc.(*Server).handleStream (483 samples, 0.36%)</title><rect x="13.7" y="453" width="4.3" height="15.0" fill="rgb(211,105,5)" rx="2" ry="2" />
<text  x="16.73" y="463.5" ></text>
</g>
<g >
<title>[zedbox] (96 samples, 0.07%)</title><rect x="1187.2" y="197" width="0.9" height="15.0" fill="rgb(219,137,38)" rx="2" ry="2" />
<text  x="1190.24" y="207.5" ></text>
</g>
<g >
<title>kvm_cpu_has_interrupt (88 samples, 0.07%)</title><rect x="39.2" y="293" width="0.8" height="15.0" fill="rgb(222,70,30)" rx="2" ry="2" />
<text  x="42.19" y="303.5" ></text>
</g>
<g >
<title>__raw_spin_unlock_irq (19 samples, 0.01%)</title><rect x="23.8" y="325" width="0.2" height="15.0" fill="rgb(244,57,9)" rx="2" ry="2" />
<text  x="26.83" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.01%)</title><rect x="34.0" y="437" width="0.1" height="15.0" fill="rgb(252,177,0)" rx="2" ry="2" />
<text  x="37.03" y="447.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/diff/apply.apply (452 samples, 0.34%)</title><rect x="13.9" y="309" width="4.0" height="15.0" fill="rgb(214,179,32)" rx="2" ry="2" />
<text  x="16.94" y="319.5" ></text>
</g>
<g >
<title>[zedbox] (13 samples, 0.01%)</title><rect x="1187.8" y="85" width="0.1" height="15.0" fill="rgb(248,62,9)" rx="2" ry="2" />
<text  x="1190.80" y="95.5" ></text>
</g>
<g >
<title>[zedbox] (46 samples, 0.03%)</title><rect x="1181.1" y="421" width="0.4" height="15.0" fill="rgb(227,204,1)" rx="2" ry="2" />
<text  x="1184.12" y="431.5" ></text>
</g>
<g >
<title>[ld-musl-x86_64.so.1] (104 samples, 0.08%)</title><rect x="18.1" y="485" width="0.9" height="15.0" fill="rgb(243,139,12)" rx="2" ry="2" />
<text  x="21.06" y="495.5" ></text>
</g>
<g >
<title>kthread (70 samples, 0.05%)</title><rect x="19.4" y="469" width="0.6" height="15.0" fill="rgb(219,192,26)" rx="2" ry="2" />
<text  x="22.43" y="479.5" ></text>
</g>
<g >
<title>jbd2_journal_commit_transaction (67 samples, 0.05%)</title><rect x="19.5" y="437" width="0.5" height="15.0" fill="rgb(239,210,35)" rx="2" ry="2" />
<text  x="22.45" y="447.5" ></text>
</g>
<g >
<title>runtime.notetsleepg (30 samples, 0.02%)</title><rect x="11.7" y="437" width="0.3" height="15.0" fill="rgb(252,38,38)" rx="2" ry="2" />
<text  x="14.71" y="447.5" ></text>
</g>
<g >
<title>eventfd_signal (39 samples, 0.03%)</title><rect x="35.3" y="277" width="0.4" height="15.0" fill="rgb(241,74,45)" rx="2" ry="2" />
<text  x="38.31" y="287.5" ></text>
</g>
<g >
<title>[zedbox] (126 samples, 0.09%)</title><rect x="1187.1" y="213" width="1.1" height="15.0" fill="rgb(215,14,43)" rx="2" ry="2" />
<text  x="1190.09" y="223.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).Read (195 samples, 0.15%)</title><rect x="14.0" y="117" width="1.7" height="15.0" fill="rgb(222,154,24)" rx="2" ry="2" />
<text  x="17.03" y="127.5" ></text>
</g>
<g >
<title>fput_many (23 samples, 0.02%)</title><rect x="30.0" y="373" width="0.2" height="15.0" fill="rgb(209,61,32)" rx="2" ry="2" />
<text  x="33.01" y="383.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (12 samples, 0.01%)</title><rect x="24.0" y="325" width="0.1" height="15.0" fill="rgb(227,42,35)" rx="2" ry="2" />
<text  x="27.03" y="335.5" ></text>
</g>
<g >
<title>__cpuidle_text_start (31,951 samples, 23.79%)</title><rect x="42.8" y="421" width="280.7" height="15.0" fill="rgb(237,184,50)" rx="2" ry="2" />
<text  x="45.80" y="431.5" >__cpuidle_text_start</text>
</g>
<g >
<title>[newlogd] (25 samples, 0.02%)</title><rect x="22.9" y="485" width="0.3" height="15.0" fill="rgb(230,105,38)" rx="2" ry="2" />
<text  x="25.95" y="495.5" ></text>
</g>
<g >
<title>generic_perform_write (13 samples, 0.01%)</title><rect x="17.4" y="37" width="0.1" height="15.0" fill="rgb(244,73,7)" rx="2" ry="2" />
<text  x="20.40" y="47.5" ></text>
</g>
<g >
<title>wake_up_q (12 samples, 0.01%)</title><rect x="1181.3" y="261" width="0.1" height="15.0" fill="rgb(220,229,32)" rx="2" ry="2" />
<text  x="1184.27" y="271.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).huffSym (49 samples, 0.04%)</title><rect x="14.5" y="85" width="0.5" height="15.0" fill="rgb(235,60,44)" rx="2" ry="2" />
<text  x="17.54" y="95.5" ></text>
</g>
<g >
<title>__srcu_read_unlock (13 samples, 0.01%)</title><rect x="38.4" y="309" width="0.1" height="15.0" fill="rgb(242,184,12)" rx="2" ry="2" />
<text  x="41.36" y="319.5" ></text>
</g>
<g >
<title>[memlogd] (15 samples, 0.01%)</title><rect x="22.5" y="405" width="0.2" height="15.0" fill="rgb(215,77,48)" rx="2" ry="2" />
<text  x="25.54" y="415.5" ></text>
</g>
<g >
<title>do_writepages (13 samples, 0.01%)</title><rect x="22.4" y="341" width="0.1" height="15.0" fill="rgb(240,30,7)" rx="2" ry="2" />
<text  x="25.35" y="351.5" ></text>
</g>
<g >
<title>[memlogd] (21 samples, 0.02%)</title><rect x="22.7" y="453" width="0.2" height="15.0" fill="rgb(209,72,21)" rx="2" ry="2" />
<text  x="25.68" y="463.5" ></text>
</g>
<g >
<title>runtime.systemstack (54 samples, 0.04%)</title><rect x="11.2" y="453" width="0.5" height="15.0" fill="rgb(216,25,25)" rx="2" ry="2" />
<text  x="14.20" y="463.5" ></text>
</g>
<g >
<title>vmx_read_guest_seg_ar (14 samples, 0.01%)</title><rect x="36.6" y="229" width="0.1" height="15.0" fill="rgb(213,154,9)" rx="2" ry="2" />
<text  x="39.57" y="239.5" ></text>
</g>
<g >
<title>sem_post (46 samples, 0.03%)</title><rect x="34.5" y="469" width="0.4" height="15.0" fill="rgb(240,228,3)" rx="2" ry="2" />
<text  x="37.49" y="479.5" ></text>
</g>
<g >
<title>ext4_create (14 samples, 0.01%)</title><rect x="16.2" y="101" width="0.1" height="15.0" fill="rgb(228,113,36)" rx="2" ry="2" />
<text  x="19.18" y="111.5" ></text>
</g>
<g >
<title>scsi_queue_rq (14 samples, 0.01%)</title><rect x="22.2" y="309" width="0.1" height="15.0" fill="rgb(220,227,31)" rx="2" ry="2" />
<text  x="25.18" y="319.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/services/diff.(*local).Apply (452 samples, 0.34%)</title><rect x="13.9" y="357" width="4.0" height="15.0" fill="rgb(229,211,16)" rx="2" ry="2" />
<text  x="16.94" y="367.5" ></text>
</g>
<g >
<title>do_sys_open (15 samples, 0.01%)</title><rect x="16.2" y="149" width="0.1" height="15.0" fill="rgb(243,34,35)" rx="2" ry="2" />
<text  x="19.17" y="159.5" ></text>
</g>
<g >
<title>[zedbox] (226 samples, 0.17%)</title><rect x="1186.6" y="245" width="1.9" height="15.0" fill="rgb(210,36,20)" rx="2" ry="2" />
<text  x="1189.56" y="255.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (36 samples, 0.03%)</title><rect x="15.8" y="181" width="0.3" height="15.0" fill="rgb(207,158,24)" rx="2" ry="2" />
<text  x="18.77" y="191.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (41 samples, 0.03%)</title><rect x="34.5" y="325" width="0.4" height="15.0" fill="rgb(235,76,27)" rx="2" ry="2" />
<text  x="37.53" y="335.5" ></text>
</g>
<g >
<title>runtime.selectgo (18 samples, 0.01%)</title><rect x="13.3" y="453" width="0.2" height="15.0" fill="rgb(232,113,52)" rx="2" ry="2" />
<text  x="16.34" y="463.5" ></text>
</g>
<g >
<title>__generic_file_write_iter (34 samples, 0.03%)</title><rect x="15.8" y="85" width="0.3" height="15.0" fill="rgb(223,71,17)" rx="2" ry="2" />
<text  x="18.79" y="95.5" ></text>
</g>
<g >
<title>ksys_write (15 samples, 0.01%)</title><rect x="17.4" y="117" width="0.1" height="15.0" fill="rgb(241,116,25)" rx="2" ry="2" />
<text  x="20.38" y="127.5" ></text>
</g>
<g >
<title>vfs_ioctl (817 samples, 0.61%)</title><rect x="35.1" y="389" width="7.2" height="15.0" fill="rgb(244,197,1)" rx="2" ry="2" />
<text  x="38.11" y="399.5" ></text>
</g>
<g >
<title>vfs_write (17 samples, 0.01%)</title><rect x="1189.6" y="293" width="0.2" height="15.0" fill="rgb(246,228,5)" rx="2" ry="2" />
<text  x="1192.62" y="303.5" ></text>
</g>
<g >
<title>__cpuidle_text_start (97,364 samples, 72.48%)</title><rect x="324.1" y="421" width="855.3" height="15.0" fill="rgb(243,123,39)" rx="2" ry="2" />
<text  x="327.13" y="431.5" >__cpuidle_text_start</text>
</g>
<g >
<title>arch_local_irq_enable (12 samples, 0.01%)</title><rect x="323.5" y="421" width="0.1" height="15.0" fill="rgb(226,136,35)" rx="2" ry="2" />
<text  x="326.49" y="431.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (23 samples, 0.02%)</title><rect x="10.7" y="453" width="0.2" height="15.0" fill="rgb(214,3,26)" rx="2" ry="2" />
<text  x="13.75" y="463.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).huffSym (41 samples, 0.03%)</title><rect x="15.3" y="69" width="0.3" height="15.0" fill="rgb(242,193,46)" rx="2" ry="2" />
<text  x="18.29" y="79.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.01%)</title><rect x="16.2" y="181" width="0.1" height="15.0" fill="rgb(207,126,50)" rx="2" ry="2" />
<text  x="19.17" y="191.5" ></text>
</g>
<g >
<title>[zedbox] (450 samples, 0.33%)</title><rect x="1185.2" y="309" width="4.0" height="15.0" fill="rgb(251,63,39)" rx="2" ry="2" />
<text  x="1188.22" y="319.5" ></text>
</g>
<g >
<title>kvm_arch_vcpu_ioctl_run (793 samples, 0.59%)</title><rect x="35.1" y="357" width="7.0" height="15.0" fill="rgb(223,196,52)" rx="2" ry="2" />
<text  x="38.11" y="367.5" ></text>
</g>
<g >
<title>[memlogd] (18 samples, 0.01%)</title><rect x="22.5" y="453" width="0.2" height="15.0" fill="rgb(227,110,2)" rx="2" ry="2" />
<text  x="25.53" y="463.5" ></text>
</g>
<g >
<title>receive_buf (17 samples, 0.01%)</title><rect x="1179.3" y="293" width="0.1" height="15.0" fill="rgb(208,109,3)" rx="2" ry="2" />
<text  x="1182.26" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (16 samples, 0.01%)</title><rect x="1188.8" y="245" width="0.1" height="15.0" fill="rgb(219,18,21)" rx="2" ry="2" />
<text  x="1191.80" y="255.5" ></text>
</g>
<g >
<title>do_syscall_64 (818 samples, 0.61%)</title><rect x="35.1" y="453" width="7.2" height="15.0" fill="rgb(228,7,23)" rx="2" ry="2" />
<text  x="38.10" y="463.5" ></text>
</g>
<g >
<title>__kvm_set_msr (24 samples, 0.02%)</title><rect x="35.9" y="325" width="0.2" height="15.0" fill="rgb(213,132,3)" rx="2" ry="2" />
<text  x="38.91" y="335.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).nextBlock (34 samples, 0.03%)</title><rect x="17.1" y="69" width="0.3" height="15.0" fill="rgb(205,177,27)" rx="2" ry="2" />
<text  x="20.06" y="79.5" ></text>
</g>
<g >
<title>blk_finish_plug (14 samples, 0.01%)</title><rect x="19.6" y="421" width="0.1" height="15.0" fill="rgb(233,224,22)" rx="2" ry="2" />
<text  x="22.57" y="431.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (16 samples, 0.01%)</title><rect x="1179.3" y="261" width="0.1" height="15.0" fill="rgb(243,0,3)" rx="2" ry="2" />
<text  x="1182.26" y="271.5" ></text>
</g>
<g >
<title>fput_many (29 samples, 0.02%)</title><rect x="29.1" y="389" width="0.2" height="15.0" fill="rgb(236,110,47)" rx="2" ry="2" />
<text  x="32.05" y="399.5" ></text>
</g>
<g >
<title>kvm_fetch_guest_virt (23 samples, 0.02%)</title><rect x="36.5" y="261" width="0.2" height="15.0" fill="rgb(208,40,37)" rx="2" ry="2" />
<text  x="39.49" y="271.5" ></text>
</g>
<g >
<title>[unknown] (69 samples, 0.05%)</title><rect x="33.6" y="469" width="0.6" height="15.0" fill="rgb(223,104,14)" rx="2" ry="2" />
<text  x="36.57" y="479.5" ></text>
</g>
<g >
<title>[newlogd] (25 samples, 0.02%)</title><rect x="22.9" y="437" width="0.3" height="15.0" fill="rgb(212,91,53)" rx="2" ry="2" />
<text  x="25.95" y="447.5" ></text>
</g>
<g >
<title>vmx_get_cpl (14 samples, 0.01%)</title><rect x="36.6" y="245" width="0.1" height="15.0" fill="rgb(244,102,12)" rx="2" ry="2" />
<text  x="39.57" y="255.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (14 samples, 0.01%)</title><rect x="42.1" y="229" width="0.2" height="15.0" fill="rgb(242,172,14)" rx="2" ry="2" />
<text  x="45.13" y="239.5" ></text>
</g>
<g >
<title>blk_mq_flush_plug_list (14 samples, 0.01%)</title><rect x="19.6" y="389" width="0.1" height="15.0" fill="rgb(208,50,30)" rx="2" ry="2" />
<text  x="22.57" y="399.5" ></text>
</g>
<g >
<title>handle_ept_misconfig (44 samples, 0.03%)</title><rect x="35.3" y="341" width="0.4" height="15.0" fill="rgb(205,150,47)" rx="2" ry="2" />
<text  x="38.28" y="351.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (16 samples, 0.01%)</title><rect x="11.7" y="421" width="0.2" height="15.0" fill="rgb(215,48,26)" rx="2" ry="2" />
<text  x="14.71" y="431.5" ></text>
</g>
<g >
<title>do_syscall_64 (50 samples, 0.04%)</title><rect x="23.7" y="453" width="0.5" height="15.0" fill="rgb(223,104,36)" rx="2" ry="2" />
<text  x="26.74" y="463.5" ></text>
</g>
<g >
<title>os.OpenFile (18 samples, 0.01%)</title><rect x="16.1" y="229" width="0.2" height="15.0" fill="rgb(217,27,53)" rx="2" ry="2" />
<text  x="19.15" y="239.5" ></text>
</g>
<g >
<title>memmove (13 samples, 0.01%)</title><rect x="42.4" y="485" width="0.2" height="15.0" fill="rgb(212,151,53)" rx="2" ry="2" />
<text  x="45.44" y="495.5" ></text>
</g>
<g >
<title>do_iter_write (12 samples, 0.01%)</title><rect x="24.0" y="357" width="0.1" height="15.0" fill="rgb(224,33,50)" rx="2" ry="2" />
<text  x="27.03" y="367.5" ></text>
</g>
<g >
<title>vmx_set_msr (24 samples, 0.02%)</title><rect x="35.9" y="309" width="0.2" height="15.0" fill="rgb(250,101,41)" rx="2" ry="2" />
<text  x="38.91" y="319.5" ></text>
</g>
<g >
<title>try_to_wake_up (41 samples, 0.03%)</title><rect x="34.5" y="357" width="0.4" height="15.0" fill="rgb(244,124,29)" rx="2" ry="2" />
<text  x="37.53" y="367.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (90 samples, 0.07%)</title><rect x="322.6" y="373" width="0.8" height="15.0" fill="rgb(254,6,38)" rx="2" ry="2" />
<text  x="325.63" y="383.5" ></text>
</g>
<g >
<title>syscall.Syscall (36 samples, 0.03%)</title><rect x="15.8" y="197" width="0.3" height="15.0" fill="rgb(207,194,39)" rx="2" ry="2" />
<text  x="18.77" y="207.5" ></text>
</g>
<g >
<title>__apic_accept_irq (16 samples, 0.01%)</title><rect x="42.1" y="293" width="0.2" height="15.0" fill="rgb(248,65,48)" rx="2" ry="2" />
<text  x="45.13" y="303.5" ></text>
</g>
<g >
<title>[qemu-system-x86_64] (43 samples, 0.03%)</title><rect x="24.3" y="485" width="0.4" height="15.0" fill="rgb(228,93,44)" rx="2" ry="2" />
<text  x="27.30" y="495.5" ></text>
</g>
<g >
<title>__writeback_single_inode (13 samples, 0.01%)</title><rect x="22.4" y="357" width="0.1" height="15.0" fill="rgb(206,70,22)" rx="2" ry="2" />
<text  x="25.35" y="367.5" ></text>
</g>
<g >
<title>archive/tar.(*Reader).Read (75 samples, 0.06%)</title><rect x="16.7" y="197" width="0.7" height="15.0" fill="rgb(234,221,31)" rx="2" ry="2" />
<text  x="19.70" y="207.5" ></text>
</g>
<g >
<title>kvm_irq_delivery_to_apic_fast (19 samples, 0.01%)</title><rect x="42.1" y="309" width="0.2" height="15.0" fill="rgb(245,32,44)" rx="2" ry="2" />
<text  x="45.11" y="319.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (12 samples, 0.01%)</title><rect x="1181.3" y="213" width="0.1" height="15.0" fill="rgb(253,162,17)" rx="2" ry="2" />
<text  x="1184.27" y="223.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (13 samples, 0.01%)</title><rect x="1178.9" y="261" width="0.1" height="15.0" fill="rgb(212,200,27)" rx="2" ry="2" />
<text  x="1181.85" y="271.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (14 samples, 0.01%)</title><rect x="42.1" y="245" width="0.2" height="15.0" fill="rgb(229,125,8)" rx="2" ry="2" />
<text  x="45.13" y="255.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/vendor/github.com/grpc-ecosystem/go-grpc-prometheus.(*ServerMetrics).UnaryServerInterceptor.func1 (452 samples, 0.34%)</title><rect x="13.9" y="405" width="4.0" height="15.0" fill="rgb(216,105,32)" rx="2" ry="2" />
<text  x="16.94" y="415.5" ></text>
</g>
<g >
<title>[newlogd] (20 samples, 0.01%)</title><rect x="23.0" y="373" width="0.2" height="15.0" fill="rgb(220,27,28)" rx="2" ry="2" />
<text  x="25.97" y="383.5" ></text>
</g>
<g >
<title>[zedbox] (60 samples, 0.04%)</title><rect x="1187.5" y="181" width="0.5" height="15.0" fill="rgb(238,16,0)" rx="2" ry="2" />
<text  x="1190.47" y="191.5" ></text>
</g>
<g >
<title>schedule (21 samples, 0.02%)</title><rect x="23.8" y="373" width="0.2" height="15.0" fill="rgb(238,85,50)" rx="2" ry="2" />
<text  x="26.81" y="383.5" ></text>
</g>
<g >
<title>[zedbox] (692 samples, 0.52%)</title><rect x="1183.8" y="373" width="6.1" height="15.0" fill="rgb(251,64,33)" rx="2" ry="2" />
<text  x="1186.78" y="383.5" ></text>
</g>
<g >
<title>timekeeping_get_ns (113 samples, 0.08%)</title><rect x="36.9" y="309" width="1.0" height="15.0" fill="rgb(232,145,22)" rx="2" ry="2" />
<text  x="39.91" y="319.5" ></text>
</g>
<g >
<title>runtime.futex (22 samples, 0.02%)</title><rect x="10.8" y="437" width="0.1" height="15.0" fill="rgb(241,197,12)" rx="2" ry="2" />
<text  x="13.76" y="447.5" ></text>
</g>
<g >
<title>zedbox (1,011 samples, 0.75%)</title><rect x="1181.1" y="501" width="8.9" height="15.0" fill="rgb(246,3,54)" rx="2" ry="2" />
<text  x="1184.12" y="511.5" ></text>
</g>
<g >
<title>load_balance (13 samples, 0.01%)</title><rect x="322.8" y="309" width="0.1" height="15.0" fill="rgb(245,46,32)" rx="2" ry="2" />
<text  x="325.81" y="319.5" ></text>
</g>
<g >
<title>kvm_lapic_reg_write (22 samples, 0.02%)</title><rect x="35.9" y="277" width="0.2" height="15.0" fill="rgb(221,62,47)" rx="2" ry="2" />
<text  x="38.91" y="287.5" ></text>
</g>
<g >
<title>__generic_file_write_iter (12 samples, 0.01%)</title><rect x="24.0" y="309" width="0.1" height="15.0" fill="rgb(230,32,41)" rx="2" ry="2" />
<text  x="27.03" y="319.5" ></text>
</g>
<g >
<title>kvm_irq_delivery_to_apic (20 samples, 0.01%)</title><rect x="42.1" y="325" width="0.2" height="15.0" fill="rgb(250,5,2)" rx="2" ry="2" />
<text  x="45.10" y="335.5" ></text>
</g>
<g >
<title>virtnet_poll (17 samples, 0.01%)</title><rect x="1179.3" y="309" width="0.1" height="15.0" fill="rgb(213,158,44)" rx="2" ry="2" />
<text  x="1182.26" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (751 samples, 0.56%)</title><rect x="25.6" y="437" width="6.6" height="15.0" fill="rgb(232,156,29)" rx="2" ry="2" />
<text  x="28.56" y="447.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (19 samples, 0.01%)</title><rect x="1178.6" y="325" width="0.2" height="15.0" fill="rgb(223,121,20)" rx="2" ry="2" />
<text  x="1181.61" y="335.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive.createTarFile (121 samples, 0.09%)</title><rect x="16.7" y="229" width="1.0" height="15.0" fill="rgb(247,216,26)" rx="2" ry="2" />
<text  x="19.68" y="239.5" ></text>
</g>
<g >
<title>__generic_file_write_iter (14 samples, 0.01%)</title><rect x="17.4" y="53" width="0.1" height="15.0" fill="rgb(242,128,19)" rx="2" ry="2" />
<text  x="20.39" y="63.5" ></text>
</g>
<g >
<title>[newlogd] (23 samples, 0.02%)</title><rect x="23.0" y="405" width="0.2" height="15.0" fill="rgb(251,91,17)" rx="2" ry="2" />
<text  x="25.97" y="415.5" ></text>
</g>
<g >
<title>try_to_wake_up (12 samples, 0.01%)</title><rect x="1181.3" y="245" width="0.1" height="15.0" fill="rgb(248,25,3)" rx="2" ry="2" />
<text  x="1184.27" y="255.5" ></text>
</g>
<g >
<title>do_iter_write (16 samples, 0.01%)</title><rect x="24.0" y="405" width="0.2" height="15.0" fill="rgb(214,187,32)" rx="2" ry="2" />
<text  x="27.03" y="415.5" ></text>
</g>
<g >
<title>[newlogd] (24 samples, 0.02%)</title><rect x="23.0" y="421" width="0.2" height="15.0" fill="rgb(239,174,18)" rx="2" ry="2" />
<text  x="25.96" y="431.5" ></text>
</g>
<g >
<title>__fcheck_files (25 samples, 0.02%)</title><rect x="27.2" y="357" width="0.2" height="15.0" fill="rgb(214,138,47)" rx="2" ry="2" />
<text  x="30.23" y="367.5" ></text>
</g>
<g >
<title>[memlogd] (18 samples, 0.01%)</title><rect x="22.5" y="469" width="0.2" height="15.0" fill="rgb(214,127,1)" rx="2" ry="2" />
<text  x="25.53" y="479.5" ></text>
</g>
<g >
<title>archive/tar.(*regFileReader).Read (199 samples, 0.15%)</title><rect x="14.0" y="213" width="1.8" height="15.0" fill="rgb(230,175,27)" rx="2" ry="2" />
<text  x="17.01" y="223.5" ></text>
</g>
<g >
<title>compress/gzip.(*Reader).Read (75 samples, 0.06%)</title><rect x="16.7" y="101" width="0.7" height="15.0" fill="rgb(209,23,28)" rx="2" ry="2" />
<text  x="19.70" y="111.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (14 samples, 0.01%)</title><rect x="35.9" y="181" width="0.2" height="15.0" fill="rgb(227,212,9)" rx="2" ry="2" />
<text  x="38.94" y="191.5" ></text>
</g>
<g >
<title>containerd-shim (61 samples, 0.05%)</title><rect x="10.1" y="501" width="0.5" height="15.0" fill="rgb(216,160,13)" rx="2" ry="2" />
<text  x="13.07" y="511.5" ></text>
</g>
<g >
<title>do_syscall_64 (16 samples, 0.01%)</title><rect x="10.8" y="405" width="0.1" height="15.0" fill="rgb(254,63,0)" rx="2" ry="2" />
<text  x="13.81" y="415.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker.func2 (38 samples, 0.03%)</title><rect x="10.2" y="437" width="0.3" height="15.0" fill="rgb(249,58,38)" rx="2" ry="2" />
<text  x="13.21" y="447.5" ></text>
</g>
<g >
<title>__raw_spin_unlock_irq (36 samples, 0.03%)</title><rect x="31.8" y="373" width="0.3" height="15.0" fill="rgb(217,102,11)" rx="2" ry="2" />
<text  x="34.79" y="383.5" ></text>
</g>
<g >
<title>compress/flate.(*decompressor).Read (75 samples, 0.06%)</title><rect x="16.7" y="85" width="0.7" height="15.0" fill="rgb(237,134,12)" rx="2" ry="2" />
<text  x="19.70" y="95.5" ></text>
</g>
<g >
<title>__raw_spin_unlock_irq (19 samples, 0.01%)</title><rect x="30.4" y="309" width="0.2" height="15.0" fill="rgb(231,193,47)" rx="2" ry="2" />
<text  x="33.41" y="319.5" ></text>
</g>
<g >
<title>[zedbox] (739 samples, 0.55%)</title><rect x="1183.4" y="389" width="6.5" height="15.0" fill="rgb(249,88,11)" rx="2" ry="2" />
<text  x="1186.43" y="399.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (14 samples, 0.01%)</title><rect x="17.4" y="69" width="0.1" height="15.0" fill="rgb(230,147,23)" rx="2" ry="2" />
<text  x="20.39" y="79.5" ></text>
</g>
<g >
<title>[zedbox] (353 samples, 0.26%)</title><rect x="1185.9" y="277" width="3.1" height="15.0" fill="rgb(233,138,33)" rx="2" ry="2" />
<text  x="1188.88" y="287.5" ></text>
</g>
<g >
<title>__generic_file_write_iter (14 samples, 0.01%)</title><rect x="1189.6" y="245" width="0.2" height="15.0" fill="rgb(245,197,13)" rx="2" ry="2" />
<text  x="1192.63" y="255.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (44 samples, 0.03%)</title><rect x="322.9" y="293" width="0.4" height="15.0" fill="rgb(239,22,51)" rx="2" ry="2" />
<text  x="325.93" y="303.5" ></text>
</g>
<g >
<title>kvm_vcpu_kick (15 samples, 0.01%)</title><rect x="42.1" y="277" width="0.2" height="15.0" fill="rgb(221,11,39)" rx="2" ry="2" />
<text  x="45.13" y="287.5" ></text>
</g>
<g >
<title>__do_sys_nanosleep (14 samples, 0.01%)</title><rect x="1181.4" y="341" width="0.1" height="15.0" fill="rgb(230,93,42)" rx="2" ry="2" />
<text  x="1184.38" y="351.5" ></text>
</g>
<g >
<title>[unknown] (22 samples, 0.02%)</title><rect x="22.7" y="469" width="0.2" height="15.0" fill="rgb(231,54,33)" rx="2" ry="2" />
<text  x="25.68" y="479.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (19 samples, 0.01%)</title><rect x="23.8" y="309" width="0.2" height="15.0" fill="rgb(242,76,41)" rx="2" ry="2" />
<text  x="26.83" y="319.5" ></text>
</g>
<g >
<title>apic_enabled (17 samples, 0.01%)</title><rect x="38.6" y="293" width="0.1" height="15.0" fill="rgb(213,59,45)" rx="2" ry="2" />
<text  x="41.58" y="303.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (16 samples, 0.01%)</title><rect x="1179.3" y="245" width="0.1" height="15.0" fill="rgb(231,68,12)" rx="2" ry="2" />
<text  x="1182.26" y="255.5" ></text>
</g>
<g >
<title>native_safe_halt (31,949 samples, 23.78%)</title><rect x="42.8" y="405" width="280.7" height="15.0" fill="rgb(211,119,18)" rx="2" ry="2" />
<text  x="45.82" y="415.5" >native_safe_halt</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.01%)</title><rect x="22.7" y="421" width="0.2" height="15.0" fill="rgb(218,147,47)" rx="2" ry="2" />
<text  x="25.74" y="431.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (13 samples, 0.01%)</title><rect x="1178.9" y="277" width="0.1" height="15.0" fill="rgb(222,117,7)" rx="2" ry="2" />
<text  x="1181.85" y="287.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive.copyBuffered (93 samples, 0.07%)</title><rect x="16.7" y="213" width="0.8" height="15.0" fill="rgb(214,0,54)" rx="2" ry="2" />
<text  x="19.70" y="223.5" ></text>
</g>
<g >
<title>finish_task_switch (121 samples, 0.09%)</title><rect x="1179.8" y="389" width="1.0" height="15.0" fill="rgb(237,18,22)" rx="2" ry="2" />
<text  x="1182.77" y="399.5" ></text>
</g>
<g >
<title>rebalance_domains (14 samples, 0.01%)</title><rect x="322.8" y="325" width="0.1" height="15.0" fill="rgb(250,115,18)" rx="2" ry="2" />
<text  x="325.80" y="335.5" ></text>
</g>
<g >
<title>kvm_emulate_wrmsr (24 samples, 0.02%)</title><rect x="35.9" y="341" width="0.2" height="15.0" fill="rgb(243,31,29)" rx="2" ry="2" />
<text  x="38.91" y="351.5" ></text>
</g>
<g >
<title>kworker/u8:2-ev (13 samples, 0.01%)</title><rect x="22.4" y="501" width="0.1" height="15.0" fill="rgb(245,113,48)" rx="2" ry="2" />
<text  x="25.35" y="511.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (44 samples, 0.03%)</title><rect x="34.5" y="453" width="0.4" height="15.0" fill="rgb(238,129,30)" rx="2" ry="2" />
<text  x="37.51" y="463.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.01%)</title><rect x="17.4" y="149" width="0.1" height="15.0" fill="rgb(241,126,54)" rx="2" ry="2" />
<text  x="20.38" y="159.5" ></text>
</g>
<g >
<title>[memlogd] (18 samples, 0.01%)</title><rect x="22.7" y="437" width="0.2" height="15.0" fill="rgb(209,186,29)" rx="2" ry="2" />
<text  x="25.70" y="447.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/services/content/contentserver.(*service).Write (21 samples, 0.02%)</title><rect x="13.7" y="389" width="0.2" height="15.0" fill="rgb(205,2,28)" rx="2" ry="2" />
<text  x="16.73" y="399.5" ></text>
</g>
<g >
<title>skip_emulated_instruction (37 samples, 0.03%)</title><rect x="36.4" y="325" width="0.3" height="15.0" fill="rgb(235,13,37)" rx="2" ry="2" />
<text  x="39.42" y="335.5" ></text>
</g>
<g >
<title>apic_has_interrupt_for_ppr (15 samples, 0.01%)</title><rect x="39.6" y="261" width="0.2" height="15.0" fill="rgb(215,200,34)" rx="2" ry="2" />
<text  x="42.62" y="271.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (14 samples, 0.01%)</title><rect x="32.2" y="437" width="0.1" height="15.0" fill="rgb(254,218,12)" rx="2" ry="2" />
<text  x="35.15" y="447.5" ></text>
</g>
<g >
<title>jq (203 samples, 0.15%)</title><rect x="20.0" y="501" width="1.8" height="15.0" fill="rgb(237,202,8)" rx="2" ry="2" />
<text  x="23.05" y="511.5" ></text>
</g>
<g >
<title>archive/tar.(*Reader).Read (199 samples, 0.15%)</title><rect x="14.0" y="229" width="1.8" height="15.0" fill="rgb(224,138,32)" rx="2" ry="2" />
<text  x="17.01" y="239.5" ></text>
</g>
<g >
<title>[newlogd] (21 samples, 0.02%)</title><rect x="23.0" y="389" width="0.2" height="15.0" fill="rgb(217,99,10)" rx="2" ry="2" />
<text  x="25.97" y="399.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (30 samples, 0.02%)</title><rect x="30.9" y="421" width="0.3" height="15.0" fill="rgb(235,98,50)" rx="2" ry="2" />
<text  x="33.90" y="431.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (41 samples, 0.03%)</title><rect x="34.5" y="341" width="0.4" height="15.0" fill="rgb(224,109,49)" rx="2" ry="2" />
<text  x="37.53" y="351.5" ></text>
</g>
<g >
<title>futex_wait (28 samples, 0.02%)</title><rect x="23.7" y="405" width="0.3" height="15.0" fill="rgb(206,55,20)" rx="2" ry="2" />
<text  x="26.75" y="415.5" ></text>
</g>
<g >
<title>finish_task_switch (29 samples, 0.02%)</title><rect x="41.4" y="293" width="0.2" height="15.0" fill="rgb(244,100,43)" rx="2" ry="2" />
<text  x="44.38" y="303.5" ></text>
</g>
<g >
<title>__do_sys_futex (13 samples, 0.01%)</title><rect x="10.8" y="389" width="0.1" height="15.0" fill="rgb(228,200,24)" rx="2" ry="2" />
<text  x="13.83" y="399.5" ></text>
</g>
<g >
<title>[qemu-system-x86_64] (93 samples, 0.07%)</title><rect x="32.8" y="469" width="0.8" height="15.0" fill="rgb(211,224,18)" rx="2" ry="2" />
<text  x="35.75" y="479.5" ></text>
</g>
<g >
<title>blk_update_request (27 samples, 0.02%)</title><rect x="1179.0" y="277" width="0.2" height="15.0" fill="rgb(244,66,32)" rx="2" ry="2" />
<text  x="1181.99" y="287.5" ></text>
</g>
<g >
<title>do_futex (29 samples, 0.02%)</title><rect x="23.7" y="421" width="0.3" height="15.0" fill="rgb(218,4,42)" rx="2" ry="2" />
<text  x="26.74" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.01%)</title><rect x="1188.4" y="229" width="0.1" height="15.0" fill="rgb(217,52,5)" rx="2" ry="2" />
<text  x="1191.41" y="239.5" ></text>
</g>
<g >
<title>do_syscall_64 (22 samples, 0.02%)</title><rect x="1188.2" y="197" width="0.2" height="15.0" fill="rgb(249,221,20)" rx="2" ry="2" />
<text  x="1191.20" y="207.5" ></text>
</g>
<g >
<title>kvm_vcpu_ioctl (794 samples, 0.59%)</title><rect x="35.1" y="373" width="7.0" height="15.0" fill="rgb(246,83,10)" rx="2" ry="2" />
<text  x="38.11" y="383.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (12 samples, 0.01%)</title><rect x="24.0" y="341" width="0.1" height="15.0" fill="rgb(222,158,27)" rx="2" ry="2" />
<text  x="27.03" y="351.5" ></text>
</g>
<g >
<title>__fget (95 samples, 0.07%)</title><rect x="26.6" y="373" width="0.8" height="15.0" fill="rgb(226,36,8)" rx="2" ry="2" />
<text  x="29.61" y="383.5" ></text>
</g>
<g >
<title>ksys_write (17 samples, 0.01%)</title><rect x="1189.6" y="309" width="0.2" height="15.0" fill="rgb(222,97,42)" rx="2" ry="2" />
<text  x="1192.62" y="319.5" ></text>
</g>
<g >
<title>do_pwritev (18 samples, 0.01%)</title><rect x="24.0" y="437" width="0.2" height="15.0" fill="rgb(211,149,34)" rx="2" ry="2" />
<text  x="27.02" y="447.5" ></text>
</g>
<g >
<title>path_openat (15 samples, 0.01%)</title><rect x="16.2" y="117" width="0.1" height="15.0" fill="rgb(237,127,36)" rx="2" ry="2" />
<text  x="19.17" y="127.5" ></text>
</g>
<g >
<title>start_secondary (97,538 samples, 72.61%)</title><rect x="324.1" y="469" width="856.8" height="15.0" fill="rgb(248,35,40)" rx="2" ry="2" />
<text  x="327.06" y="479.5" >start_secondary</text>
</g>
<g >
<title>runtime.systemstack (14 samples, 0.01%)</title><rect x="11.9" y="421" width="0.1" height="15.0" fill="rgb(228,19,47)" rx="2" ry="2" />
<text  x="14.85" y="431.5" ></text>
</g>
<g >
<title>do_syscall_64 (45 samples, 0.03%)</title><rect x="18.6" y="453" width="0.4" height="15.0" fill="rgb(229,125,31)" rx="2" ry="2" />
<text  x="21.56" y="463.5" ></text>
</g>
<g >
<title>kjournald2 (70 samples, 0.05%)</title><rect x="19.4" y="453" width="0.6" height="15.0" fill="rgb(208,119,25)" rx="2" ry="2" />
<text  x="22.43" y="463.5" ></text>
</g>
<g >
<title>kvm_send_userspace_msi (20 samples, 0.01%)</title><rect x="42.1" y="357" width="0.2" height="15.0" fill="rgb(209,145,37)" rx="2" ry="2" />
<text  x="45.10" y="367.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/api/services/content/v1._Content_Write_Handler (21 samples, 0.02%)</title><rect x="13.7" y="405" width="0.2" height="15.0" fill="rgb(207,138,48)" rx="2" ry="2" />
<text  x="16.73" y="415.5" ></text>
</g>
<g >
<title>[zedbox] (41 samples, 0.03%)</title><rect x="1187.6" y="165" width="0.4" height="15.0" fill="rgb(210,155,14)" rx="2" ry="2" />
<text  x="1190.61" y="175.5" ></text>
</g>
<g >
<title>runtime.mcall (16 samples, 0.01%)</title><rect x="13.4" y="437" width="0.1" height="15.0" fill="rgb(231,151,28)" rx="2" ry="2" />
<text  x="16.36" y="447.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive/compression.(*readCloserWrapper).Read (75 samples, 0.06%)</title><rect x="16.7" y="117" width="0.7" height="15.0" fill="rgb(221,96,33)" rx="2" ry="2" />
<text  x="19.70" y="127.5" ></text>
</g>
<g >
<title>ret_from_intr (91 samples, 0.07%)</title><rect x="1178.6" y="389" width="0.8" height="15.0" fill="rgb(206,11,49)" rx="2" ry="2" />
<text  x="1181.61" y="399.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast.func1 (12 samples, 0.01%)</title><rect x="11.7" y="389" width="0.2" height="15.0" fill="rgb(216,106,21)" rx="2" ry="2" />
<text  x="14.75" y="399.5" ></text>
</g>
<g >
<title>runtime.schedule (15 samples, 0.01%)</title><rect x="13.4" y="405" width="0.1" height="15.0" fill="rgb(247,174,13)" rx="2" ry="2" />
<text  x="16.36" y="415.5" ></text>
</g>
<g >
<title>[qemu-system-x86_64] (17 samples, 0.01%)</title><rect x="33.7" y="453" width="0.1" height="15.0" fill="rgb(223,96,52)" rx="2" ry="2" />
<text  x="36.69" y="463.5" ></text>
</g>
<g >
<title>ext4_writepages (13 samples, 0.01%)</title><rect x="22.4" y="325" width="0.1" height="15.0" fill="rgb(221,84,0)" rx="2" ry="2" />
<text  x="25.35" y="335.5" ></text>
</g>
<g >
<title>containerd (846 samples, 0.63%)</title><rect x="10.6" y="501" width="7.4" height="15.0" fill="rgb(250,69,53)" rx="2" ry="2" />
<text  x="13.61" y="511.5" ></text>
</g>
<g >
<title>kvm_arch_vcpu_runnable (279 samples, 0.21%)</title><rect x="38.7" y="309" width="2.5" height="15.0" fill="rgb(237,192,9)" rx="2" ry="2" />
<text  x="41.72" y="319.5" ></text>
</g>
<g >
<title>wb_workfn (13 samples, 0.01%)</title><rect x="22.4" y="421" width="0.1" height="15.0" fill="rgb(210,219,37)" rx="2" ry="2" />
<text  x="25.35" y="431.5" ></text>
</g>
<g >
<title>[jq] (122 samples, 0.09%)</title><rect x="20.0" y="485" width="1.1" height="15.0" fill="rgb(215,63,44)" rx="2" ry="2" />
<text  x="23.05" y="495.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (121 samples, 0.09%)</title><rect x="1179.8" y="357" width="1.0" height="15.0" fill="rgb(241,12,19)" rx="2" ry="2" />
<text  x="1182.77" y="367.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (26 samples, 0.02%)</title><rect x="30.4" y="373" width="0.2" height="15.0" fill="rgb(217,36,22)" rx="2" ry="2" />
<text  x="33.35" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (23 samples, 0.02%)</title><rect x="1188.2" y="213" width="0.2" height="15.0" fill="rgb(208,146,18)" rx="2" ry="2" />
<text  x="1191.20" y="223.5" ></text>
</g>
<g >
<title>kthread (13 samples, 0.01%)</title><rect x="22.4" y="469" width="0.1" height="15.0" fill="rgb(208,180,48)" rx="2" ry="2" />
<text  x="25.35" y="479.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.01%)</title><rect x="1189.2" y="309" width="0.1" height="15.0" fill="rgb(205,202,27)" rx="2" ry="2" />
<text  x="1192.17" y="319.5" ></text>
</g>
<g >
<title>single_task_running (19 samples, 0.01%)</title><rect x="41.6" y="325" width="0.2" height="15.0" fill="rgb(251,49,44)" rx="2" ry="2" />
<text  x="44.63" y="335.5" ></text>
</g>
<g >
<title>runtime.park_m (16 samples, 0.01%)</title><rect x="13.4" y="421" width="0.1" height="15.0" fill="rgb(235,123,6)" rx="2" ry="2" />
<text  x="16.36" y="431.5" ></text>
</g>
<g >
<title>all (134,330 samples, 100%)</title><rect x="10.0" y="517" width="1180.0" height="15.0" fill="rgb(220,6,14)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>compress/gzip.(*Reader).Read (197 samples, 0.15%)</title><rect x="14.0" y="133" width="1.8" height="15.0" fill="rgb(220,19,27)" rx="2" ry="2" />
<text  x="17.03" y="143.5" ></text>
</g>
<g >
<title>kvm_apic_accept_pic_intr (15 samples, 0.01%)</title><rect x="39.8" y="261" width="0.1" height="15.0" fill="rgb(244,1,20)" rx="2" ry="2" />
<text  x="42.80" y="271.5" ></text>
</g>
<g >
<title>vfs_read (13 samples, 0.01%)</title><rect x="1188.7" y="197" width="0.1" height="15.0" fill="rgb(211,89,47)" rx="2" ry="2" />
<text  x="1191.68" y="207.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (77 samples, 0.06%)</title><rect x="29.3" y="373" width="0.7" height="15.0" fill="rgb(242,4,23)" rx="2" ry="2" />
<text  x="32.33" y="383.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/api/services/diff/v1._Diff_Apply_Handler.func1 (452 samples, 0.34%)</title><rect x="13.9" y="389" width="4.0" height="15.0" fill="rgb(246,217,11)" rx="2" ry="2" />
<text  x="16.94" y="399.5" ></text>
</g>
<g >
<title>seq_read (13 samples, 0.01%)</title><rect x="1188.7" y="181" width="0.1" height="15.0" fill="rgb(226,223,20)" rx="2" ry="2" />
<text  x="1191.68" y="191.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/diff.(*compressedProcessor).Read (197 samples, 0.15%)</title><rect x="14.0" y="165" width="1.8" height="15.0" fill="rgb(238,201,24)" rx="2" ry="2" />
<text  x="17.03" y="175.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker.func2 (54 samples, 0.04%)</title><rect x="11.2" y="437" width="0.5" height="15.0" fill="rgb(244,11,40)" rx="2" ry="2" />
<text  x="14.20" y="447.5" ></text>
</g>
<g >
<title>runtime.gentraceback (18 samples, 0.01%)</title><rect x="10.2" y="341" width="0.2" height="15.0" fill="rgb(242,44,28)" rx="2" ry="2" />
<text  x="13.23" y="351.5" ></text>
</g>
<g >
<title>do_futex (17 samples, 0.01%)</title><rect x="1181.2" y="293" width="0.2" height="15.0" fill="rgb(232,66,21)" rx="2" ry="2" />
<text  x="1184.22" y="303.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast_pidle (12 samples, 0.01%)</title><rect x="11.7" y="373" width="0.2" height="15.0" fill="rgb(239,67,21)" rx="2" ry="2" />
<text  x="14.75" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.01%)</title><rect x="1189.0" y="293" width="0.2" height="15.0" fill="rgb(253,27,33)" rx="2" ry="2" />
<text  x="1192.02" y="303.5" ></text>
</g>
<g >
<title>scsi_io_completion (48 samples, 0.04%)</title><rect x="1178.8" y="309" width="0.4" height="15.0" fill="rgb(215,32,40)" rx="2" ry="2" />
<text  x="1181.82" y="319.5" ></text>
</g>
<g >
<title>finish_task_switch (19 samples, 0.01%)</title><rect x="30.4" y="325" width="0.2" height="15.0" fill="rgb(241,70,21)" rx="2" ry="2" />
<text  x="33.41" y="335.5" ></text>
</g>
<g >
<title>__fget_light (113 samples, 0.08%)</title><rect x="26.5" y="389" width="0.9" height="15.0" fill="rgb(246,71,25)" rx="2" ry="2" />
<text  x="29.45" y="399.5" ></text>
</g>
<g >
<title>do_syscall_64 (15 samples, 0.01%)</title><rect x="16.2" y="165" width="0.1" height="15.0" fill="rgb(242,91,31)" rx="2" ry="2" />
<text  x="19.17" y="175.5" ></text>
</g>
<g >
<title>__kvm_io_bus_write (42 samples, 0.03%)</title><rect x="35.3" y="309" width="0.4" height="15.0" fill="rgb(218,67,54)" rx="2" ry="2" />
<text  x="38.30" y="319.5" ></text>
</g>
<g >
<title>blk_mq_run_hw_queue (15 samples, 0.01%)</title><rect x="22.2" y="389" width="0.1" height="15.0" fill="rgb(254,118,23)" rx="2" ry="2" />
<text  x="25.17" y="399.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (44 samples, 0.03%)</title><rect x="322.9" y="277" width="0.4" height="15.0" fill="rgb(240,40,50)" rx="2" ry="2" />
<text  x="325.93" y="287.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/diff/apply.(*readCounter).Read (75 samples, 0.06%)</title><rect x="16.7" y="165" width="0.7" height="15.0" fill="rgb(206,15,11)" rx="2" ry="2" />
<text  x="19.70" y="175.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/diff.(*compressedProcessor).Read (75 samples, 0.06%)</title><rect x="16.7" y="133" width="0.7" height="15.0" fill="rgb(219,45,9)" rx="2" ry="2" />
<text  x="19.70" y="143.5" ></text>
</g>
<g >
<title>__do_sys_pselect6 (12 samples, 0.01%)</title><rect x="22.7" y="389" width="0.2" height="15.0" fill="rgb(208,143,31)" rx="2" ry="2" />
<text  x="25.75" y="399.5" ></text>
</g>
<g >
<title>[unknown] (1,170 samples, 0.87%)</title><rect x="24.7" y="485" width="10.3" height="15.0" fill="rgb(206,48,43)" rx="2" ry="2" />
<text  x="27.68" y="495.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Write (37 samples, 0.03%)</title><rect x="15.8" y="213" width="0.3" height="15.0" fill="rgb(236,48,35)" rx="2" ry="2" />
<text  x="18.76" y="223.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive.Apply (305 samples, 0.23%)</title><rect x="13.9" y="293" width="2.7" height="15.0" fill="rgb(211,216,15)" rx="2" ry="2" />
<text  x="16.94" y="303.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/archive.copyBuffered (238 samples, 0.18%)</title><rect x="14.0" y="245" width="2.1" height="15.0" fill="rgb(237,2,24)" rx="2" ry="2" />
<text  x="17.01" y="255.5" ></text>
</g>
<g >
<title>do_syscall_64 (15 samples, 0.01%)</title><rect x="1181.4" y="357" width="0.1" height="15.0" fill="rgb(215,33,44)" rx="2" ry="2" />
<text  x="1184.38" y="367.5" ></text>
</g>
<g >
<title>end_bio_bh_io_sync (13 samples, 0.01%)</title><rect x="1179.0" y="261" width="0.2" height="15.0" fill="rgb(211,115,16)" rx="2" ry="2" />
<text  x="1182.04" y="271.5" ></text>
</g>
<g >
<title>__do_sys_futex (17 samples, 0.01%)</title><rect x="1181.2" y="309" width="0.2" height="15.0" fill="rgb(225,2,12)" rx="2" ry="2" />
<text  x="1184.22" y="319.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (91 samples, 0.07%)</title><rect x="1178.6" y="341" width="0.8" height="15.0" fill="rgb(206,196,6)" rx="2" ry="2" />
<text  x="1181.61" y="351.5" ></text>
</g>
<g >
<title>new_sync_write (14 samples, 0.01%)</title><rect x="17.4" y="85" width="0.1" height="15.0" fill="rgb(214,85,29)" rx="2" ry="2" />
<text  x="20.39" y="95.5" ></text>
</g>
<g >
<title>fstatat (13 samples, 0.01%)</title><rect x="34.0" y="453" width="0.1" height="15.0" fill="rgb(228,174,16)" rx="2" ry="2" />
<text  x="37.03" y="463.5" ></text>
</g>
<g >
<title>native_safe_halt (97,364 samples, 72.48%)</title><rect x="324.1" y="405" width="855.3" height="15.0" fill="rgb(240,125,6)" rx="2" ry="2" />
<text  x="327.13" y="415.5" >native_safe_halt</text>
</g>
<g >
<title>do_idle (32,024 samples, 23.84%)</title><rect x="42.7" y="437" width="281.4" height="15.0" fill="rgb(212,154,54)" rx="2" ry="2" />
<text  x="45.75" y="447.5" >do_idle</text>
</g>
<g >
<title>do_syscall_64 (18 samples, 0.01%)</title><rect x="1181.2" y="325" width="0.2" height="15.0" fill="rgb(221,86,38)" rx="2" ry="2" />
<text  x="1184.22" y="335.5" ></text>
</g>
<g >
<title>[unknown] (50 samples, 0.04%)</title><rect x="10.1" y="469" width="0.4" height="15.0" fill="rgb(222,165,49)" rx="2" ry="2" />
<text  x="13.11" y="479.5" ></text>
</g>
<g >
<title>runtime.entersyscallblock_handoff (13 samples, 0.01%)</title><rect x="11.9" y="405" width="0.1" height="15.0" fill="rgb(251,15,26)" rx="2" ry="2" />
<text  x="14.86" y="415.5" ></text>
</g>
<g >
<title>runtime.goexit (547 samples, 0.41%)</title><rect x="13.2" y="485" width="4.8" height="15.0" fill="rgb(242,148,32)" rx="2" ry="2" />
<text  x="16.23" y="495.5" ></text>
</g>
<g >
<title>swapper (129,562 samples, 96.45%)</title><rect x="42.7" y="501" width="1138.2" height="15.0" fill="rgb(217,148,41)" rx="2" ry="2" />
<text  x="45.75" y="511.5" >swapper</text>
</g>
<g >
<title>runtime.scanobject (37 samples, 0.03%)</title><rect x="11.3" y="405" width="0.4" height="15.0" fill="rgb(246,14,27)" rx="2" ry="2" />
<text  x="14.34" y="415.5" ></text>
</g>
<g >
<title>__blk_mq_run_hw_queue (15 samples, 0.01%)</title><rect x="22.2" y="357" width="0.1" height="15.0" fill="rgb(220,45,33)" rx="2" ry="2" />
<text  x="25.17" y="367.5" ></text>
</g>
<g >
<title>blk_mq_sched_insert_requests (14 samples, 0.01%)</title><rect x="19.6" y="373" width="0.1" height="15.0" fill="rgb(250,165,3)" rx="2" ry="2" />
<text  x="22.57" y="383.5" ></text>
</g>
</g>
</svg>
